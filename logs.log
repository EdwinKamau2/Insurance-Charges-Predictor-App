2022-07-27 13:07:53,619:INFO:Preparing display monitor
2022-07-27 13:11:06,317:INFO:Preparing display monitor
2022-07-27 13:11:08,341:INFO:PyCaret RegressionExperiment
2022-07-27 13:11:08,341:INFO:Logging name: reg-default-name
2022-07-27 13:11:08,341:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 13:11:08,341:INFO:version 3.0.0
2022-07-27 13:11:08,341:INFO:Initializing setup()
2022-07-27 13:11:08,341:INFO:self.USI: 48da
2022-07-27 13:11:08,341:INFO:self.variable_keys: {'imputation_classifier', 'n_jobs_param', 'fold_generator', 'y_test', 'iterative_imputation_iters_param', 'exp_name_log', 'y_train', 'y', 'memory', 'transform_target_param', '_all_models_internal', '_all_metrics', '_ml_usecase', 'exp_id', 'target_param', 'X_test', 'html_param', 'fold_groups_param', 'master_model_container', 'X_train', 'log_plots_param', '_available_plots', 'seed', 'X', 'fold_groups_param_full', '_all_models', 'pipeline', 'fold_shuffle_param', 'stratify_param', 'fold_param', 'variable_keys', 'logging_param', 'USI', 'experiment__', 'imputation_regressor', 'transform_target_method_param', 'display_container', '_gpu_n_jobs_param', 'data', 'gpu_param', 'idx'}
2022-07-27 13:11:08,344:INFO:Checking environment
2022-07-27 13:11:08,344:INFO:python_version: 3.9.12
2022-07-27 13:11:08,344:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 13:11:08,344:INFO:machine: AMD64
2022-07-27 13:11:08,344:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 13:11:08,344:INFO:Memory: svmem(total=8419573760, available=1223057408, percent=85.5, used=7196516352, free=1223057408)
2022-07-27 13:11:08,344:INFO:Physical Core: 4
2022-07-27 13:11:08,344:INFO:Logical Core: 8
2022-07-27 13:11:08,344:INFO:Checking libraries
2022-07-27 13:11:08,344:INFO:pd==1.4.2
2022-07-27 13:11:08,344:INFO:numpy==1.21.5
2022-07-27 13:11:08,344:INFO:sklearn==1.0.2
2022-07-27 13:11:08,742:INFO:lightgbm==3.3.2
2022-07-27 13:11:08,825:INFO:xgboost==1.6.1
2022-07-27 13:11:08,825:WARNING:catboost not found
2022-07-27 13:11:08,825:WARNING:mlflow not found
2022-07-27 13:11:08,825:INFO:Set up data.
2022-07-27 13:11:08,833:INFO:Set up target column.
2022-07-27 13:11:08,833:INFO:Set up train/test split.
2022-07-27 13:11:08,842:INFO:Set up folding strategy.
2022-07-27 13:11:08,842:INFO:Assigning column types.
2022-07-27 13:11:08,842:INFO:Preparing preprocessing pipeline...
2022-07-27 13:11:08,850:INFO:Set up simple imputation.
2022-07-27 13:11:08,858:INFO:Set up encoding of ordinal features.
2022-07-27 13:11:08,868:INFO:Set up encoding of categorical features.
2022-07-27 13:11:09,042:INFO:Finished creating preprocessing pipeline.
2022-07-27 13:11:09,059:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-07-27 13:11:09,059:INFO:Creating final display dataframe.
2022-07-27 13:11:09,059:INFO:Setup display_container:                  Description             Value
0                 Session id              1285
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15          Transform target              True
16   Transform target method           box-cox
17            Fold Generator             KFold
18               Fold Number                10
19                  CPU Jobs                -1
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              48da
2022-07-27 13:11:09,059:INFO:Preparing display monitor
2022-07-27 13:11:09,429:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:11:09,754:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:11:09,770:INFO:setup() successfully completed in 1.47s...............
2022-07-27 13:21:13,354:INFO:PyCaret RegressionExperiment
2022-07-27 13:21:13,354:INFO:Logging name: reg-default-name
2022-07-27 13:21:13,354:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 13:21:13,355:INFO:version 3.0.0
2022-07-27 13:21:13,355:INFO:Initializing setup()
2022-07-27 13:21:13,355:INFO:self.USI: 2917
2022-07-27 13:21:13,355:INFO:self.variable_keys: {'imputation_classifier', 'n_jobs_param', 'fold_generator', 'y_test', 'iterative_imputation_iters_param', 'exp_name_log', 'y_train', 'y', 'memory', 'transform_target_param', '_all_models_internal', '_all_metrics', '_ml_usecase', 'exp_id', 'target_param', 'X_test', 'html_param', 'fold_groups_param', 'master_model_container', 'X_train', 'log_plots_param', '_available_plots', 'seed', 'X', 'fold_groups_param_full', '_all_models', 'pipeline', 'fold_shuffle_param', 'stratify_param', 'fold_param', 'variable_keys', 'logging_param', 'USI', 'experiment__', 'imputation_regressor', 'transform_target_method_param', 'display_container', '_gpu_n_jobs_param', 'data', 'gpu_param', 'idx'}
2022-07-27 13:21:13,356:INFO:Checking environment
2022-07-27 13:21:13,356:INFO:python_version: 3.9.12
2022-07-27 13:21:13,356:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 13:21:13,356:INFO:machine: AMD64
2022-07-27 13:21:13,357:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 13:21:13,358:INFO:Memory: svmem(total=8419573760, available=1267204096, percent=84.9, used=7152369664, free=1267204096)
2022-07-27 13:21:13,358:INFO:Physical Core: 4
2022-07-27 13:21:13,358:INFO:Logical Core: 8
2022-07-27 13:21:13,358:INFO:Checking libraries
2022-07-27 13:21:13,358:INFO:pd==1.4.2
2022-07-27 13:21:13,359:INFO:numpy==1.21.5
2022-07-27 13:21:13,359:INFO:sklearn==1.0.2
2022-07-27 13:21:13,359:INFO:lightgbm==3.3.2
2022-07-27 13:21:13,359:INFO:xgboost==1.6.1
2022-07-27 13:21:13,362:WARNING:catboost not found
2022-07-27 13:21:13,364:WARNING:mlflow not found
2022-07-27 13:21:13,364:INFO:Set up data.
2022-07-27 13:21:13,371:INFO:Set up target column.
2022-07-27 13:21:13,371:INFO:Set up train/test split.
2022-07-27 13:21:13,378:INFO:Set up folding strategy.
2022-07-27 13:21:13,378:INFO:Assigning column types.
2022-07-27 13:21:13,384:INFO:Preparing preprocessing pipeline...
2022-07-27 13:21:13,385:INFO:Set up simple imputation.
2022-07-27 13:21:13,403:INFO:Set up encoding of ordinal features.
2022-07-27 13:21:13,411:INFO:Set up encoding of categorical features.
2022-07-27 13:21:13,411:INFO:Set up polynomial features.
2022-07-27 13:21:13,411:INFO:Set up binning of numerical features.
2022-07-27 13:21:13,419:INFO:Set up feature normalization.
2022-07-27 13:21:14,388:INFO:Finished creating preprocessing pipeline.
2022-07-27 13:21:14,404:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-27 13:21:14,404:INFO:Creating final display dataframe.
2022-07-27 13:21:14,412:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              2917
2022-07-27 13:21:14,412:INFO:Preparing display monitor
2022-07-27 13:21:14,628:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:21:14,788:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:21:14,796:INFO:setup() successfully completed in 1.44s...............
2022-07-27 13:29:10,343:INFO:Preparing display monitor
2022-07-27 13:29:12,988:INFO:PyCaret RegressionExperiment
2022-07-27 13:29:12,988:INFO:Logging name: reg-default-name
2022-07-27 13:29:12,988:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 13:29:12,988:INFO:version 3.0.0
2022-07-27 13:29:12,988:INFO:Initializing setup()
2022-07-27 13:29:12,988:INFO:self.USI: 23b4
2022-07-27 13:29:12,988:INFO:self.variable_keys: {'pipeline', 'data', 'y', 'gpu_param', 'X', 'fold_generator', 'master_model_container', '_all_models', 'iterative_imputation_iters_param', '_gpu_n_jobs_param', 'stratify_param', 'n_jobs_param', 'target_param', 'fold_groups_param_full', 'X_test', 'imputation_classifier', 'fold_groups_param', 'seed', 'exp_name_log', '_ml_usecase', '_available_plots', 'y_test', 'fold_shuffle_param', 'exp_id', '_all_metrics', 'USI', 'memory', 'logging_param', 'display_container', 'variable_keys', 'html_param', '_all_models_internal', 'log_plots_param', 'transform_target_method_param', 'transform_target_param', 'X_train', 'experiment__', 'imputation_regressor', 'y_train', 'fold_param', 'idx'}
2022-07-27 13:29:12,988:INFO:Checking environment
2022-07-27 13:29:12,988:INFO:python_version: 3.9.12
2022-07-27 13:29:12,988:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 13:29:12,988:INFO:machine: AMD64
2022-07-27 13:29:12,988:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 13:29:12,988:INFO:Memory: svmem(total=8419573760, available=919592960, percent=89.1, used=7499980800, free=919592960)
2022-07-27 13:29:12,988:INFO:Physical Core: 4
2022-07-27 13:29:12,988:INFO:Logical Core: 8
2022-07-27 13:29:12,988:INFO:Checking libraries
2022-07-27 13:29:12,988:INFO:pd==1.4.2
2022-07-27 13:29:12,988:INFO:numpy==1.21.5
2022-07-27 13:29:12,988:INFO:sklearn==1.0.2
2022-07-27 13:29:13,218:INFO:lightgbm==3.3.2
2022-07-27 13:29:13,252:INFO:xgboost==1.6.1
2022-07-27 13:29:13,252:WARNING:catboost not found
2022-07-27 13:29:13,252:WARNING:mlflow not found
2022-07-27 13:29:13,252:INFO:Set up data.
2022-07-27 13:29:13,260:INFO:Set up target column.
2022-07-27 13:29:13,260:INFO:Set up train/test split.
2022-07-27 13:29:13,260:INFO:Set up folding strategy.
2022-07-27 13:29:13,260:INFO:Assigning column types.
2022-07-27 13:29:13,260:INFO:Preparing preprocessing pipeline...
2022-07-27 13:29:13,268:INFO:Set up simple imputation.
2022-07-27 13:29:13,268:INFO:Set up encoding of ordinal features.
2022-07-27 13:29:13,276:INFO:Set up encoding of categorical features.
2022-07-27 13:29:13,276:INFO:Set up polynomial features.
2022-07-27 13:29:13,276:INFO:Set up binning of numerical features.
2022-07-27 13:29:13,276:INFO:Set up feature normalization.
2022-07-27 13:29:13,409:INFO:Finished creating preprocessing pipeline.
2022-07-27 13:29:13,427:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-27 13:29:13,427:INFO:Creating final display dataframe.
2022-07-27 13:29:13,435:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              23b4
2022-07-27 13:29:13,435:INFO:Preparing display monitor
2022-07-27 13:29:13,646:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:29:13,818:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:29:13,826:INFO:setup() successfully completed in 0.83s...............
2022-07-27 13:30:38,471:INFO:Initializing create_model()
2022-07-27 13:30:38,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 13:30:38,471:INFO:Checking exceptions
2022-07-27 13:30:38,475:INFO:Preparing display monitor
2022-07-27 13:30:38,519:INFO:Importing libraries
2022-07-27 13:30:38,519:INFO:Copying training dataset
2022-07-27 13:30:38,799:INFO:Defining folds
2022-07-27 13:30:38,799:INFO:Declaring metric variables
2022-07-27 13:30:38,815:INFO:Importing untrained model
2022-07-27 13:30:38,823:INFO:Linear Regression Imported successfully
2022-07-27 13:30:38,855:INFO:Starting cross validation
2022-07-27 13:30:38,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:30:53,605:INFO:Calculating mean and std
2022-07-27 13:30:53,613:INFO:Creating metrics dataframe
2022-07-27 13:30:54,185:INFO:Finalizing model
2022-07-27 13:30:55,088:INFO:Uploading results into container
2022-07-27 13:30:55,088:INFO:Uploading model into container now
2022-07-27 13:30:55,104:INFO:master_model_container: 1
2022-07-27 13:30:55,104:INFO:display_container: 2
2022-07-27 13:30:55,104:INFO:LinearRegression(n_jobs=-1)
2022-07-27 13:30:55,104:INFO:create_model() successfully completed......................................
2022-07-27 13:31:57,027:INFO:Initializing compare_models()
2022-07-27 13:31:57,027:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 13:31:57,027:INFO:Checking exceptions
2022-07-27 13:31:57,036:INFO:Preparing display monitor
2022-07-27 13:31:57,036:INFO:Preparing display monitor
2022-07-27 13:31:57,075:INFO:Initializing Linear Regression
2022-07-27 13:31:57,075:INFO:Total runtime is 0.0 minutes
2022-07-27 13:31:57,099:INFO:SubProcess create_model() called ==================================
2022-07-27 13:31:57,099:INFO:Initializing create_model()
2022-07-27 13:31:57,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:31:57,099:INFO:Checking exceptions
2022-07-27 13:31:57,099:INFO:Importing libraries
2022-07-27 13:31:57,099:INFO:Copying training dataset
2022-07-27 13:31:57,326:INFO:Defining folds
2022-07-27 13:31:57,326:INFO:Declaring metric variables
2022-07-27 13:31:57,342:INFO:Importing untrained model
2022-07-27 13:31:57,358:INFO:Linear Regression Imported successfully
2022-07-27 13:31:57,394:INFO:Starting cross validation
2022-07-27 13:31:57,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:31:58,381:INFO:Calculating mean and std
2022-07-27 13:31:58,381:INFO:Creating metrics dataframe
2022-07-27 13:31:58,434:INFO:Uploading results into container
2022-07-27 13:31:58,434:INFO:Uploading model into container now
2022-07-27 13:31:58,434:INFO:master_model_container: 2
2022-07-27 13:31:58,434:INFO:display_container: 3
2022-07-27 13:31:58,434:INFO:LinearRegression(n_jobs=-1)
2022-07-27 13:31:58,434:INFO:create_model() successfully completed......................................
2022-07-27 13:31:58,549:INFO:SubProcess create_model() end ==================================
2022-07-27 13:31:58,549:INFO:Creating metrics dataframe
2022-07-27 13:31:58,573:INFO:Initializing Lasso Regression
2022-07-27 13:31:58,573:INFO:Total runtime is 0.024965818723042807 minutes
2022-07-27 13:31:58,581:INFO:SubProcess create_model() called ==================================
2022-07-27 13:31:58,581:INFO:Initializing create_model()
2022-07-27 13:31:58,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:31:58,589:INFO:Checking exceptions
2022-07-27 13:31:58,589:INFO:Importing libraries
2022-07-27 13:31:58,589:INFO:Copying training dataset
2022-07-27 13:31:58,744:INFO:Defining folds
2022-07-27 13:31:58,744:INFO:Declaring metric variables
2022-07-27 13:31:58,751:INFO:Importing untrained model
2022-07-27 13:31:58,759:INFO:Lasso Regression Imported successfully
2022-07-27 13:31:58,791:INFO:Starting cross validation
2022-07-27 13:31:58,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:31:59,685:INFO:Calculating mean and std
2022-07-27 13:31:59,685:INFO:Creating metrics dataframe
2022-07-27 13:31:59,725:INFO:Uploading results into container
2022-07-27 13:31:59,733:INFO:Uploading model into container now
2022-07-27 13:31:59,733:INFO:master_model_container: 3
2022-07-27 13:31:59,733:INFO:display_container: 3
2022-07-27 13:31:59,733:INFO:Lasso(random_state=123)
2022-07-27 13:31:59,733:INFO:create_model() successfully completed......................................
2022-07-27 13:31:59,838:INFO:SubProcess create_model() end ==================================
2022-07-27 13:31:59,838:INFO:Creating metrics dataframe
2022-07-27 13:31:59,868:INFO:Initializing Ridge Regression
2022-07-27 13:31:59,868:INFO:Total runtime is 0.04656355381011963 minutes
2022-07-27 13:31:59,880:INFO:SubProcess create_model() called ==================================
2022-07-27 13:31:59,880:INFO:Initializing create_model()
2022-07-27 13:31:59,880:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:31:59,880:INFO:Checking exceptions
2022-07-27 13:31:59,888:INFO:Importing libraries
2022-07-27 13:31:59,888:INFO:Copying training dataset
2022-07-27 13:32:00,044:INFO:Defining folds
2022-07-27 13:32:00,044:INFO:Declaring metric variables
2022-07-27 13:32:00,055:INFO:Importing untrained model
2022-07-27 13:32:00,063:INFO:Ridge Regression Imported successfully
2022-07-27 13:32:00,087:INFO:Starting cross validation
2022-07-27 13:32:00,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:00,903:INFO:Calculating mean and std
2022-07-27 13:32:00,903:INFO:Creating metrics dataframe
2022-07-27 13:32:00,951:INFO:Uploading results into container
2022-07-27 13:32:00,951:INFO:Uploading model into container now
2022-07-27 13:32:00,951:INFO:master_model_container: 4
2022-07-27 13:32:00,951:INFO:display_container: 3
2022-07-27 13:32:00,951:INFO:Ridge(random_state=123)
2022-07-27 13:32:00,951:INFO:create_model() successfully completed......................................
2022-07-27 13:32:01,087:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:01,087:INFO:Creating metrics dataframe
2022-07-27 13:32:01,119:INFO:Initializing Elastic Net
2022-07-27 13:32:01,119:INFO:Total runtime is 0.06740395228068034 minutes
2022-07-27 13:32:01,127:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:01,127:INFO:Initializing create_model()
2022-07-27 13:32:01,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:01,135:INFO:Checking exceptions
2022-07-27 13:32:01,135:INFO:Importing libraries
2022-07-27 13:32:01,135:INFO:Copying training dataset
2022-07-27 13:32:01,296:INFO:Defining folds
2022-07-27 13:32:01,296:INFO:Declaring metric variables
2022-07-27 13:32:01,311:INFO:Importing untrained model
2022-07-27 13:32:01,319:INFO:Elastic Net Imported successfully
2022-07-27 13:32:01,351:INFO:Starting cross validation
2022-07-27 13:32:01,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:02,258:INFO:Calculating mean and std
2022-07-27 13:32:02,258:INFO:Creating metrics dataframe
2022-07-27 13:32:02,306:INFO:Uploading results into container
2022-07-27 13:32:02,306:INFO:Uploading model into container now
2022-07-27 13:32:02,306:INFO:master_model_container: 5
2022-07-27 13:32:02,306:INFO:display_container: 3
2022-07-27 13:32:02,314:INFO:ElasticNet(random_state=123)
2022-07-27 13:32:02,314:INFO:create_model() successfully completed......................................
2022-07-27 13:32:02,458:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:02,458:INFO:Creating metrics dataframe
2022-07-27 13:32:02,483:INFO:Initializing Least Angle Regression
2022-07-27 13:32:02,483:INFO:Total runtime is 0.09014377196629843 minutes
2022-07-27 13:32:02,501:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:02,501:INFO:Initializing create_model()
2022-07-27 13:32:02,501:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:02,501:INFO:Checking exceptions
2022-07-27 13:32:02,501:INFO:Importing libraries
2022-07-27 13:32:02,501:INFO:Copying training dataset
2022-07-27 13:32:02,677:INFO:Defining folds
2022-07-27 13:32:02,677:INFO:Declaring metric variables
2022-07-27 13:32:02,693:INFO:Importing untrained model
2022-07-27 13:32:02,709:INFO:Least Angle Regression Imported successfully
2022-07-27 13:32:02,741:INFO:Starting cross validation
2022-07-27 13:32:02,748:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:03,664:INFO:Calculating mean and std
2022-07-27 13:32:03,666:INFO:Creating metrics dataframe
2022-07-27 13:32:03,751:INFO:Uploading results into container
2022-07-27 13:32:03,759:INFO:Uploading model into container now
2022-07-27 13:32:03,759:INFO:master_model_container: 6
2022-07-27 13:32:03,759:INFO:display_container: 3
2022-07-27 13:32:03,759:INFO:Lars(random_state=123)
2022-07-27 13:32:03,759:INFO:create_model() successfully completed......................................
2022-07-27 13:32:03,984:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:03,984:INFO:Creating metrics dataframe
2022-07-27 13:32:04,024:INFO:Initializing Lasso Least Angle Regression
2022-07-27 13:32:04,024:INFO:Total runtime is 0.11582167148590089 minutes
2022-07-27 13:32:04,033:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:04,033:INFO:Initializing create_model()
2022-07-27 13:32:04,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:04,033:INFO:Checking exceptions
2022-07-27 13:32:04,041:INFO:Importing libraries
2022-07-27 13:32:04,041:INFO:Copying training dataset
2022-07-27 13:32:04,211:INFO:Defining folds
2022-07-27 13:32:04,211:INFO:Declaring metric variables
2022-07-27 13:32:04,219:INFO:Importing untrained model
2022-07-27 13:32:04,235:INFO:Lasso Least Angle Regression Imported successfully
2022-07-27 13:32:04,259:INFO:Starting cross validation
2022-07-27 13:32:04,259:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:05,174:INFO:Calculating mean and std
2022-07-27 13:32:05,174:INFO:Creating metrics dataframe
2022-07-27 13:32:05,222:INFO:Uploading results into container
2022-07-27 13:32:05,222:INFO:Uploading model into container now
2022-07-27 13:32:05,222:INFO:master_model_container: 7
2022-07-27 13:32:05,222:INFO:display_container: 3
2022-07-27 13:32:05,222:INFO:LassoLars(random_state=123)
2022-07-27 13:32:05,222:INFO:create_model() successfully completed......................................
2022-07-27 13:32:05,330:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:05,330:INFO:Creating metrics dataframe
2022-07-27 13:32:05,358:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 13:32:05,358:INFO:Total runtime is 0.13805586099624634 minutes
2022-07-27 13:32:05,374:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:05,374:INFO:Initializing create_model()
2022-07-27 13:32:05,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:05,374:INFO:Checking exceptions
2022-07-27 13:32:05,382:INFO:Importing libraries
2022-07-27 13:32:05,382:INFO:Copying training dataset
2022-07-27 13:32:05,542:INFO:Defining folds
2022-07-27 13:32:05,542:INFO:Declaring metric variables
2022-07-27 13:32:05,558:INFO:Importing untrained model
2022-07-27 13:32:05,566:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-27 13:32:05,598:INFO:Starting cross validation
2022-07-27 13:32:05,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:06,420:INFO:Calculating mean and std
2022-07-27 13:32:06,428:INFO:Creating metrics dataframe
2022-07-27 13:32:06,525:INFO:Uploading results into container
2022-07-27 13:32:06,525:INFO:Uploading model into container now
2022-07-27 13:32:06,525:INFO:master_model_container: 8
2022-07-27 13:32:06,525:INFO:display_container: 3
2022-07-27 13:32:06,525:INFO:OrthogonalMatchingPursuit()
2022-07-27 13:32:06,525:INFO:create_model() successfully completed......................................
2022-07-27 13:32:06,669:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:06,669:INFO:Creating metrics dataframe
2022-07-27 13:32:06,701:INFO:Initializing Bayesian Ridge
2022-07-27 13:32:06,701:INFO:Total runtime is 0.16043333212534586 minutes
2022-07-27 13:32:06,717:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:06,717:INFO:Initializing create_model()
2022-07-27 13:32:06,717:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:06,717:INFO:Checking exceptions
2022-07-27 13:32:06,717:INFO:Importing libraries
2022-07-27 13:32:06,717:INFO:Copying training dataset
2022-07-27 13:32:06,869:INFO:Defining folds
2022-07-27 13:32:06,869:INFO:Declaring metric variables
2022-07-27 13:32:06,877:INFO:Importing untrained model
2022-07-27 13:32:06,893:INFO:Bayesian Ridge Imported successfully
2022-07-27 13:32:06,917:INFO:Starting cross validation
2022-07-27 13:32:06,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:07,715:INFO:Calculating mean and std
2022-07-27 13:32:07,717:INFO:Creating metrics dataframe
2022-07-27 13:32:07,759:INFO:Uploading results into container
2022-07-27 13:32:07,765:INFO:Uploading model into container now
2022-07-27 13:32:07,766:INFO:master_model_container: 9
2022-07-27 13:32:07,766:INFO:display_container: 3
2022-07-27 13:32:07,766:INFO:BayesianRidge()
2022-07-27 13:32:07,766:INFO:create_model() successfully completed......................................
2022-07-27 13:32:07,867:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:07,867:INFO:Creating metrics dataframe
2022-07-27 13:32:07,898:INFO:Initializing Passive Aggressive Regressor
2022-07-27 13:32:07,898:INFO:Total runtime is 0.18038648764292398 minutes
2022-07-27 13:32:07,914:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:07,914:INFO:Initializing create_model()
2022-07-27 13:32:07,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:07,914:INFO:Checking exceptions
2022-07-27 13:32:07,914:INFO:Importing libraries
2022-07-27 13:32:07,922:INFO:Copying training dataset
2022-07-27 13:32:08,058:INFO:Defining folds
2022-07-27 13:32:08,058:INFO:Declaring metric variables
2022-07-27 13:32:08,074:INFO:Importing untrained model
2022-07-27 13:32:08,082:INFO:Passive Aggressive Regressor Imported successfully
2022-07-27 13:32:08,111:INFO:Starting cross validation
2022-07-27 13:32:08,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:09,350:INFO:Calculating mean and std
2022-07-27 13:32:09,350:INFO:Creating metrics dataframe
2022-07-27 13:32:09,391:INFO:Uploading results into container
2022-07-27 13:32:09,391:INFO:Uploading model into container now
2022-07-27 13:32:09,391:INFO:master_model_container: 10
2022-07-27 13:32:09,391:INFO:display_container: 3
2022-07-27 13:32:09,391:INFO:PassiveAggressiveRegressor(random_state=123)
2022-07-27 13:32:09,391:INFO:create_model() successfully completed......................................
2022-07-27 13:32:09,507:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:09,507:INFO:Creating metrics dataframe
2022-07-27 13:32:09,556:INFO:Initializing Huber Regressor
2022-07-27 13:32:09,556:INFO:Total runtime is 0.20801896651585894 minutes
2022-07-27 13:32:09,572:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:09,572:INFO:Initializing create_model()
2022-07-27 13:32:09,572:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:09,580:INFO:Checking exceptions
2022-07-27 13:32:09,580:INFO:Importing libraries
2022-07-27 13:32:09,580:INFO:Copying training dataset
2022-07-27 13:32:09,892:INFO:Defining folds
2022-07-27 13:32:09,892:INFO:Declaring metric variables
2022-07-27 13:32:09,908:INFO:Importing untrained model
2022-07-27 13:32:09,924:INFO:Huber Regressor Imported successfully
2022-07-27 13:32:09,948:INFO:Starting cross validation
2022-07-27 13:32:09,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:11,211:INFO:Calculating mean and std
2022-07-27 13:32:11,213:INFO:Creating metrics dataframe
2022-07-27 13:32:11,264:INFO:Uploading results into container
2022-07-27 13:32:11,264:INFO:Uploading model into container now
2022-07-27 13:32:11,264:INFO:master_model_container: 11
2022-07-27 13:32:11,264:INFO:display_container: 3
2022-07-27 13:32:11,264:INFO:HuberRegressor()
2022-07-27 13:32:11,264:INFO:create_model() successfully completed......................................
2022-07-27 13:32:11,424:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:11,424:INFO:Creating metrics dataframe
2022-07-27 13:32:11,458:INFO:Initializing K Neighbors Regressor
2022-07-27 13:32:11,458:INFO:Total runtime is 0.23971744378407794 minutes
2022-07-27 13:32:11,474:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:11,474:INFO:Initializing create_model()
2022-07-27 13:32:11,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:11,474:INFO:Checking exceptions
2022-07-27 13:32:11,482:INFO:Importing libraries
2022-07-27 13:32:11,482:INFO:Copying training dataset
2022-07-27 13:32:11,659:INFO:Defining folds
2022-07-27 13:32:11,659:INFO:Declaring metric variables
2022-07-27 13:32:11,675:INFO:Importing untrained model
2022-07-27 13:32:11,683:INFO:K Neighbors Regressor Imported successfully
2022-07-27 13:32:11,715:INFO:Starting cross validation
2022-07-27 13:32:11,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:12,762:INFO:Calculating mean and std
2022-07-27 13:32:12,762:INFO:Creating metrics dataframe
2022-07-27 13:32:12,894:INFO:Uploading results into container
2022-07-27 13:32:12,894:INFO:Uploading model into container now
2022-07-27 13:32:12,894:INFO:master_model_container: 12
2022-07-27 13:32:12,894:INFO:display_container: 3
2022-07-27 13:32:12,894:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-27 13:32:12,894:INFO:create_model() successfully completed......................................
2022-07-27 13:32:13,059:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:13,059:INFO:Creating metrics dataframe
2022-07-27 13:32:13,132:INFO:Initializing Decision Tree Regressor
2022-07-27 13:32:13,132:INFO:Total runtime is 0.2676177104314168 minutes
2022-07-27 13:32:13,148:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:13,148:INFO:Initializing create_model()
2022-07-27 13:32:13,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:13,148:INFO:Checking exceptions
2022-07-27 13:32:13,156:INFO:Importing libraries
2022-07-27 13:32:13,156:INFO:Copying training dataset
2022-07-27 13:32:13,324:INFO:Defining folds
2022-07-27 13:32:13,324:INFO:Declaring metric variables
2022-07-27 13:32:13,342:INFO:Importing untrained model
2022-07-27 13:32:13,357:INFO:Decision Tree Regressor Imported successfully
2022-07-27 13:32:13,381:INFO:Starting cross validation
2022-07-27 13:32:13,381:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:14,288:INFO:Calculating mean and std
2022-07-27 13:32:14,288:INFO:Creating metrics dataframe
2022-07-27 13:32:14,328:INFO:Uploading results into container
2022-07-27 13:32:14,328:INFO:Uploading model into container now
2022-07-27 13:32:14,328:INFO:master_model_container: 13
2022-07-27 13:32:14,328:INFO:display_container: 3
2022-07-27 13:32:14,336:INFO:DecisionTreeRegressor(random_state=123)
2022-07-27 13:32:14,336:INFO:create_model() successfully completed......................................
2022-07-27 13:32:14,445:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:14,445:INFO:Creating metrics dataframe
2022-07-27 13:32:14,473:INFO:Initializing Random Forest Regressor
2022-07-27 13:32:14,474:INFO:Total runtime is 0.28998485406239827 minutes
2022-07-27 13:32:14,482:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:14,482:INFO:Initializing create_model()
2022-07-27 13:32:14,482:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:14,482:INFO:Checking exceptions
2022-07-27 13:32:14,490:INFO:Importing libraries
2022-07-27 13:32:14,490:INFO:Copying training dataset
2022-07-27 13:32:14,650:INFO:Defining folds
2022-07-27 13:32:14,650:INFO:Declaring metric variables
2022-07-27 13:32:14,658:INFO:Importing untrained model
2022-07-27 13:32:14,666:INFO:Random Forest Regressor Imported successfully
2022-07-27 13:32:14,690:INFO:Starting cross validation
2022-07-27 13:32:14,698:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:17,924:INFO:Calculating mean and std
2022-07-27 13:32:17,932:INFO:Creating metrics dataframe
2022-07-27 13:32:17,973:INFO:Uploading results into container
2022-07-27 13:32:17,973:INFO:Uploading model into container now
2022-07-27 13:32:17,973:INFO:master_model_container: 14
2022-07-27 13:32:17,973:INFO:display_container: 3
2022-07-27 13:32:17,973:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-07-27 13:32:17,973:INFO:create_model() successfully completed......................................
2022-07-27 13:32:18,080:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:18,080:INFO:Creating metrics dataframe
2022-07-27 13:32:18,112:INFO:Initializing Extra Trees Regressor
2022-07-27 13:32:18,112:INFO:Total runtime is 0.35061709880828856 minutes
2022-07-27 13:32:18,128:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:18,128:INFO:Initializing create_model()
2022-07-27 13:32:18,128:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:18,128:INFO:Checking exceptions
2022-07-27 13:32:18,128:INFO:Importing libraries
2022-07-27 13:32:18,128:INFO:Copying training dataset
2022-07-27 13:32:18,273:INFO:Defining folds
2022-07-27 13:32:18,273:INFO:Declaring metric variables
2022-07-27 13:32:18,290:INFO:Importing untrained model
2022-07-27 13:32:18,298:INFO:Extra Trees Regressor Imported successfully
2022-07-27 13:32:18,322:INFO:Starting cross validation
2022-07-27 13:32:18,330:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:21,098:INFO:Calculating mean and std
2022-07-27 13:32:21,098:INFO:Creating metrics dataframe
2022-07-27 13:32:21,156:INFO:Uploading results into container
2022-07-27 13:32:21,156:INFO:Uploading model into container now
2022-07-27 13:32:21,156:INFO:master_model_container: 15
2022-07-27 13:32:21,156:INFO:display_container: 3
2022-07-27 13:32:21,156:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-07-27 13:32:21,156:INFO:create_model() successfully completed......................................
2022-07-27 13:32:21,340:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:21,340:INFO:Creating metrics dataframe
2022-07-27 13:32:21,428:INFO:Initializing AdaBoost Regressor
2022-07-27 13:32:21,428:INFO:Total runtime is 0.4058971842130025 minutes
2022-07-27 13:32:21,460:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:21,460:INFO:Initializing create_model()
2022-07-27 13:32:21,460:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:21,460:INFO:Checking exceptions
2022-07-27 13:32:21,468:INFO:Importing libraries
2022-07-27 13:32:21,468:INFO:Copying training dataset
2022-07-27 13:32:21,789:INFO:Defining folds
2022-07-27 13:32:21,797:INFO:Declaring metric variables
2022-07-27 13:32:21,805:INFO:Importing untrained model
2022-07-27 13:32:21,821:INFO:AdaBoost Regressor Imported successfully
2022-07-27 13:32:21,861:INFO:Starting cross validation
2022-07-27 13:32:21,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:23,074:INFO:Calculating mean and std
2022-07-27 13:32:23,074:INFO:Creating metrics dataframe
2022-07-27 13:32:23,106:INFO:Uploading results into container
2022-07-27 13:32:23,106:INFO:Uploading model into container now
2022-07-27 13:32:23,106:INFO:master_model_container: 16
2022-07-27 13:32:23,106:INFO:display_container: 3
2022-07-27 13:32:23,106:INFO:AdaBoostRegressor(random_state=123)
2022-07-27 13:32:23,114:INFO:create_model() successfully completed......................................
2022-07-27 13:32:23,214:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:23,214:INFO:Creating metrics dataframe
2022-07-27 13:32:23,248:INFO:Initializing Gradient Boosting Regressor
2022-07-27 13:32:23,248:INFO:Total runtime is 0.4362170139948527 minutes
2022-07-27 13:32:23,256:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:23,256:INFO:Initializing create_model()
2022-07-27 13:32:23,256:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:23,256:INFO:Checking exceptions
2022-07-27 13:32:23,256:INFO:Importing libraries
2022-07-27 13:32:23,256:INFO:Copying training dataset
2022-07-27 13:32:23,416:INFO:Defining folds
2022-07-27 13:32:23,416:INFO:Declaring metric variables
2022-07-27 13:32:23,424:INFO:Importing untrained model
2022-07-27 13:32:23,432:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 13:32:23,456:INFO:Starting cross validation
2022-07-27 13:32:23,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:25,115:INFO:Calculating mean and std
2022-07-27 13:32:25,115:INFO:Creating metrics dataframe
2022-07-27 13:32:25,155:INFO:Uploading results into container
2022-07-27 13:32:25,155:INFO:Uploading model into container now
2022-07-27 13:32:25,155:INFO:master_model_container: 17
2022-07-27 13:32:25,155:INFO:display_container: 3
2022-07-27 13:32:25,155:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 13:32:25,155:INFO:create_model() successfully completed......................................
2022-07-27 13:32:25,256:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:25,256:INFO:Creating metrics dataframe
2022-07-27 13:32:25,296:INFO:Initializing Extreme Gradient Boosting
2022-07-27 13:32:25,296:INFO:Total runtime is 0.47035860220591225 minutes
2022-07-27 13:32:25,304:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:25,312:INFO:Initializing create_model()
2022-07-27 13:32:25,312:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:25,312:INFO:Checking exceptions
2022-07-27 13:32:25,312:INFO:Importing libraries
2022-07-27 13:32:25,312:INFO:Copying training dataset
2022-07-27 13:32:25,472:INFO:Defining folds
2022-07-27 13:32:25,472:INFO:Declaring metric variables
2022-07-27 13:32:25,481:INFO:Importing untrained model
2022-07-27 13:32:25,489:INFO:Extreme Gradient Boosting Imported successfully
2022-07-27 13:32:25,521:INFO:Starting cross validation
2022-07-27 13:32:25,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:27,798:INFO:Calculating mean and std
2022-07-27 13:32:27,798:INFO:Creating metrics dataframe
2022-07-27 13:32:27,838:INFO:Uploading results into container
2022-07-27 13:32:27,838:INFO:Uploading model into container now
2022-07-27 13:32:27,838:INFO:master_model_container: 18
2022-07-27 13:32:27,838:INFO:display_container: 3
2022-07-27 13:32:27,846:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-27 13:32:27,846:INFO:create_model() successfully completed......................................
2022-07-27 13:32:27,950:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:27,950:INFO:Creating metrics dataframe
2022-07-27 13:32:27,990:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 13:32:27,990:INFO:Total runtime is 0.5152563055356343 minutes
2022-07-27 13:32:27,999:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:27,999:INFO:Initializing create_model()
2022-07-27 13:32:27,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:27,999:INFO:Checking exceptions
2022-07-27 13:32:27,999:INFO:Importing libraries
2022-07-27 13:32:27,999:INFO:Copying training dataset
2022-07-27 13:32:28,150:INFO:Defining folds
2022-07-27 13:32:28,150:INFO:Declaring metric variables
2022-07-27 13:32:28,158:INFO:Importing untrained model
2022-07-27 13:32:28,174:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-27 13:32:28,198:INFO:Starting cross validation
2022-07-27 13:32:28,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:31,738:INFO:Calculating mean and std
2022-07-27 13:32:31,738:INFO:Creating metrics dataframe
2022-07-27 13:32:31,781:INFO:Uploading results into container
2022-07-27 13:32:31,781:INFO:Uploading model into container now
2022-07-27 13:32:31,781:INFO:master_model_container: 19
2022-07-27 13:32:31,781:INFO:display_container: 3
2022-07-27 13:32:31,781:INFO:LGBMRegressor(random_state=123)
2022-07-27 13:32:31,781:INFO:create_model() successfully completed......................................
2022-07-27 13:32:31,888:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:31,888:INFO:Creating metrics dataframe
2022-07-27 13:32:31,918:INFO:Initializing Dummy Regressor
2022-07-27 13:32:31,926:INFO:Total runtime is 0.5808535814285277 minutes
2022-07-27 13:32:31,934:INFO:SubProcess create_model() called ==================================
2022-07-27 13:32:31,934:INFO:Initializing create_model()
2022-07-27 13:32:31,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E1E37E9130>, kwargs={})
2022-07-27 13:32:31,934:INFO:Checking exceptions
2022-07-27 13:32:31,942:INFO:Importing libraries
2022-07-27 13:32:31,942:INFO:Copying training dataset
2022-07-27 13:32:32,094:INFO:Defining folds
2022-07-27 13:32:32,094:INFO:Declaring metric variables
2022-07-27 13:32:32,102:INFO:Importing untrained model
2022-07-27 13:32:32,118:INFO:Dummy Regressor Imported successfully
2022-07-27 13:32:32,142:INFO:Starting cross validation
2022-07-27 13:32:32,142:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:32:32,869:INFO:Calculating mean and std
2022-07-27 13:32:32,869:INFO:Creating metrics dataframe
2022-07-27 13:32:32,980:INFO:Uploading results into container
2022-07-27 13:32:32,980:INFO:Uploading model into container now
2022-07-27 13:32:32,980:INFO:master_model_container: 20
2022-07-27 13:32:32,981:INFO:display_container: 3
2022-07-27 13:32:32,982:INFO:DummyRegressor()
2022-07-27 13:32:32,982:INFO:create_model() successfully completed......................................
2022-07-27 13:32:33,274:INFO:SubProcess create_model() end ==================================
2022-07-27 13:32:33,274:INFO:Creating metrics dataframe
2022-07-27 13:32:33,389:INFO:Initializing create_model()
2022-07-27 13:32:33,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 13:32:33,389:INFO:Checking exceptions
2022-07-27 13:32:33,397:INFO:Importing libraries
2022-07-27 13:32:33,397:INFO:Copying training dataset
2022-07-27 13:32:33,597:INFO:Defining folds
2022-07-27 13:32:33,597:INFO:Declaring metric variables
2022-07-27 13:32:33,597:INFO:Importing untrained model
2022-07-27 13:32:33,597:INFO:Declaring custom model
2022-07-27 13:32:33,597:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 13:32:33,605:INFO:Cross validation set to False
2022-07-27 13:32:33,605:INFO:Fitting Model
2022-07-27 13:32:34,088:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 13:32:34,088:INFO:create_models() successfully completed......................................
2022-07-27 13:32:34,247:INFO:master_model_container: 20
2022-07-27 13:32:34,247:INFO:display_container: 3
2022-07-27 13:32:34,247:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 13:32:34,247:INFO:compare_models() successfully completed......................................
2022-07-27 13:37:16,059:INFO:Initializing plot_model()
2022-07-27 13:37:16,067:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E1E45C1790>, system=True)
2022-07-27 13:37:16,067:INFO:Checking exceptions
2022-07-27 13:37:16,107:INFO:Preparing display monitor
2022-07-27 13:37:16,115:INFO:Preloading libraries
2022-07-27 13:37:16,139:INFO:Copying training dataset
2022-07-27 13:37:16,139:INFO:Plot type: feature
2022-07-27 13:37:16,139:WARNING:No coef_ found. Trying feature_importances_
2022-07-27 13:37:16,650:INFO:Visual Rendered Successfully
2022-07-27 13:37:16,811:INFO:plot_model() successfully completed......................................
2022-07-27 13:56:47,875:INFO:Preparing display monitor
2022-07-27 13:56:51,433:INFO:PyCaret RegressionExperiment
2022-07-27 13:56:51,433:INFO:Logging name: reg-default-name
2022-07-27 13:56:51,433:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 13:56:51,433:INFO:version 3.0.0
2022-07-27 13:56:51,433:INFO:Initializing setup()
2022-07-27 13:56:51,433:INFO:self.USI: 1b08
2022-07-27 13:56:51,433:INFO:self.variable_keys: {'_gpu_n_jobs_param', 'fold_param', 'memory', 'fold_groups_param', 'X', 'y_train', 'exp_id', 'y', 'html_param', 'pipeline', 'idx', 'USI', '_available_plots', 'display_container', 'target_param', 'data', 'transform_target_method_param', 'seed', 'fold_shuffle_param', 'iterative_imputation_iters_param', 'variable_keys', 'logging_param', '_all_metrics', 'gpu_param', 'transform_target_param', '_all_models_internal', 'fold_generator', 'imputation_regressor', 'stratify_param', '_ml_usecase', 'fold_groups_param_full', '_all_models', 'X_test', 'experiment__', 'y_test', 'master_model_container', 'n_jobs_param', 'imputation_classifier', 'log_plots_param', 'X_train', 'exp_name_log'}
2022-07-27 13:56:51,433:INFO:Checking environment
2022-07-27 13:56:51,433:INFO:python_version: 3.9.12
2022-07-27 13:56:51,433:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 13:56:51,433:INFO:machine: AMD64
2022-07-27 13:56:51,433:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 13:56:51,433:INFO:Memory: svmem(total=8419573760, available=1945063424, percent=76.9, used=6474510336, free=1945063424)
2022-07-27 13:56:51,433:INFO:Physical Core: 4
2022-07-27 13:56:51,433:INFO:Logical Core: 8
2022-07-27 13:56:51,433:INFO:Checking libraries
2022-07-27 13:56:51,433:INFO:pd==1.4.2
2022-07-27 13:56:51,441:INFO:numpy==1.21.5
2022-07-27 13:56:51,441:INFO:sklearn==1.0.2
2022-07-27 13:56:51,675:INFO:lightgbm==3.3.2
2022-07-27 13:56:51,717:INFO:xgboost==1.6.1
2022-07-27 13:56:51,717:WARNING:catboost not found
2022-07-27 13:56:51,725:WARNING:mlflow not found
2022-07-27 13:56:51,725:INFO:Set up data.
2022-07-27 13:56:51,725:INFO:Set up target column.
2022-07-27 13:56:51,725:INFO:Set up train/test split.
2022-07-27 13:56:51,733:INFO:Set up folding strategy.
2022-07-27 13:56:51,733:INFO:Assigning column types.
2022-07-27 13:56:51,733:INFO:Preparing preprocessing pipeline...
2022-07-27 13:56:51,733:INFO:Set up simple imputation.
2022-07-27 13:56:51,742:INFO:Set up encoding of ordinal features.
2022-07-27 13:56:51,758:INFO:Set up encoding of categorical features.
2022-07-27 13:56:52,025:INFO:Finished creating preprocessing pipeline.
2022-07-27 13:56:52,042:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-07-27 13:56:52,042:INFO:Creating final display dataframe.
2022-07-27 13:56:52,058:INFO:Setup display_container:                  Description             Value
0                 Session id              7980
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15          Transform target              True
16   Transform target method           box-cox
17            Fold Generator             KFold
18               Fold Number                10
19                  CPU Jobs                -1
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              1b08
2022-07-27 13:56:52,058:INFO:Preparing display monitor
2022-07-27 13:56:52,386:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:56:52,599:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:56:52,616:INFO:setup() successfully completed in 1.17s...............
2022-07-27 13:56:52,736:INFO:Initializing create_model()
2022-07-27 13:56:52,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 13:56:52,744:INFO:Checking exceptions
2022-07-27 13:56:52,744:INFO:Preparing display monitor
2022-07-27 13:56:52,776:INFO:Importing libraries
2022-07-27 13:56:52,784:INFO:Copying training dataset
2022-07-27 13:56:52,832:INFO:Defining folds
2022-07-27 13:56:52,832:INFO:Declaring metric variables
2022-07-27 13:56:52,848:INFO:Importing untrained model
2022-07-27 13:58:00,109:INFO:Initializing create_model()
2022-07-27 13:58:00,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 13:58:00,109:INFO:Checking exceptions
2022-07-27 13:58:00,117:INFO:Preparing display monitor
2022-07-27 13:58:00,141:INFO:Importing libraries
2022-07-27 13:58:00,141:INFO:Copying training dataset
2022-07-27 13:58:00,200:INFO:Defining folds
2022-07-27 13:58:00,200:INFO:Declaring metric variables
2022-07-27 13:58:00,216:INFO:Importing untrained model
2022-07-27 13:58:07,808:INFO:Initializing compare_models()
2022-07-27 13:58:07,808:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 13:58:07,808:INFO:Checking exceptions
2022-07-27 13:58:07,818:INFO:Preparing display monitor
2022-07-27 13:58:07,818:INFO:Preparing display monitor
2022-07-27 13:58:07,857:INFO:Initializing Linear Regression
2022-07-27 13:58:07,857:INFO:Total runtime is 0.0 minutes
2022-07-27 13:58:07,873:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:07,873:INFO:Initializing create_model()
2022-07-27 13:58:07,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:07,873:INFO:Checking exceptions
2022-07-27 13:58:07,873:INFO:Importing libraries
2022-07-27 13:58:07,873:INFO:Copying training dataset
2022-07-27 13:58:07,945:INFO:Defining folds
2022-07-27 13:58:07,945:INFO:Declaring metric variables
2022-07-27 13:58:07,962:INFO:Importing untrained model
2022-07-27 13:58:07,977:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:07,977:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:07,977:INFO:Initializing create_model()
2022-07-27 13:58:07,977:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:07,985:INFO:Checking exceptions
2022-07-27 13:58:07,985:INFO:Importing libraries
2022-07-27 13:58:07,985:INFO:Copying training dataset
2022-07-27 13:58:08,057:INFO:Defining folds
2022-07-27 13:58:08,057:INFO:Declaring metric variables
2022-07-27 13:58:08,073:INFO:Importing untrained model
2022-07-27 13:58:08,081:ERROR:create_model() for lr raised an exception or returned all 0.0:
2022-07-27 13:58:08,081:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,081:INFO:Initializing Lasso Regression
2022-07-27 13:58:08,081:INFO:Total runtime is 0.0037381847699483237 minutes
2022-07-27 13:58:08,097:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,097:INFO:Initializing create_model()
2022-07-27 13:58:08,097:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,097:INFO:Checking exceptions
2022-07-27 13:58:08,097:INFO:Importing libraries
2022-07-27 13:58:08,097:INFO:Copying training dataset
2022-07-27 13:58:08,147:INFO:Defining folds
2022-07-27 13:58:08,147:INFO:Declaring metric variables
2022-07-27 13:58:08,154:INFO:Importing untrained model
2022-07-27 13:58:08,161:WARNING:create_model() for lasso raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:08,170:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,170:INFO:Initializing create_model()
2022-07-27 13:58:08,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,170:INFO:Checking exceptions
2022-07-27 13:58:08,170:INFO:Importing libraries
2022-07-27 13:58:08,170:INFO:Copying training dataset
2022-07-27 13:58:08,223:INFO:Defining folds
2022-07-27 13:58:08,223:INFO:Declaring metric variables
2022-07-27 13:58:08,231:INFO:Importing untrained model
2022-07-27 13:58:08,247:ERROR:create_model() for lasso raised an exception or returned all 0.0:
2022-07-27 13:58:08,247:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,247:INFO:Initializing Ridge Regression
2022-07-27 13:58:08,247:INFO:Total runtime is 0.006504658857981364 minutes
2022-07-27 13:58:08,263:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,263:INFO:Initializing create_model()
2022-07-27 13:58:08,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,263:INFO:Checking exceptions
2022-07-27 13:58:08,263:INFO:Importing libraries
2022-07-27 13:58:08,263:INFO:Copying training dataset
2022-07-27 13:58:08,319:INFO:Defining folds
2022-07-27 13:58:08,319:INFO:Declaring metric variables
2022-07-27 13:58:08,327:INFO:Importing untrained model
2022-07-27 13:58:08,343:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:08,343:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,343:INFO:Initializing create_model()
2022-07-27 13:58:08,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,343:INFO:Checking exceptions
2022-07-27 13:58:08,343:INFO:Importing libraries
2022-07-27 13:58:08,343:INFO:Copying training dataset
2022-07-27 13:58:08,391:INFO:Defining folds
2022-07-27 13:58:08,391:INFO:Declaring metric variables
2022-07-27 13:58:08,407:INFO:Importing untrained model
2022-07-27 13:58:08,415:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2022-07-27 13:58:08,415:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,415:INFO:Initializing Elastic Net
2022-07-27 13:58:08,415:INFO:Total runtime is 0.009307571252187093 minutes
2022-07-27 13:58:08,431:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,431:INFO:Initializing create_model()
2022-07-27 13:58:08,431:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,431:INFO:Checking exceptions
2022-07-27 13:58:08,431:INFO:Importing libraries
2022-07-27 13:58:08,431:INFO:Copying training dataset
2022-07-27 13:58:08,487:INFO:Defining folds
2022-07-27 13:58:08,487:INFO:Declaring metric variables
2022-07-27 13:58:08,495:INFO:Importing untrained model
2022-07-27 13:58:08,511:WARNING:create_model() for en raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:08,519:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,519:INFO:Initializing create_model()
2022-07-27 13:58:08,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,519:INFO:Checking exceptions
2022-07-27 13:58:08,519:INFO:Importing libraries
2022-07-27 13:58:08,519:INFO:Copying training dataset
2022-07-27 13:58:08,575:INFO:Defining folds
2022-07-27 13:58:08,575:INFO:Declaring metric variables
2022-07-27 13:58:08,591:INFO:Importing untrained model
2022-07-27 13:58:08,599:ERROR:create_model() for en raised an exception or returned all 0.0:
2022-07-27 13:58:08,599:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,599:INFO:Initializing Least Angle Regression
2022-07-27 13:58:08,599:INFO:Total runtime is 0.012374691168467204 minutes
2022-07-27 13:58:08,615:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,615:INFO:Initializing create_model()
2022-07-27 13:58:08,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,615:INFO:Checking exceptions
2022-07-27 13:58:08,623:INFO:Importing libraries
2022-07-27 13:58:08,623:INFO:Copying training dataset
2022-07-27 13:58:08,671:INFO:Defining folds
2022-07-27 13:58:08,671:INFO:Declaring metric variables
2022-07-27 13:58:08,687:INFO:Importing untrained model
2022-07-27 13:58:08,695:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:08,695:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,695:INFO:Initializing create_model()
2022-07-27 13:58:08,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,695:INFO:Checking exceptions
2022-07-27 13:58:08,703:INFO:Importing libraries
2022-07-27 13:58:08,703:INFO:Copying training dataset
2022-07-27 13:58:08,751:INFO:Defining folds
2022-07-27 13:58:08,751:INFO:Declaring metric variables
2022-07-27 13:58:08,759:INFO:Importing untrained model
2022-07-27 13:58:08,775:ERROR:create_model() for lar raised an exception or returned all 0.0:
2022-07-27 13:58:08,775:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,775:INFO:Initializing Lasso Least Angle Regression
2022-07-27 13:58:08,775:INFO:Total runtime is 0.015307589371999105 minutes
2022-07-27 13:58:08,791:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,791:INFO:Initializing create_model()
2022-07-27 13:58:08,799:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,799:INFO:Checking exceptions
2022-07-27 13:58:08,799:INFO:Importing libraries
2022-07-27 13:58:08,799:INFO:Copying training dataset
2022-07-27 13:58:08,856:INFO:Defining folds
2022-07-27 13:58:08,856:INFO:Declaring metric variables
2022-07-27 13:58:08,864:INFO:Importing untrained model
2022-07-27 13:58:08,872:WARNING:create_model() for llar raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:08,872:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,872:INFO:Initializing create_model()
2022-07-27 13:58:08,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,872:INFO:Checking exceptions
2022-07-27 13:58:08,880:INFO:Importing libraries
2022-07-27 13:58:08,880:INFO:Copying training dataset
2022-07-27 13:58:08,936:INFO:Defining folds
2022-07-27 13:58:08,936:INFO:Declaring metric variables
2022-07-27 13:58:08,945:INFO:Importing untrained model
2022-07-27 13:58:08,960:ERROR:create_model() for llar raised an exception or returned all 0.0:
2022-07-27 13:58:08,960:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:08,960:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 13:58:08,960:INFO:Total runtime is 0.018387774626413982 minutes
2022-07-27 13:58:08,978:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:08,978:INFO:Initializing create_model()
2022-07-27 13:58:08,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:08,979:INFO:Checking exceptions
2022-07-27 13:58:08,983:INFO:Importing libraries
2022-07-27 13:58:08,983:INFO:Copying training dataset
2022-07-27 13:58:09,032:INFO:Defining folds
2022-07-27 13:58:09,032:INFO:Declaring metric variables
2022-07-27 13:58:09,040:INFO:Importing untrained model
2022-07-27 13:58:09,056:WARNING:create_model() for omp raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,056:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,056:INFO:Initializing create_model()
2022-07-27 13:58:09,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,056:INFO:Checking exceptions
2022-07-27 13:58:09,064:INFO:Importing libraries
2022-07-27 13:58:09,064:INFO:Copying training dataset
2022-07-27 13:58:09,112:INFO:Defining folds
2022-07-27 13:58:09,112:INFO:Declaring metric variables
2022-07-27 13:58:09,120:INFO:Importing untrained model
2022-07-27 13:58:09,136:ERROR:create_model() for omp raised an exception or returned all 0.0:
2022-07-27 13:58:09,136:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,136:INFO:Initializing Bayesian Ridge
2022-07-27 13:58:09,136:INFO:Total runtime is 0.021321137746175133 minutes
2022-07-27 13:58:09,144:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:09,152:INFO:Initializing create_model()
2022-07-27 13:58:09,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,152:INFO:Checking exceptions
2022-07-27 13:58:09,152:INFO:Importing libraries
2022-07-27 13:58:09,152:INFO:Copying training dataset
2022-07-27 13:58:09,200:INFO:Defining folds
2022-07-27 13:58:09,200:INFO:Declaring metric variables
2022-07-27 13:58:09,208:INFO:Importing untrained model
2022-07-27 13:58:09,224:WARNING:create_model() for br raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,224:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,224:INFO:Initializing create_model()
2022-07-27 13:58:09,224:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,224:INFO:Checking exceptions
2022-07-27 13:58:09,224:INFO:Importing libraries
2022-07-27 13:58:09,224:INFO:Copying training dataset
2022-07-27 13:58:09,280:INFO:Defining folds
2022-07-27 13:58:09,280:INFO:Declaring metric variables
2022-07-27 13:58:09,288:INFO:Importing untrained model
2022-07-27 13:58:09,304:ERROR:create_model() for br raised an exception or returned all 0.0:
2022-07-27 13:58:09,304:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,304:INFO:Initializing Passive Aggressive Regressor
2022-07-27 13:58:09,304:INFO:Total runtime is 0.024121109644571943 minutes
2022-07-27 13:58:09,312:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:09,320:INFO:Initializing create_model()
2022-07-27 13:58:09,320:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,320:INFO:Checking exceptions
2022-07-27 13:58:09,320:INFO:Importing libraries
2022-07-27 13:58:09,320:INFO:Copying training dataset
2022-07-27 13:58:09,368:INFO:Defining folds
2022-07-27 13:58:09,368:INFO:Declaring metric variables
2022-07-27 13:58:09,376:INFO:Importing untrained model
2022-07-27 13:58:09,392:WARNING:create_model() for par raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,392:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,392:INFO:Initializing create_model()
2022-07-27 13:58:09,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,392:INFO:Checking exceptions
2022-07-27 13:58:09,392:INFO:Importing libraries
2022-07-27 13:58:09,392:INFO:Copying training dataset
2022-07-27 13:58:09,448:INFO:Defining folds
2022-07-27 13:58:09,448:INFO:Declaring metric variables
2022-07-27 13:58:09,456:INFO:Importing untrained model
2022-07-27 13:58:09,464:ERROR:create_model() for par raised an exception or returned all 0.0:
2022-07-27 13:58:09,464:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,464:INFO:Initializing Huber Regressor
2022-07-27 13:58:09,464:INFO:Total runtime is 0.026787936687469486 minutes
2022-07-27 13:58:09,480:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:09,480:INFO:Initializing create_model()
2022-07-27 13:58:09,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,480:INFO:Checking exceptions
2022-07-27 13:58:09,480:INFO:Importing libraries
2022-07-27 13:58:09,480:INFO:Copying training dataset
2022-07-27 13:58:09,535:INFO:Defining folds
2022-07-27 13:58:09,565:INFO:Declaring metric variables
2022-07-27 13:58:09,568:INFO:Importing untrained model
2022-07-27 13:58:09,584:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,584:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,584:INFO:Initializing create_model()
2022-07-27 13:58:09,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,584:INFO:Checking exceptions
2022-07-27 13:58:09,584:INFO:Importing libraries
2022-07-27 13:58:09,584:INFO:Copying training dataset
2022-07-27 13:58:09,640:INFO:Defining folds
2022-07-27 13:58:09,648:INFO:Declaring metric variables
2022-07-27 13:58:09,656:INFO:Importing untrained model
2022-07-27 13:58:09,672:ERROR:create_model() for huber raised an exception or returned all 0.0:
2022-07-27 13:58:09,672:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,672:INFO:Initializing K Neighbors Regressor
2022-07-27 13:58:09,672:INFO:Total runtime is 0.03025922775268555 minutes
2022-07-27 13:58:09,688:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:09,688:INFO:Initializing create_model()
2022-07-27 13:58:09,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,688:INFO:Checking exceptions
2022-07-27 13:58:09,696:INFO:Importing libraries
2022-07-27 13:58:09,696:INFO:Copying training dataset
2022-07-27 13:58:09,744:INFO:Defining folds
2022-07-27 13:58:09,744:INFO:Declaring metric variables
2022-07-27 13:58:09,752:INFO:Importing untrained model
2022-07-27 13:58:09,768:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,768:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,768:INFO:Initializing create_model()
2022-07-27 13:58:09,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,768:INFO:Checking exceptions
2022-07-27 13:58:09,768:INFO:Importing libraries
2022-07-27 13:58:09,768:INFO:Copying training dataset
2022-07-27 13:58:09,816:INFO:Defining folds
2022-07-27 13:58:09,816:INFO:Declaring metric variables
2022-07-27 13:58:09,824:INFO:Importing untrained model
2022-07-27 13:58:09,840:ERROR:create_model() for knn raised an exception or returned all 0.0:
2022-07-27 13:58:09,840:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,840:INFO:Initializing Decision Tree Regressor
2022-07-27 13:58:09,840:INFO:Total runtime is 0.03306353489557902 minutes
2022-07-27 13:58:09,856:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:09,856:INFO:Initializing create_model()
2022-07-27 13:58:09,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,856:INFO:Checking exceptions
2022-07-27 13:58:09,864:INFO:Importing libraries
2022-07-27 13:58:09,864:INFO:Copying training dataset
2022-07-27 13:58:09,912:INFO:Defining folds
2022-07-27 13:58:09,912:INFO:Declaring metric variables
2022-07-27 13:58:09,928:INFO:Importing untrained model
2022-07-27 13:58:09,944:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:09,944:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:09,944:INFO:Initializing create_model()
2022-07-27 13:58:09,944:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:09,944:INFO:Checking exceptions
2022-07-27 13:58:09,944:INFO:Importing libraries
2022-07-27 13:58:09,944:INFO:Copying training dataset
2022-07-27 13:58:10,008:INFO:Defining folds
2022-07-27 13:58:10,008:INFO:Declaring metric variables
2022-07-27 13:58:10,024:INFO:Importing untrained model
2022-07-27 13:58:10,040:ERROR:create_model() for dt raised an exception or returned all 0.0:
2022-07-27 13:58:10,040:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,040:INFO:Initializing Random Forest Regressor
2022-07-27 13:58:10,040:INFO:Total runtime is 0.03639620145161947 minutes
2022-07-27 13:58:10,056:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:10,064:INFO:Initializing create_model()
2022-07-27 13:58:10,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,064:INFO:Checking exceptions
2022-07-27 13:58:10,064:INFO:Importing libraries
2022-07-27 13:58:10,064:INFO:Copying training dataset
2022-07-27 13:58:10,128:INFO:Defining folds
2022-07-27 13:58:10,128:INFO:Declaring metric variables
2022-07-27 13:58:10,144:INFO:Importing untrained model
2022-07-27 13:58:10,160:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:10,160:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,160:INFO:Initializing create_model()
2022-07-27 13:58:10,160:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,160:INFO:Checking exceptions
2022-07-27 13:58:10,160:INFO:Importing libraries
2022-07-27 13:58:10,160:INFO:Copying training dataset
2022-07-27 13:58:10,224:INFO:Defining folds
2022-07-27 13:58:10,224:INFO:Declaring metric variables
2022-07-27 13:58:10,233:INFO:Importing untrained model
2022-07-27 13:58:10,241:ERROR:create_model() for rf raised an exception or returned all 0.0:
2022-07-27 13:58:10,241:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,241:INFO:Initializing Extra Trees Regressor
2022-07-27 13:58:10,249:INFO:Total runtime is 0.03973567485809326 minutes
2022-07-27 13:58:10,265:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:10,265:INFO:Initializing create_model()
2022-07-27 13:58:10,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,265:INFO:Checking exceptions
2022-07-27 13:58:10,273:INFO:Importing libraries
2022-07-27 13:58:10,273:INFO:Copying training dataset
2022-07-27 13:58:10,329:INFO:Defining folds
2022-07-27 13:58:10,337:INFO:Declaring metric variables
2022-07-27 13:58:10,345:INFO:Importing untrained model
2022-07-27 13:58:10,361:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:10,361:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,361:INFO:Initializing create_model()
2022-07-27 13:58:10,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,361:INFO:Checking exceptions
2022-07-27 13:58:10,361:INFO:Importing libraries
2022-07-27 13:58:10,361:INFO:Copying training dataset
2022-07-27 13:58:10,425:INFO:Defining folds
2022-07-27 13:58:10,425:INFO:Declaring metric variables
2022-07-27 13:58:10,433:INFO:Importing untrained model
2022-07-27 13:58:10,441:ERROR:create_model() for et raised an exception or returned all 0.0:
2022-07-27 13:58:10,441:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,441:INFO:Initializing AdaBoost Regressor
2022-07-27 13:58:10,441:INFO:Total runtime is 0.04306950171788534 minutes
2022-07-27 13:58:10,457:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:10,457:INFO:Initializing create_model()
2022-07-27 13:58:10,457:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,457:INFO:Checking exceptions
2022-07-27 13:58:10,465:INFO:Importing libraries
2022-07-27 13:58:10,465:INFO:Copying training dataset
2022-07-27 13:58:10,513:INFO:Defining folds
2022-07-27 13:58:10,513:INFO:Declaring metric variables
2022-07-27 13:58:10,529:INFO:Importing untrained model
2022-07-27 13:58:10,545:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:10,545:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,545:INFO:Initializing create_model()
2022-07-27 13:58:10,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,545:INFO:Checking exceptions
2022-07-27 13:58:10,545:INFO:Importing libraries
2022-07-27 13:58:10,553:INFO:Copying training dataset
2022-07-27 13:58:10,601:INFO:Defining folds
2022-07-27 13:58:10,601:INFO:Declaring metric variables
2022-07-27 13:58:10,609:INFO:Importing untrained model
2022-07-27 13:58:10,625:ERROR:create_model() for ada raised an exception or returned all 0.0:
2022-07-27 13:58:10,625:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,625:INFO:Initializing Gradient Boosting Regressor
2022-07-27 13:58:10,625:INFO:Total runtime is 0.046135687828063966 minutes
2022-07-27 13:58:10,641:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:10,641:INFO:Initializing create_model()
2022-07-27 13:58:10,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,641:INFO:Checking exceptions
2022-07-27 13:58:10,641:INFO:Importing libraries
2022-07-27 13:58:10,641:INFO:Copying training dataset
2022-07-27 13:58:10,697:INFO:Defining folds
2022-07-27 13:58:10,697:INFO:Declaring metric variables
2022-07-27 13:58:10,705:INFO:Importing untrained model
2022-07-27 13:58:10,721:WARNING:create_model() for gbr raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:10,721:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,721:INFO:Initializing create_model()
2022-07-27 13:58:10,721:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,721:INFO:Checking exceptions
2022-07-27 13:58:10,721:INFO:Importing libraries
2022-07-27 13:58:10,721:INFO:Copying training dataset
2022-07-27 13:58:10,769:INFO:Defining folds
2022-07-27 13:58:10,769:INFO:Declaring metric variables
2022-07-27 13:58:10,785:INFO:Importing untrained model
2022-07-27 13:58:10,793:ERROR:create_model() for gbr raised an exception or returned all 0.0:
2022-07-27 13:58:10,801:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,801:INFO:Initializing Extreme Gradient Boosting
2022-07-27 13:58:10,801:INFO:Total runtime is 0.04906907081604004 minutes
2022-07-27 13:58:10,809:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:10,809:INFO:Initializing create_model()
2022-07-27 13:58:10,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,809:INFO:Checking exceptions
2022-07-27 13:58:10,817:INFO:Importing libraries
2022-07-27 13:58:10,817:INFO:Copying training dataset
2022-07-27 13:58:10,905:INFO:Defining folds
2022-07-27 13:58:10,934:INFO:Declaring metric variables
2022-07-27 13:58:10,937:INFO:Importing untrained model
2022-07-27 13:58:10,953:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:10,953:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:10,953:INFO:Initializing create_model()
2022-07-27 13:58:10,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:10,953:INFO:Checking exceptions
2022-07-27 13:58:10,953:INFO:Importing libraries
2022-07-27 13:58:10,953:INFO:Copying training dataset
2022-07-27 13:58:11,009:INFO:Defining folds
2022-07-27 13:58:11,009:INFO:Declaring metric variables
2022-07-27 13:58:11,025:INFO:Importing untrained model
2022-07-27 13:58:11,033:ERROR:create_model() for xgboost raised an exception or returned all 0.0:
2022-07-27 13:58:11,033:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:11,033:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 13:58:11,033:INFO:Total runtime is 0.052936931451161705 minutes
2022-07-27 13:58:11,049:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:11,049:INFO:Initializing create_model()
2022-07-27 13:58:11,049:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:11,049:INFO:Checking exceptions
2022-07-27 13:58:11,049:INFO:Importing libraries
2022-07-27 13:58:11,049:INFO:Copying training dataset
2022-07-27 13:58:11,114:INFO:Defining folds
2022-07-27 13:58:11,114:INFO:Declaring metric variables
2022-07-27 13:58:11,122:INFO:Importing untrained model
2022-07-27 13:58:11,138:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:11,138:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:11,138:INFO:Initializing create_model()
2022-07-27 13:58:11,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:11,138:INFO:Checking exceptions
2022-07-27 13:58:11,138:INFO:Importing libraries
2022-07-27 13:58:11,146:INFO:Copying training dataset
2022-07-27 13:58:11,203:INFO:Defining folds
2022-07-27 13:58:11,203:INFO:Declaring metric variables
2022-07-27 13:58:11,210:INFO:Importing untrained model
2022-07-27 13:58:11,218:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2022-07-27 13:58:11,218:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:11,218:INFO:Initializing Dummy Regressor
2022-07-27 13:58:11,218:INFO:Total runtime is 0.056032637755076095 minutes
2022-07-27 13:58:11,234:INFO:SubProcess create_model() called ==================================
2022-07-27 13:58:11,234:INFO:Initializing create_model()
2022-07-27 13:58:11,234:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:11,234:INFO:Checking exceptions
2022-07-27 13:58:11,234:INFO:Importing libraries
2022-07-27 13:58:11,234:INFO:Copying training dataset
2022-07-27 13:58:11,290:INFO:Defining folds
2022-07-27 13:58:11,290:INFO:Declaring metric variables
2022-07-27 13:58:11,306:INFO:Importing untrained model
2022-07-27 13:58:11,314:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2022-07-27 13:58:11,314:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:11,314:INFO:Initializing create_model()
2022-07-27 13:58:11,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B4F2981B20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001B4F7504BE0>, kwargs={})
2022-07-27 13:58:11,314:INFO:Checking exceptions
2022-07-27 13:58:11,322:INFO:Importing libraries
2022-07-27 13:58:11,322:INFO:Copying training dataset
2022-07-27 13:58:11,378:INFO:Defining folds
2022-07-27 13:58:11,378:INFO:Declaring metric variables
2022-07-27 13:58:11,386:INFO:Importing untrained model
2022-07-27 13:58:11,402:ERROR:create_model() for dummy raised an exception or returned all 0.0:
2022-07-27 13:58:11,402:ERROR:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 697, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 713, in compare_models
    model, model_fit_time = self.create_model(**create_model_args)
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\regression\oop.py", line 669, in create_model
    return super().create_model(
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1423, in create_model
    power_transformer_method=self.transform_target_method_param,
AttributeError: 'RegressionExperiment' object has no attribute 'transform_target_method_param'

2022-07-27 13:58:11,418:INFO:master_model_container: 0
2022-07-27 13:58:11,418:INFO:display_container: 2
2022-07-27 13:58:11,418:INFO:[]
2022-07-27 13:58:11,418:INFO:compare_models() successfully completed......................................
2022-07-27 13:59:17,734:INFO:Preparing display monitor
2022-07-27 13:59:19,910:INFO:PyCaret RegressionExperiment
2022-07-27 13:59:19,910:INFO:Logging name: reg-default-name
2022-07-27 13:59:19,910:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 13:59:19,910:INFO:version 3.0.0
2022-07-27 13:59:19,910:INFO:Initializing setup()
2022-07-27 13:59:19,910:INFO:self.USI: 112a
2022-07-27 13:59:19,910:INFO:self.variable_keys: {'y_train', 'html_param', 'imputation_regressor', 'fold_groups_param_full', 'X_test', 'seed', 'display_container', '_all_models_internal', 'stratify_param', 'X', 'memory', 'transform_target_method_param', 'gpu_param', 'transform_target_param', 'master_model_container', 'exp_id', 'data', 'pipeline', 'fold_generator', '_all_models', 'fold_groups_param', '_gpu_n_jobs_param', 'target_param', 'y_test', 'experiment__', '_available_plots', '_all_metrics', 'log_plots_param', 'variable_keys', 'fold_param', 'idx', 'imputation_classifier', 'X_train', 'exp_name_log', 'logging_param', 'n_jobs_param', 'USI', 'y', 'iterative_imputation_iters_param', '_ml_usecase', 'fold_shuffle_param'}
2022-07-27 13:59:19,910:INFO:Checking environment
2022-07-27 13:59:19,910:INFO:python_version: 3.9.12
2022-07-27 13:59:19,910:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 13:59:19,910:INFO:machine: AMD64
2022-07-27 13:59:19,910:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 13:59:19,918:INFO:Memory: svmem(total=8419573760, available=1841930240, percent=78.1, used=6577643520, free=1841930240)
2022-07-27 13:59:19,918:INFO:Physical Core: 4
2022-07-27 13:59:19,918:INFO:Logical Core: 8
2022-07-27 13:59:19,918:INFO:Checking libraries
2022-07-27 13:59:19,918:INFO:pd==1.4.2
2022-07-27 13:59:19,918:INFO:numpy==1.21.5
2022-07-27 13:59:19,918:INFO:sklearn==1.0.2
2022-07-27 13:59:20,108:INFO:lightgbm==3.3.2
2022-07-27 13:59:20,145:INFO:xgboost==1.6.1
2022-07-27 13:59:20,145:WARNING:catboost not found
2022-07-27 13:59:20,145:WARNING:mlflow not found
2022-07-27 13:59:20,145:INFO:Set up data.
2022-07-27 13:59:20,145:INFO:Set up target column.
2022-07-27 13:59:20,145:INFO:Set up train/test split.
2022-07-27 13:59:20,153:INFO:Set up folding strategy.
2022-07-27 13:59:20,153:INFO:Assigning column types.
2022-07-27 13:59:20,161:INFO:Preparing preprocessing pipeline...
2022-07-27 13:59:20,161:INFO:Set up simple imputation.
2022-07-27 13:59:20,161:INFO:Set up encoding of ordinal features.
2022-07-27 13:59:20,169:INFO:Set up encoding of categorical features.
2022-07-27 13:59:20,169:INFO:Set up polynomial features.
2022-07-27 13:59:20,169:INFO:Set up binning of numerical features.
2022-07-27 13:59:20,177:INFO:Set up feature normalization.
2022-07-27 13:59:20,301:INFO:Finished creating preprocessing pipeline.
2022-07-27 13:59:20,317:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-27 13:59:20,317:INFO:Creating final display dataframe.
2022-07-27 13:59:20,333:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              112a
2022-07-27 13:59:20,333:INFO:Preparing display monitor
2022-07-27 13:59:20,525:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:59:20,718:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 13:59:20,725:INFO:setup() successfully completed in 0.81s...............
2022-07-27 13:59:20,901:INFO:Initializing create_model()
2022-07-27 13:59:20,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 13:59:20,901:INFO:Checking exceptions
2022-07-27 13:59:20,909:INFO:Preparing display monitor
2022-07-27 13:59:20,941:INFO:Importing libraries
2022-07-27 13:59:20,941:INFO:Copying training dataset
2022-07-27 13:59:21,134:INFO:Defining folds
2022-07-27 13:59:21,134:INFO:Declaring metric variables
2022-07-27 13:59:21,150:INFO:Importing untrained model
2022-07-27 13:59:21,158:INFO:Linear Regression Imported successfully
2022-07-27 13:59:21,190:INFO:Starting cross validation
2022-07-27 13:59:21,238:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:33,574:INFO:Calculating mean and std
2022-07-27 13:59:33,582:INFO:Creating metrics dataframe
2022-07-27 13:59:34,100:INFO:Finalizing model
2022-07-27 13:59:34,191:INFO:Uploading results into container
2022-07-27 13:59:34,199:INFO:Uploading model into container now
2022-07-27 13:59:34,207:INFO:master_model_container: 1
2022-07-27 13:59:34,207:INFO:display_container: 2
2022-07-27 13:59:34,207:INFO:LinearRegression(n_jobs=-1)
2022-07-27 13:59:34,207:INFO:create_model() successfully completed......................................
2022-07-27 13:59:34,481:INFO:Initializing compare_models()
2022-07-27 13:59:34,481:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 13:59:34,481:INFO:Checking exceptions
2022-07-27 13:59:34,489:INFO:Preparing display monitor
2022-07-27 13:59:34,489:INFO:Preparing display monitor
2022-07-27 13:59:34,537:INFO:Initializing Linear Regression
2022-07-27 13:59:34,537:INFO:Total runtime is 0.0 minutes
2022-07-27 13:59:34,553:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:34,553:INFO:Initializing create_model()
2022-07-27 13:59:34,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:34,553:INFO:Checking exceptions
2022-07-27 13:59:34,553:INFO:Importing libraries
2022-07-27 13:59:34,553:INFO:Copying training dataset
2022-07-27 13:59:34,714:INFO:Defining folds
2022-07-27 13:59:34,714:INFO:Declaring metric variables
2022-07-27 13:59:34,730:INFO:Importing untrained model
2022-07-27 13:59:34,738:INFO:Linear Regression Imported successfully
2022-07-27 13:59:34,770:INFO:Starting cross validation
2022-07-27 13:59:34,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:35,543:INFO:Calculating mean and std
2022-07-27 13:59:35,543:INFO:Creating metrics dataframe
2022-07-27 13:59:35,591:INFO:Uploading results into container
2022-07-27 13:59:35,591:INFO:Uploading model into container now
2022-07-27 13:59:35,591:INFO:master_model_container: 2
2022-07-27 13:59:35,591:INFO:display_container: 3
2022-07-27 13:59:35,591:INFO:LinearRegression(n_jobs=-1)
2022-07-27 13:59:35,591:INFO:create_model() successfully completed......................................
2022-07-27 13:59:35,696:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:35,696:INFO:Creating metrics dataframe
2022-07-27 13:59:35,727:INFO:Initializing Lasso Regression
2022-07-27 13:59:35,727:INFO:Total runtime is 0.01984415849049886 minutes
2022-07-27 13:59:35,735:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:35,735:INFO:Initializing create_model()
2022-07-27 13:59:35,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:35,735:INFO:Checking exceptions
2022-07-27 13:59:35,743:INFO:Importing libraries
2022-07-27 13:59:35,743:INFO:Copying training dataset
2022-07-27 13:59:35,883:INFO:Defining folds
2022-07-27 13:59:35,883:INFO:Declaring metric variables
2022-07-27 13:59:35,899:INFO:Importing untrained model
2022-07-27 13:59:35,907:INFO:Lasso Regression Imported successfully
2022-07-27 13:59:35,931:INFO:Starting cross validation
2022-07-27 13:59:35,931:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:36,957:INFO:Calculating mean and std
2022-07-27 13:59:36,957:INFO:Creating metrics dataframe
2022-07-27 13:59:37,021:INFO:Uploading results into container
2022-07-27 13:59:37,021:INFO:Uploading model into container now
2022-07-27 13:59:37,021:INFO:master_model_container: 3
2022-07-27 13:59:37,021:INFO:display_container: 3
2022-07-27 13:59:37,023:INFO:Lasso(random_state=123)
2022-07-27 13:59:37,023:INFO:create_model() successfully completed......................................
2022-07-27 13:59:37,140:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:37,140:INFO:Creating metrics dataframe
2022-07-27 13:59:37,174:INFO:Initializing Ridge Regression
2022-07-27 13:59:37,174:INFO:Total runtime is 0.043950303395589196 minutes
2022-07-27 13:59:37,182:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:37,190:INFO:Initializing create_model()
2022-07-27 13:59:37,190:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:37,190:INFO:Checking exceptions
2022-07-27 13:59:37,190:INFO:Importing libraries
2022-07-27 13:59:37,190:INFO:Copying training dataset
2022-07-27 13:59:37,342:INFO:Defining folds
2022-07-27 13:59:37,342:INFO:Declaring metric variables
2022-07-27 13:59:37,350:INFO:Importing untrained model
2022-07-27 13:59:37,366:INFO:Ridge Regression Imported successfully
2022-07-27 13:59:37,398:INFO:Starting cross validation
2022-07-27 13:59:37,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:38,240:INFO:Calculating mean and std
2022-07-27 13:59:38,241:INFO:Creating metrics dataframe
2022-07-27 13:59:38,277:INFO:Uploading results into container
2022-07-27 13:59:38,277:INFO:Uploading model into container now
2022-07-27 13:59:38,277:INFO:master_model_container: 4
2022-07-27 13:59:38,277:INFO:display_container: 3
2022-07-27 13:59:38,277:INFO:Ridge(random_state=123)
2022-07-27 13:59:38,277:INFO:create_model() successfully completed......................................
2022-07-27 13:59:38,407:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:38,407:INFO:Creating metrics dataframe
2022-07-27 13:59:38,431:INFO:Initializing Elastic Net
2022-07-27 13:59:38,431:INFO:Total runtime is 0.06490507125854493 minutes
2022-07-27 13:59:38,447:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:38,447:INFO:Initializing create_model()
2022-07-27 13:59:38,447:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:38,447:INFO:Checking exceptions
2022-07-27 13:59:38,455:INFO:Importing libraries
2022-07-27 13:59:38,455:INFO:Copying training dataset
2022-07-27 13:59:38,672:INFO:Defining folds
2022-07-27 13:59:38,672:INFO:Declaring metric variables
2022-07-27 13:59:38,696:INFO:Importing untrained model
2022-07-27 13:59:38,720:INFO:Elastic Net Imported successfully
2022-07-27 13:59:38,760:INFO:Starting cross validation
2022-07-27 13:59:38,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:39,484:INFO:Calculating mean and std
2022-07-27 13:59:39,484:INFO:Creating metrics dataframe
2022-07-27 13:59:39,527:INFO:Uploading results into container
2022-07-27 13:59:39,560:INFO:Uploading model into container now
2022-07-27 13:59:39,560:INFO:master_model_container: 5
2022-07-27 13:59:39,560:INFO:display_container: 3
2022-07-27 13:59:39,560:INFO:ElasticNet(random_state=123)
2022-07-27 13:59:39,560:INFO:create_model() successfully completed......................................
2022-07-27 13:59:39,657:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:39,657:INFO:Creating metrics dataframe
2022-07-27 13:59:39,690:INFO:Initializing Least Angle Regression
2022-07-27 13:59:39,690:INFO:Total runtime is 0.0858908216158549 minutes
2022-07-27 13:59:39,698:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:39,698:INFO:Initializing create_model()
2022-07-27 13:59:39,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:39,698:INFO:Checking exceptions
2022-07-27 13:59:39,706:INFO:Importing libraries
2022-07-27 13:59:39,706:INFO:Copying training dataset
2022-07-27 13:59:39,842:INFO:Defining folds
2022-07-27 13:59:39,842:INFO:Declaring metric variables
2022-07-27 13:59:39,850:INFO:Importing untrained model
2022-07-27 13:59:39,866:INFO:Least Angle Regression Imported successfully
2022-07-27 13:59:39,890:INFO:Starting cross validation
2022-07-27 13:59:39,898:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:40,798:INFO:Calculating mean and std
2022-07-27 13:59:40,798:INFO:Creating metrics dataframe
2022-07-27 13:59:40,838:INFO:Uploading results into container
2022-07-27 13:59:40,838:INFO:Uploading model into container now
2022-07-27 13:59:40,838:INFO:master_model_container: 6
2022-07-27 13:59:40,838:INFO:display_container: 3
2022-07-27 13:59:40,838:INFO:Lars(random_state=123)
2022-07-27 13:59:40,838:INFO:create_model() successfully completed......................................
2022-07-27 13:59:40,948:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:40,948:INFO:Creating metrics dataframe
2022-07-27 13:59:40,980:INFO:Initializing Lasso Least Angle Regression
2022-07-27 13:59:40,988:INFO:Total runtime is 0.10751591523488363 minutes
2022-07-27 13:59:40,996:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:40,996:INFO:Initializing create_model()
2022-07-27 13:59:40,996:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:40,996:INFO:Checking exceptions
2022-07-27 13:59:40,996:INFO:Importing libraries
2022-07-27 13:59:40,996:INFO:Copying training dataset
2022-07-27 13:59:41,140:INFO:Defining folds
2022-07-27 13:59:41,148:INFO:Declaring metric variables
2022-07-27 13:59:41,156:INFO:Importing untrained model
2022-07-27 13:59:41,166:INFO:Lasso Least Angle Regression Imported successfully
2022-07-27 13:59:41,197:INFO:Starting cross validation
2022-07-27 13:59:41,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:41,932:INFO:Calculating mean and std
2022-07-27 13:59:41,932:INFO:Creating metrics dataframe
2022-07-27 13:59:41,976:INFO:Uploading results into container
2022-07-27 13:59:41,976:INFO:Uploading model into container now
2022-07-27 13:59:41,976:INFO:master_model_container: 7
2022-07-27 13:59:41,976:INFO:display_container: 3
2022-07-27 13:59:41,977:INFO:LassoLars(random_state=123)
2022-07-27 13:59:41,977:INFO:create_model() successfully completed......................................
2022-07-27 13:59:42,081:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:42,081:INFO:Creating metrics dataframe
2022-07-27 13:59:42,107:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 13:59:42,107:INFO:Total runtime is 0.12616633971532187 minutes
2022-07-27 13:59:42,123:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:42,123:INFO:Initializing create_model()
2022-07-27 13:59:42,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:42,123:INFO:Checking exceptions
2022-07-27 13:59:42,123:INFO:Importing libraries
2022-07-27 13:59:42,123:INFO:Copying training dataset
2022-07-27 13:59:42,278:INFO:Defining folds
2022-07-27 13:59:42,279:INFO:Declaring metric variables
2022-07-27 13:59:42,284:INFO:Importing untrained model
2022-07-27 13:59:42,296:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-27 13:59:42,328:INFO:Starting cross validation
2022-07-27 13:59:42,328:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:43,073:INFO:Calculating mean and std
2022-07-27 13:59:43,073:INFO:Creating metrics dataframe
2022-07-27 13:59:43,114:INFO:Uploading results into container
2022-07-27 13:59:43,114:INFO:Uploading model into container now
2022-07-27 13:59:43,114:INFO:master_model_container: 8
2022-07-27 13:59:43,114:INFO:display_container: 3
2022-07-27 13:59:43,114:INFO:OrthogonalMatchingPursuit()
2022-07-27 13:59:43,114:INFO:create_model() successfully completed......................................
2022-07-27 13:59:43,223:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:43,223:INFO:Creating metrics dataframe
2022-07-27 13:59:43,263:INFO:Initializing Bayesian Ridge
2022-07-27 13:59:43,263:INFO:Total runtime is 0.1454440752665202 minutes
2022-07-27 13:59:43,271:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:43,271:INFO:Initializing create_model()
2022-07-27 13:59:43,271:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:43,271:INFO:Checking exceptions
2022-07-27 13:59:43,279:INFO:Importing libraries
2022-07-27 13:59:43,279:INFO:Copying training dataset
2022-07-27 13:59:43,417:INFO:Defining folds
2022-07-27 13:59:43,417:INFO:Declaring metric variables
2022-07-27 13:59:43,425:INFO:Importing untrained model
2022-07-27 13:59:43,441:INFO:Bayesian Ridge Imported successfully
2022-07-27 13:59:43,465:INFO:Starting cross validation
2022-07-27 13:59:43,465:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:44,332:INFO:Calculating mean and std
2022-07-27 13:59:44,332:INFO:Creating metrics dataframe
2022-07-27 13:59:44,392:INFO:Uploading results into container
2022-07-27 13:59:44,393:INFO:Uploading model into container now
2022-07-27 13:59:44,395:INFO:master_model_container: 9
2022-07-27 13:59:44,395:INFO:display_container: 3
2022-07-27 13:59:44,396:INFO:BayesianRidge()
2022-07-27 13:59:44,396:INFO:create_model() successfully completed......................................
2022-07-27 13:59:44,628:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:44,628:INFO:Creating metrics dataframe
2022-07-27 13:59:44,725:INFO:Initializing Passive Aggressive Regressor
2022-07-27 13:59:44,725:INFO:Total runtime is 0.16979519128799442 minutes
2022-07-27 13:59:44,765:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:44,765:INFO:Initializing create_model()
2022-07-27 13:59:44,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:44,765:INFO:Checking exceptions
2022-07-27 13:59:44,773:INFO:Importing libraries
2022-07-27 13:59:44,773:INFO:Copying training dataset
2022-07-27 13:59:45,069:INFO:Defining folds
2022-07-27 13:59:45,069:INFO:Declaring metric variables
2022-07-27 13:59:45,085:INFO:Importing untrained model
2022-07-27 13:59:45,117:INFO:Passive Aggressive Regressor Imported successfully
2022-07-27 13:59:45,166:INFO:Starting cross validation
2022-07-27 13:59:45,166:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:47,105:INFO:Calculating mean and std
2022-07-27 13:59:47,105:INFO:Creating metrics dataframe
2022-07-27 13:59:47,177:INFO:Uploading results into container
2022-07-27 13:59:47,177:INFO:Uploading model into container now
2022-07-27 13:59:47,177:INFO:master_model_container: 10
2022-07-27 13:59:47,177:INFO:display_container: 3
2022-07-27 13:59:47,177:INFO:PassiveAggressiveRegressor(random_state=123)
2022-07-27 13:59:47,177:INFO:create_model() successfully completed......................................
2022-07-27 13:59:47,354:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:47,354:INFO:Creating metrics dataframe
2022-07-27 13:59:47,426:INFO:Initializing Huber Regressor
2022-07-27 13:59:47,426:INFO:Total runtime is 0.2148192365964254 minutes
2022-07-27 13:59:47,455:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:47,455:INFO:Initializing create_model()
2022-07-27 13:59:47,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:47,456:INFO:Checking exceptions
2022-07-27 13:59:47,459:INFO:Importing libraries
2022-07-27 13:59:47,459:INFO:Copying training dataset
2022-07-27 13:59:47,788:INFO:Defining folds
2022-07-27 13:59:47,788:INFO:Declaring metric variables
2022-07-27 13:59:47,804:INFO:Importing untrained model
2022-07-27 13:59:47,828:INFO:Huber Regressor Imported successfully
2022-07-27 13:59:47,892:INFO:Starting cross validation
2022-07-27 13:59:47,895:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:49,464:INFO:Calculating mean and std
2022-07-27 13:59:49,464:INFO:Creating metrics dataframe
2022-07-27 13:59:49,514:INFO:Uploading results into container
2022-07-27 13:59:49,522:INFO:Uploading model into container now
2022-07-27 13:59:49,522:INFO:master_model_container: 11
2022-07-27 13:59:49,522:INFO:display_container: 3
2022-07-27 13:59:49,522:INFO:HuberRegressor()
2022-07-27 13:59:49,522:INFO:create_model() successfully completed......................................
2022-07-27 13:59:49,674:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:49,674:INFO:Creating metrics dataframe
2022-07-27 13:59:49,738:INFO:Initializing K Neighbors Regressor
2022-07-27 13:59:49,738:INFO:Total runtime is 0.2533506989479065 minutes
2022-07-27 13:59:49,762:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:49,762:INFO:Initializing create_model()
2022-07-27 13:59:49,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:49,762:INFO:Checking exceptions
2022-07-27 13:59:49,762:INFO:Importing libraries
2022-07-27 13:59:49,762:INFO:Copying training dataset
2022-07-27 13:59:50,087:INFO:Defining folds
2022-07-27 13:59:50,088:INFO:Declaring metric variables
2022-07-27 13:59:50,106:INFO:Importing untrained model
2022-07-27 13:59:50,129:INFO:K Neighbors Regressor Imported successfully
2022-07-27 13:59:50,169:INFO:Starting cross validation
2022-07-27 13:59:50,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:51,599:INFO:Calculating mean and std
2022-07-27 13:59:51,607:INFO:Creating metrics dataframe
2022-07-27 13:59:51,671:INFO:Uploading results into container
2022-07-27 13:59:51,671:INFO:Uploading model into container now
2022-07-27 13:59:51,671:INFO:master_model_container: 12
2022-07-27 13:59:51,671:INFO:display_container: 3
2022-07-27 13:59:51,671:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-27 13:59:51,671:INFO:create_model() successfully completed......................................
2022-07-27 13:59:51,799:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:51,799:INFO:Creating metrics dataframe
2022-07-27 13:59:51,836:INFO:Initializing Decision Tree Regressor
2022-07-27 13:59:51,836:INFO:Total runtime is 0.2883258660634359 minutes
2022-07-27 13:59:51,848:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:51,849:INFO:Initializing create_model()
2022-07-27 13:59:51,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:51,849:INFO:Checking exceptions
2022-07-27 13:59:51,851:INFO:Importing libraries
2022-07-27 13:59:51,851:INFO:Copying training dataset
2022-07-27 13:59:52,090:INFO:Defining folds
2022-07-27 13:59:52,090:INFO:Declaring metric variables
2022-07-27 13:59:52,106:INFO:Importing untrained model
2022-07-27 13:59:52,130:INFO:Decision Tree Regressor Imported successfully
2022-07-27 13:59:52,178:INFO:Starting cross validation
2022-07-27 13:59:52,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:53,063:INFO:Calculating mean and std
2022-07-27 13:59:53,071:INFO:Creating metrics dataframe
2022-07-27 13:59:53,112:INFO:Uploading results into container
2022-07-27 13:59:53,112:INFO:Uploading model into container now
2022-07-27 13:59:53,112:INFO:master_model_container: 13
2022-07-27 13:59:53,112:INFO:display_container: 3
2022-07-27 13:59:53,112:INFO:DecisionTreeRegressor(random_state=123)
2022-07-27 13:59:53,112:INFO:create_model() successfully completed......................................
2022-07-27 13:59:53,236:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:53,236:INFO:Creating metrics dataframe
2022-07-27 13:59:53,276:INFO:Initializing Random Forest Regressor
2022-07-27 13:59:53,276:INFO:Total runtime is 0.3123114109039307 minutes
2022-07-27 13:59:53,284:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:53,284:INFO:Initializing create_model()
2022-07-27 13:59:53,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:53,292:INFO:Checking exceptions
2022-07-27 13:59:53,292:INFO:Importing libraries
2022-07-27 13:59:53,292:INFO:Copying training dataset
2022-07-27 13:59:53,524:INFO:Defining folds
2022-07-27 13:59:53,524:INFO:Declaring metric variables
2022-07-27 13:59:53,540:INFO:Importing untrained model
2022-07-27 13:59:53,560:INFO:Random Forest Regressor Imported successfully
2022-07-27 13:59:53,591:INFO:Starting cross validation
2022-07-27 13:59:53,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 13:59:57,330:INFO:Calculating mean and std
2022-07-27 13:59:57,330:INFO:Creating metrics dataframe
2022-07-27 13:59:57,389:INFO:Uploading results into container
2022-07-27 13:59:57,389:INFO:Uploading model into container now
2022-07-27 13:59:57,389:INFO:master_model_container: 14
2022-07-27 13:59:57,389:INFO:display_container: 3
2022-07-27 13:59:57,389:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-07-27 13:59:57,389:INFO:create_model() successfully completed......................................
2022-07-27 13:59:57,496:INFO:SubProcess create_model() end ==================================
2022-07-27 13:59:57,496:INFO:Creating metrics dataframe
2022-07-27 13:59:57,527:INFO:Initializing Extra Trees Regressor
2022-07-27 13:59:57,527:INFO:Total runtime is 0.38316953976949064 minutes
2022-07-27 13:59:57,538:INFO:SubProcess create_model() called ==================================
2022-07-27 13:59:57,539:INFO:Initializing create_model()
2022-07-27 13:59:57,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 13:59:57,541:INFO:Checking exceptions
2022-07-27 13:59:57,544:INFO:Importing libraries
2022-07-27 13:59:57,545:INFO:Copying training dataset
2022-07-27 13:59:57,722:INFO:Defining folds
2022-07-27 13:59:57,722:INFO:Declaring metric variables
2022-07-27 13:59:57,730:INFO:Importing untrained model
2022-07-27 13:59:57,746:INFO:Extra Trees Regressor Imported successfully
2022-07-27 13:59:57,778:INFO:Starting cross validation
2022-07-27 13:59:57,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:00,513:INFO:Calculating mean and std
2022-07-27 14:00:00,513:INFO:Creating metrics dataframe
2022-07-27 14:00:00,554:INFO:Uploading results into container
2022-07-27 14:00:00,554:INFO:Uploading model into container now
2022-07-27 14:00:00,554:INFO:master_model_container: 15
2022-07-27 14:00:00,554:INFO:display_container: 3
2022-07-27 14:00:00,554:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-07-27 14:00:00,554:INFO:create_model() successfully completed......................................
2022-07-27 14:00:00,662:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:00,662:INFO:Creating metrics dataframe
2022-07-27 14:00:00,696:INFO:Initializing AdaBoost Regressor
2022-07-27 14:00:00,696:INFO:Total runtime is 0.43598034381866463 minutes
2022-07-27 14:00:00,704:INFO:SubProcess create_model() called ==================================
2022-07-27 14:00:00,704:INFO:Initializing create_model()
2022-07-27 14:00:00,712:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 14:00:00,712:INFO:Checking exceptions
2022-07-27 14:00:00,712:INFO:Importing libraries
2022-07-27 14:00:00,712:INFO:Copying training dataset
2022-07-27 14:00:00,855:INFO:Defining folds
2022-07-27 14:00:00,855:INFO:Declaring metric variables
2022-07-27 14:00:00,871:INFO:Importing untrained model
2022-07-27 14:00:00,879:INFO:AdaBoost Regressor Imported successfully
2022-07-27 14:00:00,912:INFO:Starting cross validation
2022-07-27 14:00:00,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:01,994:INFO:Calculating mean and std
2022-07-27 14:00:01,996:INFO:Creating metrics dataframe
2022-07-27 14:00:02,035:INFO:Uploading results into container
2022-07-27 14:00:02,035:INFO:Uploading model into container now
2022-07-27 14:00:02,035:INFO:master_model_container: 16
2022-07-27 14:00:02,035:INFO:display_container: 3
2022-07-27 14:00:02,035:INFO:AdaBoostRegressor(random_state=123)
2022-07-27 14:00:02,035:INFO:create_model() successfully completed......................................
2022-07-27 14:00:02,150:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:02,150:INFO:Creating metrics dataframe
2022-07-27 14:00:02,203:INFO:Initializing Gradient Boosting Regressor
2022-07-27 14:00:02,203:INFO:Total runtime is 0.46110275189081834 minutes
2022-07-27 14:00:02,211:INFO:SubProcess create_model() called ==================================
2022-07-27 14:00:02,211:INFO:Initializing create_model()
2022-07-27 14:00:02,211:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 14:00:02,211:INFO:Checking exceptions
2022-07-27 14:00:02,219:INFO:Importing libraries
2022-07-27 14:00:02,219:INFO:Copying training dataset
2022-07-27 14:00:02,443:INFO:Defining folds
2022-07-27 14:00:02,443:INFO:Declaring metric variables
2022-07-27 14:00:02,467:INFO:Importing untrained model
2022-07-27 14:00:02,491:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 14:00:02,531:INFO:Starting cross validation
2022-07-27 14:00:02,531:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:04,508:INFO:Calculating mean and std
2022-07-27 14:00:04,508:INFO:Creating metrics dataframe
2022-07-27 14:00:04,548:INFO:Uploading results into container
2022-07-27 14:00:04,548:INFO:Uploading model into container now
2022-07-27 14:00:04,556:INFO:master_model_container: 17
2022-07-27 14:00:04,556:INFO:display_container: 3
2022-07-27 14:00:04,556:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 14:00:04,556:INFO:create_model() successfully completed......................................
2022-07-27 14:00:04,654:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:04,654:INFO:Creating metrics dataframe
2022-07-27 14:00:04,690:INFO:Initializing Extreme Gradient Boosting
2022-07-27 14:00:04,691:INFO:Total runtime is 0.5025769790013632 minutes
2022-07-27 14:00:04,703:INFO:SubProcess create_model() called ==================================
2022-07-27 14:00:04,704:INFO:Initializing create_model()
2022-07-27 14:00:04,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 14:00:04,705:INFO:Checking exceptions
2022-07-27 14:00:04,709:INFO:Importing libraries
2022-07-27 14:00:04,709:INFO:Copying training dataset
2022-07-27 14:00:04,951:INFO:Defining folds
2022-07-27 14:00:04,951:INFO:Declaring metric variables
2022-07-27 14:00:04,981:INFO:Importing untrained model
2022-07-27 14:00:04,998:INFO:Extreme Gradient Boosting Imported successfully
2022-07-27 14:00:05,038:INFO:Starting cross validation
2022-07-27 14:00:05,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:07,353:INFO:Calculating mean and std
2022-07-27 14:00:07,353:INFO:Creating metrics dataframe
2022-07-27 14:00:07,393:INFO:Uploading results into container
2022-07-27 14:00:07,393:INFO:Uploading model into container now
2022-07-27 14:00:07,393:INFO:master_model_container: 18
2022-07-27 14:00:07,393:INFO:display_container: 3
2022-07-27 14:00:07,393:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-27 14:00:07,393:INFO:create_model() successfully completed......................................
2022-07-27 14:00:07,497:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:07,497:INFO:Creating metrics dataframe
2022-07-27 14:00:07,529:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 14:00:07,529:INFO:Total runtime is 0.5498621503512066 minutes
2022-07-27 14:00:07,539:INFO:SubProcess create_model() called ==================================
2022-07-27 14:00:07,539:INFO:Initializing create_model()
2022-07-27 14:00:07,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 14:00:07,539:INFO:Checking exceptions
2022-07-27 14:00:07,547:INFO:Importing libraries
2022-07-27 14:00:07,547:INFO:Copying training dataset
2022-07-27 14:00:07,683:INFO:Defining folds
2022-07-27 14:00:07,683:INFO:Declaring metric variables
2022-07-27 14:00:07,691:INFO:Importing untrained model
2022-07-27 14:00:07,707:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-27 14:00:07,731:INFO:Starting cross validation
2022-07-27 14:00:07,731:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:10,928:INFO:Calculating mean and std
2022-07-27 14:00:10,928:INFO:Creating metrics dataframe
2022-07-27 14:00:10,977:INFO:Uploading results into container
2022-07-27 14:00:10,977:INFO:Uploading model into container now
2022-07-27 14:00:10,977:INFO:master_model_container: 19
2022-07-27 14:00:10,977:INFO:display_container: 3
2022-07-27 14:00:10,977:INFO:LGBMRegressor(random_state=123)
2022-07-27 14:00:10,977:INFO:create_model() successfully completed......................................
2022-07-27 14:00:11,069:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:11,069:INFO:Creating metrics dataframe
2022-07-27 14:00:11,103:INFO:Initializing Dummy Regressor
2022-07-27 14:00:11,103:INFO:Total runtime is 0.6094390749931337 minutes
2022-07-27 14:00:11,119:INFO:SubProcess create_model() called ==================================
2022-07-27 14:00:11,119:INFO:Initializing create_model()
2022-07-27 14:00:11,119:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000020022FAA430>, kwargs={})
2022-07-27 14:00:11,119:INFO:Checking exceptions
2022-07-27 14:00:11,119:INFO:Importing libraries
2022-07-27 14:00:11,119:INFO:Copying training dataset
2022-07-27 14:00:11,265:INFO:Defining folds
2022-07-27 14:00:11,265:INFO:Declaring metric variables
2022-07-27 14:00:11,273:INFO:Importing untrained model
2022-07-27 14:00:11,289:INFO:Dummy Regressor Imported successfully
2022-07-27 14:00:11,306:INFO:Starting cross validation
2022-07-27 14:00:11,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 14:00:11,995:INFO:Calculating mean and std
2022-07-27 14:00:12,003:INFO:Creating metrics dataframe
2022-07-27 14:00:12,035:INFO:Uploading results into container
2022-07-27 14:00:12,035:INFO:Uploading model into container now
2022-07-27 14:00:12,035:INFO:master_model_container: 20
2022-07-27 14:00:12,035:INFO:display_container: 3
2022-07-27 14:00:12,035:INFO:DummyRegressor()
2022-07-27 14:00:12,035:INFO:create_model() successfully completed......................................
2022-07-27 14:00:12,138:INFO:SubProcess create_model() end ==================================
2022-07-27 14:00:12,138:INFO:Creating metrics dataframe
2022-07-27 14:00:12,194:INFO:Initializing create_model()
2022-07-27 14:00:12,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 14:00:12,194:INFO:Checking exceptions
2022-07-27 14:00:12,202:INFO:Importing libraries
2022-07-27 14:00:12,202:INFO:Copying training dataset
2022-07-27 14:00:12,346:INFO:Defining folds
2022-07-27 14:00:12,346:INFO:Declaring metric variables
2022-07-27 14:00:12,346:INFO:Importing untrained model
2022-07-27 14:00:12,354:INFO:Declaring custom model
2022-07-27 14:00:12,354:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 14:00:12,354:INFO:Cross validation set to False
2022-07-27 14:00:12,354:INFO:Fitting Model
2022-07-27 14:00:12,728:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 14:00:12,728:INFO:create_models() successfully completed......................................
2022-07-27 14:00:12,862:INFO:master_model_container: 20
2022-07-27 14:00:12,862:INFO:display_container: 3
2022-07-27 14:00:12,862:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 14:00:12,862:INFO:compare_models() successfully completed......................................
2022-07-27 14:00:13,053:INFO:Initializing plot_model()
2022-07-27 14:00:13,061:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020022B6E9D0>, system=True)
2022-07-27 14:00:13,061:INFO:Checking exceptions
2022-07-27 14:00:13,061:INFO:Preparing display monitor
2022-07-27 14:00:13,077:INFO:Preloading libraries
2022-07-27 14:00:13,093:INFO:Copying training dataset
2022-07-27 14:00:13,093:INFO:Plot type: feature
2022-07-27 14:00:13,101:WARNING:No coef_ found. Trying feature_importances_
2022-07-27 14:00:13,578:INFO:Visual Rendered Successfully
2022-07-27 14:00:13,694:INFO:plot_model() successfully completed......................................
2022-07-27 14:06:10,655:INFO:Initializing save_model()
2022-07-27 14:06:10,655:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-07-27 14:06:10,655:INFO:Adding model into prep_pipe
2022-07-27 14:06:10,668:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-07-27 14:06:10,684:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-07-27 14:06:10,684:INFO:save_model() successfully completed......................................
2022-07-27 18:20:03,061:INFO:Initializing load_model()
2022-07-27 18:20:03,061:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:34:58,974:INFO:Initializing load_model()
2022-07-27 18:34:58,974:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:35:12,163:INFO:Initializing load_model()
2022-07-27 18:35:12,163:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:35:51,199:INFO:Initializing load_model()
2022-07-27 18:35:51,199:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:35:54,629:INFO:Initializing load_model()
2022-07-27 18:35:54,629:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:06,876:INFO:Initializing load_model()
2022-07-27 18:36:06,876:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:11,061:INFO:Initializing load_model()
2022-07-27 18:36:11,069:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:13,513:INFO:Initializing load_model()
2022-07-27 18:36:13,513:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:16,033:INFO:Initializing load_model()
2022-07-27 18:36:16,034:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:16,225:INFO:Initializing predict_model()
2022-07-27 18:36:16,225:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9ECD01F0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9EA83DF0>)
2022-07-27 18:36:16,225:INFO:Checking exceptions
2022-07-27 18:36:16,225:INFO:Preloading libraries
2022-07-27 18:36:20,719:INFO:Initializing load_model()
2022-07-27 18:36:20,727:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:23,385:INFO:Initializing load_model()
2022-07-27 18:36:23,385:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:23,546:INFO:Initializing predict_model()
2022-07-27 18:36:23,546:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9ED06700>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ECCE580>)
2022-07-27 18:36:23,546:INFO:Checking exceptions
2022-07-27 18:36:23,546:INFO:Preloading libraries
2022-07-27 18:36:40,437:INFO:Initializing load_model()
2022-07-27 18:36:40,437:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:42,050:INFO:Initializing load_model()
2022-07-27 18:36:42,050:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:36:42,218:INFO:Initializing predict_model()
2022-07-27 18:36:42,226:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9ED06670>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ED02D90>)
2022-07-27 18:36:42,226:INFO:Checking exceptions
2022-07-27 18:36:42,226:INFO:Preloading libraries
2022-07-27 18:37:14,723:INFO:Initializing load_model()
2022-07-27 18:37:14,731:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:37:21,738:INFO:Initializing load_model()
2022-07-27 18:37:21,738:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:37:28,448:INFO:Initializing load_model()
2022-07-27 18:37:28,449:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:37:28,596:INFO:Initializing predict_model()
2022-07-27 18:37:28,596:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9ECD2430>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ECC3EE0>)
2022-07-27 18:37:28,604:INFO:Checking exceptions
2022-07-27 18:37:28,604:INFO:Preloading libraries
2022-07-27 18:39:46,055:INFO:Preparing display monitor
2022-07-27 18:39:48,295:INFO:PyCaret RegressionExperiment
2022-07-27 18:39:48,295:INFO:Logging name: reg-default-name
2022-07-27 18:39:48,295:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 18:39:48,295:INFO:version 3.0.0
2022-07-27 18:39:48,295:INFO:Initializing setup()
2022-07-27 18:39:48,295:INFO:self.USI: a51e
2022-07-27 18:39:48,295:INFO:self.variable_keys: {'_available_plots', '_ml_usecase', 'idx', 'y', 'X_train', 'X_test', 'fold_shuffle_param', 'transform_target_method_param', 'X', '_all_models_internal', 'display_container', 'pipeline', 'data', '_all_models', 'log_plots_param', 'iterative_imputation_iters_param', 'fold_param', 'y_test', 'exp_name_log', 'fold_generator', 'y_train', 'fold_groups_param', 'n_jobs_param', 'imputation_classifier', 'memory', 'stratify_param', 'experiment__', 'USI', 'imputation_regressor', '_all_metrics', '_gpu_n_jobs_param', 'variable_keys', 'seed', 'master_model_container', 'logging_param', 'transform_target_param', 'exp_id', 'target_param', 'gpu_param', 'fold_groups_param_full', 'html_param'}
2022-07-27 18:39:48,295:INFO:Checking environment
2022-07-27 18:39:48,295:INFO:python_version: 3.9.12
2022-07-27 18:39:48,295:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 18:39:48,295:INFO:machine: AMD64
2022-07-27 18:39:48,295:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 18:39:48,295:INFO:Memory: svmem(total=8419573760, available=1682022400, percent=80.0, used=6737551360, free=1682022400)
2022-07-27 18:39:48,295:INFO:Physical Core: 4
2022-07-27 18:39:48,295:INFO:Logical Core: 8
2022-07-27 18:39:48,295:INFO:Checking libraries
2022-07-27 18:39:48,295:INFO:pd==1.4.2
2022-07-27 18:39:48,295:INFO:numpy==1.21.5
2022-07-27 18:39:48,295:INFO:sklearn==1.0.2
2022-07-27 18:39:48,579:INFO:lightgbm==3.3.2
2022-07-27 18:39:48,667:INFO:xgboost==1.6.1
2022-07-27 18:39:48,667:WARNING:catboost not found
2022-07-27 18:39:48,675:WARNING:mlflow not found
2022-07-27 18:39:48,675:INFO:Set up data.
2022-07-27 18:39:48,675:INFO:Set up target column.
2022-07-27 18:39:48,675:INFO:Set up train/test split.
2022-07-27 18:39:48,683:INFO:Set up folding strategy.
2022-07-27 18:39:48,683:INFO:Assigning column types.
2022-07-27 18:39:48,691:INFO:Preparing preprocessing pipeline...
2022-07-27 18:39:48,699:INFO:Set up simple imputation.
2022-07-27 18:39:48,707:INFO:Set up encoding of ordinal features.
2022-07-27 18:39:48,723:INFO:Set up encoding of categorical features.
2022-07-27 18:39:48,723:INFO:Set up polynomial features.
2022-07-27 18:39:48,723:INFO:Set up binning of numerical features.
2022-07-27 18:39:48,723:INFO:Set up feature normalization.
2022-07-27 18:39:48,843:INFO:Finished creating preprocessing pipeline.
2022-07-27 18:39:48,867:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-27 18:39:48,867:INFO:Creating final display dataframe.
2022-07-27 18:39:48,875:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              a51e
2022-07-27 18:39:48,875:INFO:Preparing display monitor
2022-07-27 18:39:49,141:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 18:39:49,329:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 18:39:49,337:INFO:setup() successfully completed in 1.08s...............
2022-07-27 18:39:49,506:INFO:Initializing create_model()
2022-07-27 18:39:49,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 18:39:49,506:INFO:Checking exceptions
2022-07-27 18:39:49,506:INFO:Preparing display monitor
2022-07-27 18:39:49,538:INFO:Importing libraries
2022-07-27 18:39:49,538:INFO:Copying training dataset
2022-07-27 18:39:49,760:INFO:Defining folds
2022-07-27 18:39:49,760:INFO:Declaring metric variables
2022-07-27 18:39:49,768:INFO:Importing untrained model
2022-07-27 18:39:49,783:INFO:Linear Regression Imported successfully
2022-07-27 18:39:49,799:INFO:Starting cross validation
2022-07-27 18:39:49,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:01,951:INFO:Calculating mean and std
2022-07-27 18:40:01,951:INFO:Creating metrics dataframe
2022-07-27 18:40:02,387:INFO:Finalizing model
2022-07-27 18:40:02,507:INFO:Uploading results into container
2022-07-27 18:40:02,507:INFO:Uploading model into container now
2022-07-27 18:40:02,523:INFO:master_model_container: 1
2022-07-27 18:40:02,523:INFO:display_container: 2
2022-07-27 18:40:02,523:INFO:LinearRegression(n_jobs=-1)
2022-07-27 18:40:02,523:INFO:create_model() successfully completed......................................
2022-07-27 18:40:02,694:INFO:Initializing compare_models()
2022-07-27 18:40:02,695:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 18:40:02,695:INFO:Checking exceptions
2022-07-27 18:40:02,699:INFO:Preparing display monitor
2022-07-27 18:40:02,699:INFO:Preparing display monitor
2022-07-27 18:40:02,733:INFO:Initializing Linear Regression
2022-07-27 18:40:02,741:INFO:Total runtime is 0.00013332366943359376 minutes
2022-07-27 18:40:02,749:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:02,749:INFO:Initializing create_model()
2022-07-27 18:40:02,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:02,757:INFO:Checking exceptions
2022-07-27 18:40:02,757:INFO:Importing libraries
2022-07-27 18:40:02,757:INFO:Copying training dataset
2022-07-27 18:40:02,893:INFO:Defining folds
2022-07-27 18:40:02,893:INFO:Declaring metric variables
2022-07-27 18:40:02,901:INFO:Importing untrained model
2022-07-27 18:40:02,917:INFO:Linear Regression Imported successfully
2022-07-27 18:40:02,941:INFO:Starting cross validation
2022-07-27 18:40:02,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:03,672:INFO:Calculating mean and std
2022-07-27 18:40:03,672:INFO:Creating metrics dataframe
2022-07-27 18:40:03,720:INFO:Uploading results into container
2022-07-27 18:40:03,720:INFO:Uploading model into container now
2022-07-27 18:40:03,720:INFO:master_model_container: 2
2022-07-27 18:40:03,720:INFO:display_container: 3
2022-07-27 18:40:03,720:INFO:LinearRegression(n_jobs=-1)
2022-07-27 18:40:03,720:INFO:create_model() successfully completed......................................
2022-07-27 18:40:03,827:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:03,827:INFO:Creating metrics dataframe
2022-07-27 18:40:03,867:INFO:Initializing Lasso Regression
2022-07-27 18:40:03,867:INFO:Total runtime is 0.0189080278078715 minutes
2022-07-27 18:40:03,875:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:03,875:INFO:Initializing create_model()
2022-07-27 18:40:03,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:03,875:INFO:Checking exceptions
2022-07-27 18:40:03,883:INFO:Importing libraries
2022-07-27 18:40:03,883:INFO:Copying training dataset
2022-07-27 18:40:04,035:INFO:Defining folds
2022-07-27 18:40:04,035:INFO:Declaring metric variables
2022-07-27 18:40:04,043:INFO:Importing untrained model
2022-07-27 18:40:04,059:INFO:Lasso Regression Imported successfully
2022-07-27 18:40:04,084:INFO:Starting cross validation
2022-07-27 18:40:04,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:04,926:INFO:Calculating mean and std
2022-07-27 18:40:04,934:INFO:Creating metrics dataframe
2022-07-27 18:40:04,983:INFO:Uploading results into container
2022-07-27 18:40:04,984:INFO:Uploading model into container now
2022-07-27 18:40:04,984:INFO:master_model_container: 3
2022-07-27 18:40:04,984:INFO:display_container: 3
2022-07-27 18:40:04,984:INFO:Lasso(random_state=123)
2022-07-27 18:40:04,984:INFO:create_model() successfully completed......................................
2022-07-27 18:40:05,080:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:05,080:INFO:Creating metrics dataframe
2022-07-27 18:40:05,112:INFO:Initializing Ridge Regression
2022-07-27 18:40:05,112:INFO:Total runtime is 0.03965694506963094 minutes
2022-07-27 18:40:05,120:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:05,120:INFO:Initializing create_model()
2022-07-27 18:40:05,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:05,120:INFO:Checking exceptions
2022-07-27 18:40:05,128:INFO:Importing libraries
2022-07-27 18:40:05,128:INFO:Copying training dataset
2022-07-27 18:40:05,245:INFO:Defining folds
2022-07-27 18:40:05,245:INFO:Declaring metric variables
2022-07-27 18:40:05,260:INFO:Importing untrained model
2022-07-27 18:40:05,270:INFO:Ridge Regression Imported successfully
2022-07-27 18:40:05,294:INFO:Starting cross validation
2022-07-27 18:40:05,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:05,999:INFO:Calculating mean and std
2022-07-27 18:40:05,999:INFO:Creating metrics dataframe
2022-07-27 18:40:06,047:INFO:Uploading results into container
2022-07-27 18:40:06,047:INFO:Uploading model into container now
2022-07-27 18:40:06,047:INFO:master_model_container: 4
2022-07-27 18:40:06,047:INFO:display_container: 3
2022-07-27 18:40:06,047:INFO:Ridge(random_state=123)
2022-07-27 18:40:06,047:INFO:create_model() successfully completed......................................
2022-07-27 18:40:06,159:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:06,159:INFO:Creating metrics dataframe
2022-07-27 18:40:06,183:INFO:Initializing Elastic Net
2022-07-27 18:40:06,183:INFO:Total runtime is 0.05750638643900553 minutes
2022-07-27 18:40:06,199:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:06,199:INFO:Initializing create_model()
2022-07-27 18:40:06,199:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:06,199:INFO:Checking exceptions
2022-07-27 18:40:06,199:INFO:Importing libraries
2022-07-27 18:40:06,199:INFO:Copying training dataset
2022-07-27 18:40:06,351:INFO:Defining folds
2022-07-27 18:40:06,351:INFO:Declaring metric variables
2022-07-27 18:40:06,367:INFO:Importing untrained model
2022-07-27 18:40:06,375:INFO:Elastic Net Imported successfully
2022-07-27 18:40:06,403:INFO:Starting cross validation
2022-07-27 18:40:06,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:07,184:INFO:Calculating mean and std
2022-07-27 18:40:07,184:INFO:Creating metrics dataframe
2022-07-27 18:40:07,232:INFO:Uploading results into container
2022-07-27 18:40:07,232:INFO:Uploading model into container now
2022-07-27 18:40:07,232:INFO:master_model_container: 5
2022-07-27 18:40:07,232:INFO:display_container: 3
2022-07-27 18:40:07,232:INFO:ElasticNet(random_state=123)
2022-07-27 18:40:07,232:INFO:create_model() successfully completed......................................
2022-07-27 18:40:07,337:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:07,337:INFO:Creating metrics dataframe
2022-07-27 18:40:07,371:INFO:Initializing Least Angle Regression
2022-07-27 18:40:07,371:INFO:Total runtime is 0.0773085633913676 minutes
2022-07-27 18:40:07,379:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:07,387:INFO:Initializing create_model()
2022-07-27 18:40:07,387:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:07,387:INFO:Checking exceptions
2022-07-27 18:40:07,387:INFO:Importing libraries
2022-07-27 18:40:07,387:INFO:Copying training dataset
2022-07-27 18:40:07,531:INFO:Defining folds
2022-07-27 18:40:07,531:INFO:Declaring metric variables
2022-07-27 18:40:07,547:INFO:Importing untrained model
2022-07-27 18:40:07,563:INFO:Least Angle Regression Imported successfully
2022-07-27 18:40:07,595:INFO:Starting cross validation
2022-07-27 18:40:07,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:08,385:INFO:Calculating mean and std
2022-07-27 18:40:08,385:INFO:Creating metrics dataframe
2022-07-27 18:40:08,435:INFO:Uploading results into container
2022-07-27 18:40:08,435:INFO:Uploading model into container now
2022-07-27 18:40:08,435:INFO:master_model_container: 6
2022-07-27 18:40:08,435:INFO:display_container: 3
2022-07-27 18:40:08,435:INFO:Lars(random_state=123)
2022-07-27 18:40:08,435:INFO:create_model() successfully completed......................................
2022-07-27 18:40:08,536:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:08,536:INFO:Creating metrics dataframe
2022-07-27 18:40:08,562:INFO:Initializing Lasso Least Angle Regression
2022-07-27 18:40:08,562:INFO:Total runtime is 0.0971574068069458 minutes
2022-07-27 18:40:08,570:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:08,578:INFO:Initializing create_model()
2022-07-27 18:40:08,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:08,578:INFO:Checking exceptions
2022-07-27 18:40:08,578:INFO:Importing libraries
2022-07-27 18:40:08,578:INFO:Copying training dataset
2022-07-27 18:40:08,711:INFO:Defining folds
2022-07-27 18:40:08,711:INFO:Declaring metric variables
2022-07-27 18:40:08,727:INFO:Importing untrained model
2022-07-27 18:40:08,737:INFO:Lasso Least Angle Regression Imported successfully
2022-07-27 18:40:08,761:INFO:Starting cross validation
2022-07-27 18:40:08,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:09,470:INFO:Calculating mean and std
2022-07-27 18:40:09,478:INFO:Creating metrics dataframe
2022-07-27 18:40:09,512:INFO:Uploading results into container
2022-07-27 18:40:09,512:INFO:Uploading model into container now
2022-07-27 18:40:09,512:INFO:master_model_container: 7
2022-07-27 18:40:09,512:INFO:display_container: 3
2022-07-27 18:40:09,512:INFO:LassoLars(random_state=123)
2022-07-27 18:40:09,512:INFO:create_model() successfully completed......................................
2022-07-27 18:40:09,612:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:09,612:INFO:Creating metrics dataframe
2022-07-27 18:40:09,645:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 18:40:09,645:INFO:Total runtime is 0.11520378192265829 minutes
2022-07-27 18:40:09,661:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:09,661:INFO:Initializing create_model()
2022-07-27 18:40:09,661:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:09,661:INFO:Checking exceptions
2022-07-27 18:40:09,668:INFO:Importing libraries
2022-07-27 18:40:09,668:INFO:Copying training dataset
2022-07-27 18:40:09,778:INFO:Defining folds
2022-07-27 18:40:09,778:INFO:Declaring metric variables
2022-07-27 18:40:09,786:INFO:Importing untrained model
2022-07-27 18:40:09,794:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-27 18:40:09,819:INFO:Starting cross validation
2022-07-27 18:40:09,827:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:10,591:INFO:Calculating mean and std
2022-07-27 18:40:10,591:INFO:Creating metrics dataframe
2022-07-27 18:40:10,695:INFO:Uploading results into container
2022-07-27 18:40:10,695:INFO:Uploading model into container now
2022-07-27 18:40:10,695:INFO:master_model_container: 8
2022-07-27 18:40:10,695:INFO:display_container: 3
2022-07-27 18:40:10,695:INFO:OrthogonalMatchingPursuit()
2022-07-27 18:40:10,695:INFO:create_model() successfully completed......................................
2022-07-27 18:40:10,871:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:10,871:INFO:Creating metrics dataframe
2022-07-27 18:40:10,918:INFO:Initializing Bayesian Ridge
2022-07-27 18:40:10,918:INFO:Total runtime is 0.13642162084579468 minutes
2022-07-27 18:40:10,928:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:10,936:INFO:Initializing create_model()
2022-07-27 18:40:10,936:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:10,936:INFO:Checking exceptions
2022-07-27 18:40:10,936:INFO:Importing libraries
2022-07-27 18:40:10,936:INFO:Copying training dataset
2022-07-27 18:40:11,053:INFO:Defining folds
2022-07-27 18:40:11,053:INFO:Declaring metric variables
2022-07-27 18:40:11,069:INFO:Importing untrained model
2022-07-27 18:40:11,078:INFO:Bayesian Ridge Imported successfully
2022-07-27 18:40:11,102:INFO:Starting cross validation
2022-07-27 18:40:11,102:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:11,919:INFO:Calculating mean and std
2022-07-27 18:40:11,919:INFO:Creating metrics dataframe
2022-07-27 18:40:11,969:INFO:Uploading results into container
2022-07-27 18:40:11,969:INFO:Uploading model into container now
2022-07-27 18:40:11,969:INFO:master_model_container: 9
2022-07-27 18:40:11,969:INFO:display_container: 3
2022-07-27 18:40:11,969:INFO:BayesianRidge()
2022-07-27 18:40:11,969:INFO:create_model() successfully completed......................................
2022-07-27 18:40:12,070:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:12,070:INFO:Creating metrics dataframe
2022-07-27 18:40:12,096:INFO:Initializing Passive Aggressive Regressor
2022-07-27 18:40:12,096:INFO:Total runtime is 0.15605896711349487 minutes
2022-07-27 18:40:12,112:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:12,112:INFO:Initializing create_model()
2022-07-27 18:40:12,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:12,112:INFO:Checking exceptions
2022-07-27 18:40:12,112:INFO:Importing libraries
2022-07-27 18:40:12,112:INFO:Copying training dataset
2022-07-27 18:40:12,219:INFO:Defining folds
2022-07-27 18:40:12,219:INFO:Declaring metric variables
2022-07-27 18:40:12,227:INFO:Importing untrained model
2022-07-27 18:40:12,245:INFO:Passive Aggressive Regressor Imported successfully
2022-07-27 18:40:12,261:INFO:Starting cross validation
2022-07-27 18:40:12,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:13,474:INFO:Calculating mean and std
2022-07-27 18:40:13,482:INFO:Creating metrics dataframe
2022-07-27 18:40:13,522:INFO:Uploading results into container
2022-07-27 18:40:13,522:INFO:Uploading model into container now
2022-07-27 18:40:13,522:INFO:master_model_container: 10
2022-07-27 18:40:13,522:INFO:display_container: 3
2022-07-27 18:40:13,522:INFO:PassiveAggressiveRegressor(random_state=123)
2022-07-27 18:40:13,522:INFO:create_model() successfully completed......................................
2022-07-27 18:40:13,639:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:13,640:INFO:Creating metrics dataframe
2022-07-27 18:40:13,689:INFO:Initializing Huber Regressor
2022-07-27 18:40:13,689:INFO:Total runtime is 0.1826096296310425 minutes
2022-07-27 18:40:13,705:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:13,705:INFO:Initializing create_model()
2022-07-27 18:40:13,705:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:13,705:INFO:Checking exceptions
2022-07-27 18:40:13,713:INFO:Importing libraries
2022-07-27 18:40:13,713:INFO:Copying training dataset
2022-07-27 18:40:13,877:INFO:Defining folds
2022-07-27 18:40:13,885:INFO:Declaring metric variables
2022-07-27 18:40:13,894:INFO:Importing untrained model
2022-07-27 18:40:13,910:INFO:Huber Regressor Imported successfully
2022-07-27 18:40:13,950:INFO:Starting cross validation
2022-07-27 18:40:13,950:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:15,012:INFO:Calculating mean and std
2022-07-27 18:40:15,012:INFO:Creating metrics dataframe
2022-07-27 18:40:15,068:INFO:Uploading results into container
2022-07-27 18:40:15,068:INFO:Uploading model into container now
2022-07-27 18:40:15,068:INFO:master_model_container: 11
2022-07-27 18:40:15,068:INFO:display_container: 3
2022-07-27 18:40:15,068:INFO:HuberRegressor()
2022-07-27 18:40:15,068:INFO:create_model() successfully completed......................................
2022-07-27 18:40:15,180:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:15,180:INFO:Creating metrics dataframe
2022-07-27 18:40:15,220:INFO:Initializing K Neighbors Regressor
2022-07-27 18:40:15,220:INFO:Total runtime is 0.20813181002934775 minutes
2022-07-27 18:40:15,228:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:15,228:INFO:Initializing create_model()
2022-07-27 18:40:15,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:15,236:INFO:Checking exceptions
2022-07-27 18:40:15,240:INFO:Importing libraries
2022-07-27 18:40:15,240:INFO:Copying training dataset
2022-07-27 18:40:15,380:INFO:Defining folds
2022-07-27 18:40:15,380:INFO:Declaring metric variables
2022-07-27 18:40:15,389:INFO:Importing untrained model
2022-07-27 18:40:15,403:INFO:K Neighbors Regressor Imported successfully
2022-07-27 18:40:15,425:INFO:Starting cross validation
2022-07-27 18:40:15,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:16,226:INFO:Calculating mean and std
2022-07-27 18:40:16,226:INFO:Creating metrics dataframe
2022-07-27 18:40:16,269:INFO:Uploading results into container
2022-07-27 18:40:16,269:INFO:Uploading model into container now
2022-07-27 18:40:16,269:INFO:master_model_container: 12
2022-07-27 18:40:16,269:INFO:display_container: 3
2022-07-27 18:40:16,269:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-27 18:40:16,269:INFO:create_model() successfully completed......................................
2022-07-27 18:40:16,371:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:16,371:INFO:Creating metrics dataframe
2022-07-27 18:40:16,399:INFO:Initializing Decision Tree Regressor
2022-07-27 18:40:16,399:INFO:Total runtime is 0.22778214613596598 minutes
2022-07-27 18:40:16,415:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:16,415:INFO:Initializing create_model()
2022-07-27 18:40:16,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:16,415:INFO:Checking exceptions
2022-07-27 18:40:16,415:INFO:Importing libraries
2022-07-27 18:40:16,415:INFO:Copying training dataset
2022-07-27 18:40:16,528:INFO:Defining folds
2022-07-27 18:40:16,528:INFO:Declaring metric variables
2022-07-27 18:40:16,536:INFO:Importing untrained model
2022-07-27 18:40:16,552:INFO:Decision Tree Regressor Imported successfully
2022-07-27 18:40:16,570:INFO:Starting cross validation
2022-07-27 18:40:16,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:17,293:INFO:Calculating mean and std
2022-07-27 18:40:17,293:INFO:Creating metrics dataframe
2022-07-27 18:40:17,335:INFO:Uploading results into container
2022-07-27 18:40:17,335:INFO:Uploading model into container now
2022-07-27 18:40:17,335:INFO:master_model_container: 13
2022-07-27 18:40:17,335:INFO:display_container: 3
2022-07-27 18:40:17,335:INFO:DecisionTreeRegressor(random_state=123)
2022-07-27 18:40:17,335:INFO:create_model() successfully completed......................................
2022-07-27 18:40:17,435:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:17,435:INFO:Creating metrics dataframe
2022-07-27 18:40:17,468:INFO:Initializing Random Forest Regressor
2022-07-27 18:40:17,468:INFO:Total runtime is 0.2455977479616801 minutes
2022-07-27 18:40:17,479:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:17,479:INFO:Initializing create_model()
2022-07-27 18:40:17,479:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:17,479:INFO:Checking exceptions
2022-07-27 18:40:17,487:INFO:Importing libraries
2022-07-27 18:40:17,487:INFO:Copying training dataset
2022-07-27 18:40:17,593:INFO:Defining folds
2022-07-27 18:40:17,593:INFO:Declaring metric variables
2022-07-27 18:40:17,601:INFO:Importing untrained model
2022-07-27 18:40:17,610:INFO:Random Forest Regressor Imported successfully
2022-07-27 18:40:17,635:INFO:Starting cross validation
2022-07-27 18:40:17,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:21,021:INFO:Calculating mean and std
2022-07-27 18:40:21,023:INFO:Creating metrics dataframe
2022-07-27 18:40:21,073:INFO:Uploading results into container
2022-07-27 18:40:21,073:INFO:Uploading model into container now
2022-07-27 18:40:21,073:INFO:master_model_container: 14
2022-07-27 18:40:21,073:INFO:display_container: 3
2022-07-27 18:40:21,073:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-07-27 18:40:21,073:INFO:create_model() successfully completed......................................
2022-07-27 18:40:21,193:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:21,193:INFO:Creating metrics dataframe
2022-07-27 18:40:21,227:INFO:Initializing Extra Trees Regressor
2022-07-27 18:40:21,227:INFO:Total runtime is 0.3082408507664999 minutes
2022-07-27 18:40:21,243:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:21,243:INFO:Initializing create_model()
2022-07-27 18:40:21,243:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:21,243:INFO:Checking exceptions
2022-07-27 18:40:21,251:INFO:Importing libraries
2022-07-27 18:40:21,251:INFO:Copying training dataset
2022-07-27 18:40:21,395:INFO:Defining folds
2022-07-27 18:40:21,395:INFO:Declaring metric variables
2022-07-27 18:40:21,406:INFO:Importing untrained model
2022-07-27 18:40:21,414:INFO:Extra Trees Regressor Imported successfully
2022-07-27 18:40:21,438:INFO:Starting cross validation
2022-07-27 18:40:21,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:24,077:INFO:Calculating mean and std
2022-07-27 18:40:24,077:INFO:Creating metrics dataframe
2022-07-27 18:40:24,126:INFO:Uploading results into container
2022-07-27 18:40:24,126:INFO:Uploading model into container now
2022-07-27 18:40:24,126:INFO:master_model_container: 15
2022-07-27 18:40:24,126:INFO:display_container: 3
2022-07-27 18:40:24,126:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-07-27 18:40:24,126:INFO:create_model() successfully completed......................................
2022-07-27 18:40:24,234:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:24,234:INFO:Creating metrics dataframe
2022-07-27 18:40:24,259:INFO:Initializing AdaBoost Regressor
2022-07-27 18:40:24,259:INFO:Total runtime is 0.35877898534139 minutes
2022-07-27 18:40:24,276:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:24,276:INFO:Initializing create_model()
2022-07-27 18:40:24,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:24,276:INFO:Checking exceptions
2022-07-27 18:40:24,276:INFO:Importing libraries
2022-07-27 18:40:24,276:INFO:Copying training dataset
2022-07-27 18:40:24,385:INFO:Defining folds
2022-07-27 18:40:24,385:INFO:Declaring metric variables
2022-07-27 18:40:24,393:INFO:Importing untrained model
2022-07-27 18:40:24,409:INFO:AdaBoost Regressor Imported successfully
2022-07-27 18:40:24,433:INFO:Starting cross validation
2022-07-27 18:40:24,433:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:25,486:INFO:Calculating mean and std
2022-07-27 18:40:25,487:INFO:Creating metrics dataframe
2022-07-27 18:40:25,523:INFO:Uploading results into container
2022-07-27 18:40:25,523:INFO:Uploading model into container now
2022-07-27 18:40:25,523:INFO:master_model_container: 16
2022-07-27 18:40:25,523:INFO:display_container: 3
2022-07-27 18:40:25,523:INFO:AdaBoostRegressor(random_state=123)
2022-07-27 18:40:25,523:INFO:create_model() successfully completed......................................
2022-07-27 18:40:25,627:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:25,627:INFO:Creating metrics dataframe
2022-07-27 18:40:25,667:INFO:Initializing Gradient Boosting Regressor
2022-07-27 18:40:25,667:INFO:Total runtime is 0.3822440346082052 minutes
2022-07-27 18:40:25,684:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:25,685:INFO:Initializing create_model()
2022-07-27 18:40:25,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:25,685:INFO:Checking exceptions
2022-07-27 18:40:25,687:INFO:Importing libraries
2022-07-27 18:40:25,688:INFO:Copying training dataset
2022-07-27 18:40:25,801:INFO:Defining folds
2022-07-27 18:40:25,801:INFO:Declaring metric variables
2022-07-27 18:40:25,811:INFO:Importing untrained model
2022-07-27 18:40:25,820:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 18:40:25,843:INFO:Starting cross validation
2022-07-27 18:40:25,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:27,443:INFO:Calculating mean and std
2022-07-27 18:40:27,443:INFO:Creating metrics dataframe
2022-07-27 18:40:27,478:INFO:Uploading results into container
2022-07-27 18:40:27,486:INFO:Uploading model into container now
2022-07-27 18:40:27,486:INFO:master_model_container: 17
2022-07-27 18:40:27,486:INFO:display_container: 3
2022-07-27 18:40:27,486:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 18:40:27,486:INFO:create_model() successfully completed......................................
2022-07-27 18:40:27,584:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:27,584:INFO:Creating metrics dataframe
2022-07-27 18:40:27,618:INFO:Initializing Extreme Gradient Boosting
2022-07-27 18:40:27,618:INFO:Total runtime is 0.4147522886594137 minutes
2022-07-27 18:40:27,626:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:27,626:INFO:Initializing create_model()
2022-07-27 18:40:27,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:27,626:INFO:Checking exceptions
2022-07-27 18:40:27,634:INFO:Importing libraries
2022-07-27 18:40:27,634:INFO:Copying training dataset
2022-07-27 18:40:27,784:INFO:Defining folds
2022-07-27 18:40:27,784:INFO:Declaring metric variables
2022-07-27 18:40:27,792:INFO:Importing untrained model
2022-07-27 18:40:27,808:INFO:Extreme Gradient Boosting Imported successfully
2022-07-27 18:40:27,833:INFO:Starting cross validation
2022-07-27 18:40:27,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:30,334:INFO:Calculating mean and std
2022-07-27 18:40:30,334:INFO:Creating metrics dataframe
2022-07-27 18:40:30,367:INFO:Uploading results into container
2022-07-27 18:40:30,367:INFO:Uploading model into container now
2022-07-27 18:40:30,367:INFO:master_model_container: 18
2022-07-27 18:40:30,367:INFO:display_container: 3
2022-07-27 18:40:30,367:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-27 18:40:30,367:INFO:create_model() successfully completed......................................
2022-07-27 18:40:30,467:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:30,467:INFO:Creating metrics dataframe
2022-07-27 18:40:30,506:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 18:40:30,506:INFO:Total runtime is 0.4628878633181255 minutes
2022-07-27 18:40:30,518:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:30,518:INFO:Initializing create_model()
2022-07-27 18:40:30,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:30,518:INFO:Checking exceptions
2022-07-27 18:40:30,518:INFO:Importing libraries
2022-07-27 18:40:30,518:INFO:Copying training dataset
2022-07-27 18:40:30,688:INFO:Defining folds
2022-07-27 18:40:30,688:INFO:Declaring metric variables
2022-07-27 18:40:30,704:INFO:Importing untrained model
2022-07-27 18:40:30,728:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-27 18:40:30,760:INFO:Starting cross validation
2022-07-27 18:40:30,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:34,034:INFO:Calculating mean and std
2022-07-27 18:40:34,042:INFO:Creating metrics dataframe
2022-07-27 18:40:34,083:INFO:Uploading results into container
2022-07-27 18:40:34,091:INFO:Uploading model into container now
2022-07-27 18:40:34,091:INFO:master_model_container: 19
2022-07-27 18:40:34,093:INFO:display_container: 3
2022-07-27 18:40:34,093:INFO:LGBMRegressor(random_state=123)
2022-07-27 18:40:34,093:INFO:create_model() successfully completed......................................
2022-07-27 18:40:34,216:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:34,216:INFO:Creating metrics dataframe
2022-07-27 18:40:34,260:INFO:Initializing Dummy Regressor
2022-07-27 18:40:34,260:INFO:Total runtime is 0.5254647493362428 minutes
2022-07-27 18:40:34,268:INFO:SubProcess create_model() called ==================================
2022-07-27 18:40:34,276:INFO:Initializing create_model()
2022-07-27 18:40:34,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000018465C42430>, kwargs={})
2022-07-27 18:40:34,276:INFO:Checking exceptions
2022-07-27 18:40:34,276:INFO:Importing libraries
2022-07-27 18:40:34,276:INFO:Copying training dataset
2022-07-27 18:40:34,443:INFO:Defining folds
2022-07-27 18:40:34,443:INFO:Declaring metric variables
2022-07-27 18:40:34,451:INFO:Importing untrained model
2022-07-27 18:40:34,467:INFO:Dummy Regressor Imported successfully
2022-07-27 18:40:34,499:INFO:Starting cross validation
2022-07-27 18:40:34,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 18:40:35,393:INFO:Calculating mean and std
2022-07-27 18:40:35,393:INFO:Creating metrics dataframe
2022-07-27 18:40:35,458:INFO:Uploading results into container
2022-07-27 18:40:35,458:INFO:Uploading model into container now
2022-07-27 18:40:35,458:INFO:master_model_container: 20
2022-07-27 18:40:35,458:INFO:display_container: 3
2022-07-27 18:40:35,458:INFO:DummyRegressor()
2022-07-27 18:40:35,458:INFO:create_model() successfully completed......................................
2022-07-27 18:40:35,597:INFO:SubProcess create_model() end ==================================
2022-07-27 18:40:35,597:INFO:Creating metrics dataframe
2022-07-27 18:40:35,669:INFO:Initializing create_model()
2022-07-27 18:40:35,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 18:40:35,669:INFO:Checking exceptions
2022-07-27 18:40:35,669:INFO:Importing libraries
2022-07-27 18:40:35,669:INFO:Copying training dataset
2022-07-27 18:40:35,832:INFO:Defining folds
2022-07-27 18:40:35,832:INFO:Declaring metric variables
2022-07-27 18:40:35,832:INFO:Importing untrained model
2022-07-27 18:40:35,832:INFO:Declaring custom model
2022-07-27 18:40:35,840:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 18:40:35,840:INFO:Cross validation set to False
2022-07-27 18:40:35,840:INFO:Fitting Model
2022-07-27 18:40:36,316:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 18:40:36,316:INFO:create_models() successfully completed......................................
2022-07-27 18:40:36,557:INFO:master_model_container: 20
2022-07-27 18:40:36,565:INFO:display_container: 3
2022-07-27 18:40:36,565:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 18:40:36,565:INFO:compare_models() successfully completed......................................
2022-07-27 18:40:36,815:INFO:Initializing plot_model()
2022-07-27 18:40:36,815:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000018465BB8FD0>, system=True)
2022-07-27 18:40:36,815:INFO:Checking exceptions
2022-07-27 18:40:36,823:INFO:Preparing display monitor
2022-07-27 18:40:36,839:INFO:Preloading libraries
2022-07-27 18:40:36,863:INFO:Copying training dataset
2022-07-27 18:40:36,863:INFO:Plot type: feature
2022-07-27 18:40:36,863:WARNING:No coef_ found. Trying feature_importances_
2022-07-27 18:40:37,511:INFO:Visual Rendered Successfully
2022-07-27 18:40:37,695:INFO:plot_model() successfully completed......................................
2022-07-27 18:40:37,926:INFO:Initializing save_model()
2022-07-27 18:40:37,926:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-07-27 18:40:37,934:INFO:Adding model into prep_pipe
2022-07-27 18:40:37,950:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-07-27 18:40:37,974:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-07-27 18:40:37,974:INFO:save_model() successfully completed......................................
2022-07-27 18:40:51,477:INFO:Initializing load_model()
2022-07-27 18:40:51,477:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:41:13,276:INFO:Initializing load_model()
2022-07-27 18:41:13,276:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:41:13,437:INFO:Initializing predict_model()
2022-07-27 18:41:13,437:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDD6CA0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ECB1D00>)
2022-07-27 18:41:13,444:INFO:Checking exceptions
2022-07-27 18:41:13,444:INFO:Preloading libraries
2022-07-27 18:42:27,375:INFO:Initializing load_model()
2022-07-27 18:42:27,383:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:42:27,552:INFO:Initializing predict_model()
2022-07-27 18:42:27,552:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9ECD2E50>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ECD9F40>)
2022-07-27 18:42:27,552:INFO:Checking exceptions
2022-07-27 18:42:27,552:INFO:Preloading libraries
2022-07-27 18:51:57,502:INFO:Initializing load_model()
2022-07-27 18:51:57,502:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:52:24,492:INFO:Initializing load_model()
2022-07-27 18:52:24,492:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:52:28,198:INFO:Initializing load_model()
2022-07-27 18:52:28,198:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:52:53,410:INFO:Initializing load_model()
2022-07-27 18:52:53,418:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:52:53,706:INFO:Initializing predict_model()
2022-07-27 18:52:53,706:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDD6AF0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE989B8D00>)
2022-07-27 18:52:53,706:INFO:Checking exceptions
2022-07-27 18:52:53,706:INFO:Preloading libraries
2022-07-27 18:53:13,664:INFO:Initializing load_model()
2022-07-27 18:53:13,664:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:17,729:INFO:Initializing load_model()
2022-07-27 18:53:17,729:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:21,738:INFO:Initializing load_model()
2022-07-27 18:53:21,738:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:21,898:INFO:Initializing predict_model()
2022-07-27 18:53:21,898:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EE1D8B0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9EC95340>)
2022-07-27 18:53:21,898:INFO:Checking exceptions
2022-07-27 18:53:21,906:INFO:Preloading libraries
2022-07-27 18:53:25,983:INFO:Initializing load_model()
2022-07-27 18:53:25,983:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:28,273:INFO:Initializing load_model()
2022-07-27 18:53:28,273:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:28,430:INFO:Initializing predict_model()
2022-07-27 18:53:28,430:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE989A2280>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ED0EDF0>)
2022-07-27 18:53:28,438:INFO:Checking exceptions
2022-07-27 18:53:28,438:INFO:Preloading libraries
2022-07-27 18:53:41,715:INFO:Initializing load_model()
2022-07-27 18:53:41,715:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:44,159:INFO:Initializing load_model()
2022-07-27 18:53:44,159:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:46,395:INFO:Initializing load_model()
2022-07-27 18:53:46,395:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:48,086:INFO:Initializing load_model()
2022-07-27 18:53:48,086:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:48,255:INFO:Initializing predict_model()
2022-07-27 18:53:48,255:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDE03A0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ED0C6D0>)
2022-07-27 18:53:48,255:INFO:Checking exceptions
2022-07-27 18:53:48,255:INFO:Preloading libraries
2022-07-27 18:53:55,893:INFO:Initializing load_model()
2022-07-27 18:53:55,893:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:56,165:INFO:Initializing load_model()
2022-07-27 18:53:56,165:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:53:56,334:INFO:Initializing predict_model()
2022-07-27 18:53:56,334:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDF4C10>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE989B8DC0>)
2022-07-27 18:53:56,334:INFO:Checking exceptions
2022-07-27 18:53:56,334:INFO:Preloading libraries
2022-07-27 18:53:59,907:INFO:Initializing load_model()
2022-07-27 18:53:59,907:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:54:00,061:INFO:Initializing predict_model()
2022-07-27 18:54:00,067:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDF4AF0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ED0CF10>)
2022-07-27 18:54:00,067:INFO:Checking exceptions
2022-07-27 18:54:00,067:INFO:Preloading libraries
2022-07-27 18:54:01,057:INFO:Initializing load_model()
2022-07-27 18:54:01,057:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 18:54:01,209:INFO:Initializing predict_model()
2022-07-27 18:54:01,209:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDE0C10>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9881CD30>)
2022-07-27 18:54:01,209:INFO:Checking exceptions
2022-07-27 18:54:01,209:INFO:Preloading libraries
2022-07-27 20:16:42,036:INFO:Initializing load_model()
2022-07-27 20:16:42,036:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:18:55,423:INFO:Initializing load_model()
2022-07-27 20:18:55,423:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:01,446:INFO:Initializing load_model()
2022-07-27 20:19:01,446:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:01,759:INFO:Initializing predict_model()
2022-07-27 20:19:01,759:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDF4AF0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9EDDED60>)
2022-07-27 20:19:01,767:INFO:Checking exceptions
2022-07-27 20:19:01,783:INFO:Preloading libraries
2022-07-27 20:19:12,413:INFO:Initializing load_model()
2022-07-27 20:19:12,413:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:15,239:INFO:Initializing load_model()
2022-07-27 20:19:15,247:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:49,845:INFO:Initializing load_model()
2022-07-27 20:19:49,845:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:57,817:INFO:Initializing load_model()
2022-07-27 20:19:57,817:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:58,089:INFO:Initializing load_model()
2022-07-27 20:19:58,089:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-27 20:19:58,275:INFO:Initializing predict_model()
2022-07-27 20:19:58,275:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001FE9EDF5040>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE9ECC39A0>)
2022-07-27 20:19:58,292:INFO:Checking exceptions
2022-07-27 20:19:58,292:INFO:Preloading libraries
2022-07-27 20:22:12,762:INFO:Preparing display monitor
2022-07-27 20:22:15,336:INFO:PyCaret RegressionExperiment
2022-07-27 20:22:15,336:INFO:Logging name: reg-default-name
2022-07-27 20:22:15,336:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-27 20:22:15,336:INFO:version 3.0.0
2022-07-27 20:22:15,336:INFO:Initializing setup()
2022-07-27 20:22:15,336:INFO:self.USI: acd7
2022-07-27 20:22:15,336:INFO:self.variable_keys: {'imputation_classifier', 'fold_groups_param_full', 'iterative_imputation_iters_param', 'variable_keys', 'fold_generator', '_all_metrics', '_gpu_n_jobs_param', 'master_model_container', 'exp_name_log', 'n_jobs_param', '_all_models', 'memory', '_available_plots', 'y_test', 'exp_id', '_ml_usecase', 'idx', 'logging_param', 'html_param', 'display_container', 'gpu_param', 'stratify_param', 'data', 'USI', '_all_models_internal', 'transform_target_method_param', 'fold_groups_param', 'pipeline', 'fold_param', 'transform_target_param', 'fold_shuffle_param', 'X_train', 'y', 'X', 'imputation_regressor', 'experiment__', 'log_plots_param', 'target_param', 'X_test', 'y_train', 'seed'}
2022-07-27 20:22:15,336:INFO:Checking environment
2022-07-27 20:22:15,336:INFO:python_version: 3.9.12
2022-07-27 20:22:15,336:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-27 20:22:15,336:INFO:machine: AMD64
2022-07-27 20:22:15,336:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-27 20:22:15,336:INFO:Memory: svmem(total=8419573760, available=1382760448, percent=83.6, used=7036813312, free=1382760448)
2022-07-27 20:22:15,336:INFO:Physical Core: 4
2022-07-27 20:22:15,336:INFO:Logical Core: 8
2022-07-27 20:22:15,336:INFO:Checking libraries
2022-07-27 20:22:15,336:INFO:pd==1.4.2
2022-07-27 20:22:15,336:INFO:numpy==1.21.5
2022-07-27 20:22:15,336:INFO:sklearn==1.0.2
2022-07-27 20:22:15,594:INFO:lightgbm==3.3.2
2022-07-27 20:22:15,645:INFO:xgboost==1.6.1
2022-07-27 20:22:15,645:WARNING:catboost not found
2022-07-27 20:22:15,645:WARNING:mlflow not found
2022-07-27 20:22:15,645:INFO:Set up data.
2022-07-27 20:22:15,645:INFO:Set up target column.
2022-07-27 20:22:15,645:INFO:Set up train/test split.
2022-07-27 20:22:15,653:INFO:Set up folding strategy.
2022-07-27 20:22:15,653:INFO:Assigning column types.
2022-07-27 20:22:15,661:INFO:Preparing preprocessing pipeline...
2022-07-27 20:22:15,661:INFO:Set up simple imputation.
2022-07-27 20:22:15,669:INFO:Set up encoding of ordinal features.
2022-07-27 20:22:15,678:INFO:Set up encoding of categorical features.
2022-07-27 20:22:15,678:INFO:Set up polynomial features.
2022-07-27 20:22:15,678:INFO:Set up binning of numerical features.
2022-07-27 20:22:15,678:INFO:Set up feature normalization.
2022-07-27 20:22:15,753:INFO:Finished creating preprocessing pipeline.
2022-07-27 20:22:15,761:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-27 20:22:15,761:INFO:Creating final display dataframe.
2022-07-27 20:22:15,769:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              acd7
2022-07-27 20:22:15,769:INFO:Preparing display monitor
2022-07-27 20:22:15,952:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 20:22:16,120:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-27 20:22:16,128:INFO:setup() successfully completed in 0.78s...............
2022-07-27 20:22:16,265:INFO:Initializing create_model()
2022-07-27 20:22:16,265:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 20:22:16,265:INFO:Checking exceptions
2022-07-27 20:22:16,273:INFO:Preparing display monitor
2022-07-27 20:22:16,313:INFO:Importing libraries
2022-07-27 20:22:16,313:INFO:Copying training dataset
2022-07-27 20:22:16,461:INFO:Defining folds
2022-07-27 20:22:16,461:INFO:Declaring metric variables
2022-07-27 20:22:16,470:INFO:Importing untrained model
2022-07-27 20:22:16,486:INFO:Linear Regression Imported successfully
2022-07-27 20:22:16,511:INFO:Starting cross validation
2022-07-27 20:22:16,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:28,335:INFO:Calculating mean and std
2022-07-27 20:22:28,335:INFO:Creating metrics dataframe
2022-07-27 20:22:28,727:INFO:Finalizing model
2022-07-27 20:22:28,818:INFO:Uploading results into container
2022-07-27 20:22:28,826:INFO:Uploading model into container now
2022-07-27 20:22:28,835:INFO:master_model_container: 1
2022-07-27 20:22:28,835:INFO:display_container: 2
2022-07-27 20:22:28,835:INFO:LinearRegression(n_jobs=-1)
2022-07-27 20:22:28,835:INFO:create_model() successfully completed......................................
2022-07-27 20:22:29,033:INFO:Initializing compare_models()
2022-07-27 20:22:29,033:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-27 20:22:29,033:INFO:Checking exceptions
2022-07-27 20:22:29,041:INFO:Preparing display monitor
2022-07-27 20:22:29,041:INFO:Preparing display monitor
2022-07-27 20:22:29,089:INFO:Initializing Linear Regression
2022-07-27 20:22:29,089:INFO:Total runtime is 0.0 minutes
2022-07-27 20:22:29,105:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:29,113:INFO:Initializing create_model()
2022-07-27 20:22:29,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:29,113:INFO:Checking exceptions
2022-07-27 20:22:29,113:INFO:Importing libraries
2022-07-27 20:22:29,113:INFO:Copying training dataset
2022-07-27 20:22:29,284:INFO:Defining folds
2022-07-27 20:22:29,284:INFO:Declaring metric variables
2022-07-27 20:22:29,295:INFO:Importing untrained model
2022-07-27 20:22:29,301:INFO:Linear Regression Imported successfully
2022-07-27 20:22:29,325:INFO:Starting cross validation
2022-07-27 20:22:29,325:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:30,093:INFO:Calculating mean and std
2022-07-27 20:22:30,093:INFO:Creating metrics dataframe
2022-07-27 20:22:30,142:INFO:Uploading results into container
2022-07-27 20:22:30,142:INFO:Uploading model into container now
2022-07-27 20:22:30,142:INFO:master_model_container: 2
2022-07-27 20:22:30,142:INFO:display_container: 3
2022-07-27 20:22:30,142:INFO:LinearRegression(n_jobs=-1)
2022-07-27 20:22:30,142:INFO:create_model() successfully completed......................................
2022-07-27 20:22:30,278:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:30,279:INFO:Creating metrics dataframe
2022-07-27 20:22:30,309:INFO:Initializing Lasso Regression
2022-07-27 20:22:30,309:INFO:Total runtime is 0.020348580678304036 minutes
2022-07-27 20:22:30,326:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:30,326:INFO:Initializing create_model()
2022-07-27 20:22:30,326:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:30,326:INFO:Checking exceptions
2022-07-27 20:22:30,326:INFO:Importing libraries
2022-07-27 20:22:30,326:INFO:Copying training dataset
2022-07-27 20:22:30,485:INFO:Defining folds
2022-07-27 20:22:30,485:INFO:Declaring metric variables
2022-07-27 20:22:30,493:INFO:Importing untrained model
2022-07-27 20:22:30,514:INFO:Lasso Regression Imported successfully
2022-07-27 20:22:30,551:INFO:Starting cross validation
2022-07-27 20:22:30,551:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:31,976:INFO:Calculating mean and std
2022-07-27 20:22:31,976:INFO:Creating metrics dataframe
2022-07-27 20:22:32,040:INFO:Uploading results into container
2022-07-27 20:22:32,048:INFO:Uploading model into container now
2022-07-27 20:22:32,048:INFO:master_model_container: 3
2022-07-27 20:22:32,048:INFO:display_container: 3
2022-07-27 20:22:32,048:INFO:Lasso(random_state=123)
2022-07-27 20:22:32,048:INFO:create_model() successfully completed......................................
2022-07-27 20:22:32,185:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:32,185:INFO:Creating metrics dataframe
2022-07-27 20:22:32,209:INFO:Initializing Ridge Regression
2022-07-27 20:22:32,209:INFO:Total runtime is 0.05200166304906209 minutes
2022-07-27 20:22:32,225:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:32,225:INFO:Initializing create_model()
2022-07-27 20:22:32,225:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:32,225:INFO:Checking exceptions
2022-07-27 20:22:32,225:INFO:Importing libraries
2022-07-27 20:22:32,225:INFO:Copying training dataset
2022-07-27 20:22:32,396:INFO:Defining folds
2022-07-27 20:22:32,396:INFO:Declaring metric variables
2022-07-27 20:22:32,407:INFO:Importing untrained model
2022-07-27 20:22:32,418:INFO:Ridge Regression Imported successfully
2022-07-27 20:22:32,459:INFO:Starting cross validation
2022-07-27 20:22:32,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:33,489:INFO:Calculating mean and std
2022-07-27 20:22:33,489:INFO:Creating metrics dataframe
2022-07-27 20:22:33,545:INFO:Uploading results into container
2022-07-27 20:22:33,545:INFO:Uploading model into container now
2022-07-27 20:22:33,545:INFO:master_model_container: 4
2022-07-27 20:22:33,545:INFO:display_container: 3
2022-07-27 20:22:33,545:INFO:Ridge(random_state=123)
2022-07-27 20:22:33,545:INFO:create_model() successfully completed......................................
2022-07-27 20:22:33,689:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:33,689:INFO:Creating metrics dataframe
2022-07-27 20:22:33,753:INFO:Initializing Elastic Net
2022-07-27 20:22:33,753:INFO:Total runtime is 0.07774920463562011 minutes
2022-07-27 20:22:33,777:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:33,777:INFO:Initializing create_model()
2022-07-27 20:22:33,777:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:33,777:INFO:Checking exceptions
2022-07-27 20:22:33,777:INFO:Importing libraries
2022-07-27 20:22:33,777:INFO:Copying training dataset
2022-07-27 20:22:34,050:INFO:Defining folds
2022-07-27 20:22:34,050:INFO:Declaring metric variables
2022-07-27 20:22:34,066:INFO:Importing untrained model
2022-07-27 20:22:34,084:INFO:Elastic Net Imported successfully
2022-07-27 20:22:34,125:INFO:Starting cross validation
2022-07-27 20:22:34,125:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:35,042:INFO:Calculating mean and std
2022-07-27 20:22:35,042:INFO:Creating metrics dataframe
2022-07-27 20:22:35,122:INFO:Uploading results into container
2022-07-27 20:22:35,122:INFO:Uploading model into container now
2022-07-27 20:22:35,122:INFO:master_model_container: 5
2022-07-27 20:22:35,122:INFO:display_container: 3
2022-07-27 20:22:35,122:INFO:ElasticNet(random_state=123)
2022-07-27 20:22:35,122:INFO:create_model() successfully completed......................................
2022-07-27 20:22:35,267:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:35,267:INFO:Creating metrics dataframe
2022-07-27 20:22:35,292:INFO:Initializing Least Angle Regression
2022-07-27 20:22:35,292:INFO:Total runtime is 0.1033867319424947 minutes
2022-07-27 20:22:35,308:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:35,308:INFO:Initializing create_model()
2022-07-27 20:22:35,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:35,308:INFO:Checking exceptions
2022-07-27 20:22:35,308:INFO:Importing libraries
2022-07-27 20:22:35,308:INFO:Copying training dataset
2022-07-27 20:22:35,446:INFO:Defining folds
2022-07-27 20:22:35,446:INFO:Declaring metric variables
2022-07-27 20:22:35,457:INFO:Importing untrained model
2022-07-27 20:22:35,465:INFO:Least Angle Regression Imported successfully
2022-07-27 20:22:35,497:INFO:Starting cross validation
2022-07-27 20:22:35,505:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:36,242:INFO:Calculating mean and std
2022-07-27 20:22:36,242:INFO:Creating metrics dataframe
2022-07-27 20:22:36,292:INFO:Uploading results into container
2022-07-27 20:22:36,292:INFO:Uploading model into container now
2022-07-27 20:22:36,292:INFO:master_model_container: 6
2022-07-27 20:22:36,292:INFO:display_container: 3
2022-07-27 20:22:36,292:INFO:Lars(random_state=123)
2022-07-27 20:22:36,292:INFO:create_model() successfully completed......................................
2022-07-27 20:22:36,392:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:36,392:INFO:Creating metrics dataframe
2022-07-27 20:22:36,426:INFO:Initializing Lasso Least Angle Regression
2022-07-27 20:22:36,426:INFO:Total runtime is 0.12228838602701822 minutes
2022-07-27 20:22:36,434:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:36,434:INFO:Initializing create_model()
2022-07-27 20:22:36,434:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:36,434:INFO:Checking exceptions
2022-07-27 20:22:36,442:INFO:Importing libraries
2022-07-27 20:22:36,442:INFO:Copying training dataset
2022-07-27 20:22:36,567:INFO:Defining folds
2022-07-27 20:22:36,567:INFO:Declaring metric variables
2022-07-27 20:22:36,584:INFO:Importing untrained model
2022-07-27 20:22:36,600:INFO:Lasso Least Angle Regression Imported successfully
2022-07-27 20:22:36,632:INFO:Starting cross validation
2022-07-27 20:22:36,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:37,434:INFO:Calculating mean and std
2022-07-27 20:22:37,442:INFO:Creating metrics dataframe
2022-07-27 20:22:37,484:INFO:Uploading results into container
2022-07-27 20:22:37,484:INFO:Uploading model into container now
2022-07-27 20:22:37,484:INFO:master_model_container: 7
2022-07-27 20:22:37,484:INFO:display_container: 3
2022-07-27 20:22:37,484:INFO:LassoLars(random_state=123)
2022-07-27 20:22:37,484:INFO:create_model() successfully completed......................................
2022-07-27 20:22:37,646:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:37,646:INFO:Creating metrics dataframe
2022-07-27 20:22:37,726:INFO:Initializing Orthogonal Matching Pursuit
2022-07-27 20:22:37,726:INFO:Total runtime is 0.14396426677703855 minutes
2022-07-27 20:22:37,745:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:37,745:INFO:Initializing create_model()
2022-07-27 20:22:37,745:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:37,746:INFO:Checking exceptions
2022-07-27 20:22:37,749:INFO:Importing libraries
2022-07-27 20:22:37,749:INFO:Copying training dataset
2022-07-27 20:22:37,918:INFO:Defining folds
2022-07-27 20:22:37,926:INFO:Declaring metric variables
2022-07-27 20:22:37,926:INFO:Importing untrained model
2022-07-27 20:22:37,942:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-27 20:22:37,979:INFO:Starting cross validation
2022-07-27 20:22:37,982:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:39,189:INFO:Calculating mean and std
2022-07-27 20:22:39,189:INFO:Creating metrics dataframe
2022-07-27 20:22:39,261:INFO:Uploading results into container
2022-07-27 20:22:39,261:INFO:Uploading model into container now
2022-07-27 20:22:39,261:INFO:master_model_container: 8
2022-07-27 20:22:39,261:INFO:display_container: 3
2022-07-27 20:22:39,261:INFO:OrthogonalMatchingPursuit()
2022-07-27 20:22:39,261:INFO:create_model() successfully completed......................................
2022-07-27 20:22:39,437:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:39,437:INFO:Creating metrics dataframe
2022-07-27 20:22:39,509:INFO:Initializing Bayesian Ridge
2022-07-27 20:22:39,509:INFO:Total runtime is 0.1736666162808736 minutes
2022-07-27 20:22:39,525:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:39,525:INFO:Initializing create_model()
2022-07-27 20:22:39,525:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:39,525:INFO:Checking exceptions
2022-07-27 20:22:39,533:INFO:Importing libraries
2022-07-27 20:22:39,533:INFO:Copying training dataset
2022-07-27 20:22:39,789:INFO:Defining folds
2022-07-27 20:22:39,789:INFO:Declaring metric variables
2022-07-27 20:22:39,797:INFO:Importing untrained model
2022-07-27 20:22:39,813:INFO:Bayesian Ridge Imported successfully
2022-07-27 20:22:39,845:INFO:Starting cross validation
2022-07-27 20:22:39,845:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:40,704:INFO:Calculating mean and std
2022-07-27 20:22:40,704:INFO:Creating metrics dataframe
2022-07-27 20:22:40,769:INFO:Uploading results into container
2022-07-27 20:22:40,769:INFO:Uploading model into container now
2022-07-27 20:22:40,769:INFO:master_model_container: 9
2022-07-27 20:22:40,769:INFO:display_container: 3
2022-07-27 20:22:40,769:INFO:BayesianRidge()
2022-07-27 20:22:40,769:INFO:create_model() successfully completed......................................
2022-07-27 20:22:40,930:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:40,930:INFO:Creating metrics dataframe
2022-07-27 20:22:41,002:INFO:Initializing Passive Aggressive Regressor
2022-07-27 20:22:41,002:INFO:Total runtime is 0.19855304956436154 minutes
2022-07-27 20:22:41,018:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:41,026:INFO:Initializing create_model()
2022-07-27 20:22:41,026:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:41,026:INFO:Checking exceptions
2022-07-27 20:22:41,026:INFO:Importing libraries
2022-07-27 20:22:41,026:INFO:Copying training dataset
2022-07-27 20:22:41,275:INFO:Defining folds
2022-07-27 20:22:41,275:INFO:Declaring metric variables
2022-07-27 20:22:41,291:INFO:Importing untrained model
2022-07-27 20:22:41,307:INFO:Passive Aggressive Regressor Imported successfully
2022-07-27 20:22:41,347:INFO:Starting cross validation
2022-07-27 20:22:41,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:42,521:INFO:Calculating mean and std
2022-07-27 20:22:42,521:INFO:Creating metrics dataframe
2022-07-27 20:22:42,561:INFO:Uploading results into container
2022-07-27 20:22:42,561:INFO:Uploading model into container now
2022-07-27 20:22:42,561:INFO:master_model_container: 10
2022-07-27 20:22:42,561:INFO:display_container: 3
2022-07-27 20:22:42,561:INFO:PassiveAggressiveRegressor(random_state=123)
2022-07-27 20:22:42,561:INFO:create_model() successfully completed......................................
2022-07-27 20:22:42,658:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:42,658:INFO:Creating metrics dataframe
2022-07-27 20:22:42,692:INFO:Initializing Huber Regressor
2022-07-27 20:22:42,692:INFO:Total runtime is 0.22672161658604936 minutes
2022-07-27 20:22:42,708:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:42,708:INFO:Initializing create_model()
2022-07-27 20:22:42,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:42,708:INFO:Checking exceptions
2022-07-27 20:22:42,708:INFO:Importing libraries
2022-07-27 20:22:42,708:INFO:Copying training dataset
2022-07-27 20:22:42,835:INFO:Defining folds
2022-07-27 20:22:42,835:INFO:Declaring metric variables
2022-07-27 20:22:42,843:INFO:Importing untrained model
2022-07-27 20:22:42,851:INFO:Huber Regressor Imported successfully
2022-07-27 20:22:42,875:INFO:Starting cross validation
2022-07-27 20:22:42,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:43,813:INFO:Calculating mean and std
2022-07-27 20:22:43,813:INFO:Creating metrics dataframe
2022-07-27 20:22:43,861:INFO:Uploading results into container
2022-07-27 20:22:43,861:INFO:Uploading model into container now
2022-07-27 20:22:43,861:INFO:master_model_container: 11
2022-07-27 20:22:43,861:INFO:display_container: 3
2022-07-27 20:22:43,861:INFO:HuberRegressor()
2022-07-27 20:22:43,861:INFO:create_model() successfully completed......................................
2022-07-27 20:22:44,013:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:44,013:INFO:Creating metrics dataframe
2022-07-27 20:22:44,069:INFO:Initializing K Neighbors Regressor
2022-07-27 20:22:44,069:INFO:Total runtime is 0.24967297712961828 minutes
2022-07-27 20:22:44,085:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:44,085:INFO:Initializing create_model()
2022-07-27 20:22:44,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:44,085:INFO:Checking exceptions
2022-07-27 20:22:44,093:INFO:Importing libraries
2022-07-27 20:22:44,093:INFO:Copying training dataset
2022-07-27 20:22:44,277:INFO:Defining folds
2022-07-27 20:22:44,277:INFO:Declaring metric variables
2022-07-27 20:22:44,289:INFO:Importing untrained model
2022-07-27 20:22:44,300:INFO:K Neighbors Regressor Imported successfully
2022-07-27 20:22:44,332:INFO:Starting cross validation
2022-07-27 20:22:44,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:45,314:INFO:Calculating mean and std
2022-07-27 20:22:45,314:INFO:Creating metrics dataframe
2022-07-27 20:22:45,370:INFO:Uploading results into container
2022-07-27 20:22:45,370:INFO:Uploading model into container now
2022-07-27 20:22:45,370:INFO:master_model_container: 12
2022-07-27 20:22:45,370:INFO:display_container: 3
2022-07-27 20:22:45,370:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-27 20:22:45,370:INFO:create_model() successfully completed......................................
2022-07-27 20:22:45,474:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:45,474:INFO:Creating metrics dataframe
2022-07-27 20:22:45,507:INFO:Initializing Decision Tree Regressor
2022-07-27 20:22:45,507:INFO:Total runtime is 0.27364703019460035 minutes
2022-07-27 20:22:45,522:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:45,522:INFO:Initializing create_model()
2022-07-27 20:22:45,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:45,522:INFO:Checking exceptions
2022-07-27 20:22:45,522:INFO:Importing libraries
2022-07-27 20:22:45,522:INFO:Copying training dataset
2022-07-27 20:22:45,666:INFO:Defining folds
2022-07-27 20:22:45,666:INFO:Declaring metric variables
2022-07-27 20:22:45,674:INFO:Importing untrained model
2022-07-27 20:22:45,691:INFO:Decision Tree Regressor Imported successfully
2022-07-27 20:22:45,715:INFO:Starting cross validation
2022-07-27 20:22:45,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:46,450:INFO:Calculating mean and std
2022-07-27 20:22:46,450:INFO:Creating metrics dataframe
2022-07-27 20:22:46,516:INFO:Uploading results into container
2022-07-27 20:22:46,516:INFO:Uploading model into container now
2022-07-27 20:22:46,516:INFO:master_model_container: 13
2022-07-27 20:22:46,516:INFO:display_container: 3
2022-07-27 20:22:46,516:INFO:DecisionTreeRegressor(random_state=123)
2022-07-27 20:22:46,516:INFO:create_model() successfully completed......................................
2022-07-27 20:22:46,624:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:46,624:INFO:Creating metrics dataframe
2022-07-27 20:22:46,657:INFO:Initializing Random Forest Regressor
2022-07-27 20:22:46,657:INFO:Total runtime is 0.29280196030934647 minutes
2022-07-27 20:22:46,673:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:46,673:INFO:Initializing create_model()
2022-07-27 20:22:46,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:46,673:INFO:Checking exceptions
2022-07-27 20:22:46,673:INFO:Importing libraries
2022-07-27 20:22:46,673:INFO:Copying training dataset
2022-07-27 20:22:46,825:INFO:Defining folds
2022-07-27 20:22:46,825:INFO:Declaring metric variables
2022-07-27 20:22:46,833:INFO:Importing untrained model
2022-07-27 20:22:46,841:INFO:Random Forest Regressor Imported successfully
2022-07-27 20:22:46,873:INFO:Starting cross validation
2022-07-27 20:22:46,873:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:50,349:INFO:Calculating mean and std
2022-07-27 20:22:50,349:INFO:Creating metrics dataframe
2022-07-27 20:22:50,397:INFO:Uploading results into container
2022-07-27 20:22:50,397:INFO:Uploading model into container now
2022-07-27 20:22:50,397:INFO:master_model_container: 14
2022-07-27 20:22:50,397:INFO:display_container: 3
2022-07-27 20:22:50,397:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-07-27 20:22:50,397:INFO:create_model() successfully completed......................................
2022-07-27 20:22:50,493:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:50,493:INFO:Creating metrics dataframe
2022-07-27 20:22:50,525:INFO:Initializing Extra Trees Regressor
2022-07-27 20:22:50,525:INFO:Total runtime is 0.35727291504542025 minutes
2022-07-27 20:22:50,541:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:50,541:INFO:Initializing create_model()
2022-07-27 20:22:50,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:50,541:INFO:Checking exceptions
2022-07-27 20:22:50,541:INFO:Importing libraries
2022-07-27 20:22:50,541:INFO:Copying training dataset
2022-07-27 20:22:50,693:INFO:Defining folds
2022-07-27 20:22:50,693:INFO:Declaring metric variables
2022-07-27 20:22:50,701:INFO:Importing untrained model
2022-07-27 20:22:50,717:INFO:Extra Trees Regressor Imported successfully
2022-07-27 20:22:50,747:INFO:Starting cross validation
2022-07-27 20:22:50,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:53,407:INFO:Calculating mean and std
2022-07-27 20:22:53,416:INFO:Creating metrics dataframe
2022-07-27 20:22:53,465:INFO:Uploading results into container
2022-07-27 20:22:53,465:INFO:Uploading model into container now
2022-07-27 20:22:53,465:INFO:master_model_container: 15
2022-07-27 20:22:53,465:INFO:display_container: 3
2022-07-27 20:22:53,465:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-07-27 20:22:53,465:INFO:create_model() successfully completed......................................
2022-07-27 20:22:53,566:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:53,566:INFO:Creating metrics dataframe
2022-07-27 20:22:53,606:INFO:Initializing AdaBoost Regressor
2022-07-27 20:22:53,606:INFO:Total runtime is 0.4086235046386718 minutes
2022-07-27 20:22:53,614:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:53,614:INFO:Initializing create_model()
2022-07-27 20:22:53,614:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:53,614:INFO:Checking exceptions
2022-07-27 20:22:53,622:INFO:Importing libraries
2022-07-27 20:22:53,622:INFO:Copying training dataset
2022-07-27 20:22:53,761:INFO:Defining folds
2022-07-27 20:22:53,761:INFO:Declaring metric variables
2022-07-27 20:22:53,773:INFO:Importing untrained model
2022-07-27 20:22:53,783:INFO:AdaBoost Regressor Imported successfully
2022-07-27 20:22:53,807:INFO:Starting cross validation
2022-07-27 20:22:53,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:54,870:INFO:Calculating mean and std
2022-07-27 20:22:54,870:INFO:Creating metrics dataframe
2022-07-27 20:22:54,918:INFO:Uploading results into container
2022-07-27 20:22:54,918:INFO:Uploading model into container now
2022-07-27 20:22:54,918:INFO:master_model_container: 16
2022-07-27 20:22:54,918:INFO:display_container: 3
2022-07-27 20:22:54,918:INFO:AdaBoostRegressor(random_state=123)
2022-07-27 20:22:54,918:INFO:create_model() successfully completed......................................
2022-07-27 20:22:55,023:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:55,023:INFO:Creating metrics dataframe
2022-07-27 20:22:55,048:INFO:Initializing Gradient Boosting Regressor
2022-07-27 20:22:55,048:INFO:Total runtime is 0.43266497850418084 minutes
2022-07-27 20:22:55,064:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:55,064:INFO:Initializing create_model()
2022-07-27 20:22:55,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:55,064:INFO:Checking exceptions
2022-07-27 20:22:55,064:INFO:Importing libraries
2022-07-27 20:22:55,064:INFO:Copying training dataset
2022-07-27 20:22:55,226:INFO:Defining folds
2022-07-27 20:22:55,226:INFO:Declaring metric variables
2022-07-27 20:22:55,242:INFO:Importing untrained model
2022-07-27 20:22:55,250:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 20:22:55,282:INFO:Starting cross validation
2022-07-27 20:22:55,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:22:57,024:INFO:Calculating mean and std
2022-07-27 20:22:57,024:INFO:Creating metrics dataframe
2022-07-27 20:22:57,064:INFO:Uploading results into container
2022-07-27 20:22:57,064:INFO:Uploading model into container now
2022-07-27 20:22:57,064:INFO:master_model_container: 17
2022-07-27 20:22:57,064:INFO:display_container: 3
2022-07-27 20:22:57,064:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 20:22:57,064:INFO:create_model() successfully completed......................................
2022-07-27 20:22:57,165:INFO:SubProcess create_model() end ==================================
2022-07-27 20:22:57,165:INFO:Creating metrics dataframe
2022-07-27 20:22:57,213:INFO:Initializing Extreme Gradient Boosting
2022-07-27 20:22:57,213:INFO:Total runtime is 0.4687382380167643 minutes
2022-07-27 20:22:57,229:INFO:SubProcess create_model() called ==================================
2022-07-27 20:22:57,237:INFO:Initializing create_model()
2022-07-27 20:22:57,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:22:57,237:INFO:Checking exceptions
2022-07-27 20:22:57,237:INFO:Importing libraries
2022-07-27 20:22:57,237:INFO:Copying training dataset
2022-07-27 20:22:57,424:INFO:Defining folds
2022-07-27 20:22:57,424:INFO:Declaring metric variables
2022-07-27 20:22:57,432:INFO:Importing untrained model
2022-07-27 20:22:57,448:INFO:Extreme Gradient Boosting Imported successfully
2022-07-27 20:22:57,477:INFO:Starting cross validation
2022-07-27 20:22:57,479:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:23:00,702:INFO:Calculating mean and std
2022-07-27 20:23:00,702:INFO:Creating metrics dataframe
2022-07-27 20:23:00,750:INFO:Uploading results into container
2022-07-27 20:23:00,750:INFO:Uploading model into container now
2022-07-27 20:23:00,750:INFO:master_model_container: 18
2022-07-27 20:23:00,750:INFO:display_container: 3
2022-07-27 20:23:00,750:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-27 20:23:00,750:INFO:create_model() successfully completed......................................
2022-07-27 20:23:00,871:INFO:SubProcess create_model() end ==================================
2022-07-27 20:23:00,871:INFO:Creating metrics dataframe
2022-07-27 20:23:00,903:INFO:Initializing Light Gradient Boosting Machine
2022-07-27 20:23:00,903:INFO:Total runtime is 0.530235747496287 minutes
2022-07-27 20:23:00,911:INFO:SubProcess create_model() called ==================================
2022-07-27 20:23:00,919:INFO:Initializing create_model()
2022-07-27 20:23:00,919:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:23:00,919:INFO:Checking exceptions
2022-07-27 20:23:00,919:INFO:Importing libraries
2022-07-27 20:23:00,919:INFO:Copying training dataset
2022-07-27 20:23:01,090:INFO:Defining folds
2022-07-27 20:23:01,090:INFO:Declaring metric variables
2022-07-27 20:23:01,101:INFO:Importing untrained model
2022-07-27 20:23:01,113:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-27 20:23:01,144:INFO:Starting cross validation
2022-07-27 20:23:01,144:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:23:04,922:INFO:Calculating mean and std
2022-07-27 20:23:04,922:INFO:Creating metrics dataframe
2022-07-27 20:23:04,971:INFO:Uploading results into container
2022-07-27 20:23:04,971:INFO:Uploading model into container now
2022-07-27 20:23:04,971:INFO:master_model_container: 19
2022-07-27 20:23:04,971:INFO:display_container: 3
2022-07-27 20:23:04,971:INFO:LGBMRegressor(random_state=123)
2022-07-27 20:23:04,971:INFO:create_model() successfully completed......................................
2022-07-27 20:23:05,086:INFO:SubProcess create_model() end ==================================
2022-07-27 20:23:05,086:INFO:Creating metrics dataframe
2022-07-27 20:23:05,118:INFO:Initializing Dummy Regressor
2022-07-27 20:23:05,118:INFO:Total runtime is 0.6004848361015319 minutes
2022-07-27 20:23:05,134:INFO:SubProcess create_model() called ==================================
2022-07-27 20:23:05,134:INFO:Initializing create_model()
2022-07-27 20:23:05,134:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001FA4F6189D0>, kwargs={})
2022-07-27 20:23:05,134:INFO:Checking exceptions
2022-07-27 20:23:05,134:INFO:Importing libraries
2022-07-27 20:23:05,134:INFO:Copying training dataset
2022-07-27 20:23:05,298:INFO:Defining folds
2022-07-27 20:23:05,298:INFO:Declaring metric variables
2022-07-27 20:23:05,306:INFO:Importing untrained model
2022-07-27 20:23:05,322:INFO:Dummy Regressor Imported successfully
2022-07-27 20:23:05,346:INFO:Starting cross validation
2022-07-27 20:23:05,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-27 20:23:06,030:INFO:Calculating mean and std
2022-07-27 20:23:06,031:INFO:Creating metrics dataframe
2022-07-27 20:23:06,073:INFO:Uploading results into container
2022-07-27 20:23:06,073:INFO:Uploading model into container now
2022-07-27 20:23:06,073:INFO:master_model_container: 20
2022-07-27 20:23:06,073:INFO:display_container: 3
2022-07-27 20:23:06,074:INFO:DummyRegressor()
2022-07-27 20:23:06,074:INFO:create_model() successfully completed......................................
2022-07-27 20:23:06,164:INFO:SubProcess create_model() end ==================================
2022-07-27 20:23:06,172:INFO:Creating metrics dataframe
2022-07-27 20:23:06,228:INFO:Initializing create_model()
2022-07-27 20:23:06,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-27 20:23:06,228:INFO:Checking exceptions
2022-07-27 20:23:06,236:INFO:Importing libraries
2022-07-27 20:23:06,236:INFO:Copying training dataset
2022-07-27 20:23:06,389:INFO:Defining folds
2022-07-27 20:23:06,389:INFO:Declaring metric variables
2022-07-27 20:23:06,389:INFO:Importing untrained model
2022-07-27 20:23:06,389:INFO:Declaring custom model
2022-07-27 20:23:06,389:INFO:Gradient Boosting Regressor Imported successfully
2022-07-27 20:23:06,397:INFO:Cross validation set to False
2022-07-27 20:23:06,397:INFO:Fitting Model
2022-07-27 20:23:06,862:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 20:23:06,862:INFO:create_models() successfully completed......................................
2022-07-27 20:23:07,006:INFO:master_model_container: 20
2022-07-27 20:23:07,006:INFO:display_container: 3
2022-07-27 20:23:07,014:INFO:GradientBoostingRegressor(random_state=123)
2022-07-27 20:23:07,014:INFO:compare_models() successfully completed......................................
2022-07-27 20:23:07,271:INFO:Initializing plot_model()
2022-07-27 20:23:07,271:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FA4F658F70>, system=True)
2022-07-27 20:23:07,271:INFO:Checking exceptions
2022-07-27 20:23:07,278:INFO:Preparing display monitor
2022-07-27 20:23:07,302:INFO:Preloading libraries
2022-07-27 20:23:07,326:INFO:Copying training dataset
2022-07-27 20:23:07,326:INFO:Plot type: feature
2022-07-27 20:23:07,326:WARNING:No coef_ found. Trying feature_importances_
2022-07-27 20:23:07,922:INFO:Visual Rendered Successfully
2022-07-27 20:23:08,106:INFO:plot_model() successfully completed......................................
2022-07-27 20:23:08,227:INFO:Initializing save_model()
2022-07-27 20:23:08,227:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-07-27 20:23:08,227:INFO:Adding model into prep_pipe
2022-07-27 20:23:08,251:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-07-27 20:23:08,275:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-07-27 20:23:08,275:INFO:save_model() successfully completed......................................
2022-07-28 07:18:23,460:INFO:Initializing load_model()
2022-07-28 07:18:23,460:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-07-31 09:05:52,246:INFO:Preparing display monitor
2022-07-31 09:06:36,146:INFO:PyCaret RegressionExperiment
2022-07-31 09:06:36,146:INFO:Logging name: reg-default-name
2022-07-31 09:06:36,146:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-31 09:06:36,146:INFO:version 3.0.0
2022-07-31 09:06:36,146:INFO:Initializing setup()
2022-07-31 09:06:36,146:INFO:self.USI: c966
2022-07-31 09:06:36,146:INFO:self.variable_keys: {'USI', 'exp_name_log', 'imputation_regressor', '_gpu_n_jobs_param', 'experiment__', 'fold_shuffle_param', 'transform_target_method_param', 'data', 'X_test', 'y_train', '_all_metrics', 'stratify_param', 'gpu_param', 'fold_generator', 'transform_target_param', '_all_models_internal', '_all_models', 'html_param', 'master_model_container', 'fold_groups_param_full', 'seed', '_available_plots', 'exp_id', 'y_test', 'n_jobs_param', 'log_plots_param', 'display_container', 'iterative_imputation_iters_param', '_ml_usecase', 'X_train', 'target_param', 'logging_param', 'y', 'X', 'memory', 'pipeline', 'imputation_classifier', 'fold_param', 'variable_keys', 'fold_groups_param', 'idx'}
2022-07-31 09:06:36,146:INFO:Checking environment
2022-07-31 09:06:36,146:INFO:python_version: 3.9.12
2022-07-31 09:06:36,146:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-31 09:06:36,146:INFO:machine: AMD64
2022-07-31 09:06:36,146:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-31 09:06:36,146:INFO:Memory: svmem(total=8419573760, available=1441501184, percent=82.9, used=6978072576, free=1441501184)
2022-07-31 09:06:36,146:INFO:Physical Core: 4
2022-07-31 09:06:36,146:INFO:Logical Core: 8
2022-07-31 09:06:36,146:INFO:Checking libraries
2022-07-31 09:06:36,150:INFO:pd==1.4.2
2022-07-31 09:06:36,150:INFO:numpy==1.21.5
2022-07-31 09:06:36,150:INFO:sklearn==1.0.2
2022-07-31 09:06:36,438:INFO:lightgbm==3.3.2
2022-07-31 09:06:36,522:INFO:xgboost==1.6.1
2022-07-31 09:06:36,522:WARNING:catboost not found
2022-07-31 09:06:36,522:WARNING:mlflow not found
2022-07-31 09:06:36,522:INFO:Set up data.
2022-07-31 09:06:36,522:INFO:Set up target column.
2022-07-31 09:06:36,522:INFO:Set up train/test split.
2022-07-31 09:06:36,522:INFO:Set up folding strategy.
2022-07-31 09:06:36,522:INFO:Assigning column types.
2022-07-31 09:06:36,538:INFO:Preparing preprocessing pipeline...
2022-07-31 09:06:36,538:INFO:Set up simple imputation.
2022-07-31 09:06:36,546:INFO:Set up encoding of ordinal features.
2022-07-31 09:06:36,562:INFO:Set up encoding of categorical features.
2022-07-31 09:06:36,562:INFO:Set up polynomial features.
2022-07-31 09:06:36,562:INFO:Set up binning of numerical features.
2022-07-31 09:06:36,562:INFO:Set up feature normalization.
2022-07-31 09:06:36,662:INFO:Finished creating preprocessing pipeline.
2022-07-31 09:06:36,678:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-31 09:06:36,678:INFO:Creating final display dataframe.
2022-07-31 09:06:36,686:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              c966
2022-07-31 09:06:36,686:INFO:Preparing display monitor
2022-07-31 09:06:36,931:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:06:37,114:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:06:37,122:INFO:setup() successfully completed in 1.01s...............
2022-07-31 09:07:26,230:INFO:PyCaret RegressionExperiment
2022-07-31 09:07:26,230:INFO:Logging name: reg-default-name
2022-07-31 09:07:26,230:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-31 09:07:26,230:INFO:version 3.0.0
2022-07-31 09:07:26,230:INFO:Initializing setup()
2022-07-31 09:07:26,230:INFO:self.USI: ae45
2022-07-31 09:07:26,230:INFO:self.variable_keys: {'USI', 'exp_name_log', 'imputation_regressor', '_gpu_n_jobs_param', 'experiment__', 'fold_shuffle_param', 'transform_target_method_param', 'data', 'X_test', 'y_train', '_all_metrics', 'stratify_param', 'gpu_param', 'fold_generator', 'transform_target_param', '_all_models_internal', '_all_models', 'html_param', 'master_model_container', 'fold_groups_param_full', 'seed', '_available_plots', 'exp_id', 'y_test', 'n_jobs_param', 'log_plots_param', 'display_container', 'iterative_imputation_iters_param', '_ml_usecase', 'X_train', 'target_param', 'logging_param', 'y', 'X', 'memory', 'pipeline', 'imputation_classifier', 'fold_param', 'variable_keys', 'fold_groups_param', 'idx'}
2022-07-31 09:07:26,230:INFO:Checking environment
2022-07-31 09:07:26,230:INFO:python_version: 3.9.12
2022-07-31 09:07:26,230:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-31 09:07:26,230:INFO:machine: AMD64
2022-07-31 09:07:26,230:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-31 09:07:26,230:INFO:Memory: svmem(total=8419573760, available=1387966464, percent=83.5, used=7031607296, free=1387966464)
2022-07-31 09:07:26,230:INFO:Physical Core: 4
2022-07-31 09:07:26,230:INFO:Logical Core: 8
2022-07-31 09:07:26,230:INFO:Checking libraries
2022-07-31 09:07:26,230:INFO:pd==1.4.2
2022-07-31 09:07:26,230:INFO:numpy==1.21.5
2022-07-31 09:07:26,230:INFO:sklearn==1.0.2
2022-07-31 09:07:26,230:INFO:lightgbm==3.3.2
2022-07-31 09:07:26,230:INFO:xgboost==1.6.1
2022-07-31 09:07:26,230:WARNING:catboost not found
2022-07-31 09:07:26,238:WARNING:mlflow not found
2022-07-31 09:07:26,238:INFO:Set up data.
2022-07-31 09:07:26,238:INFO:Set up target column.
2022-07-31 09:07:26,238:INFO:Set up train/test split.
2022-07-31 09:07:26,246:INFO:Set up folding strategy.
2022-07-31 09:07:26,246:INFO:Assigning column types.
2022-07-31 09:07:26,254:INFO:Preparing preprocessing pipeline...
2022-07-31 09:07:26,254:INFO:Set up simple imputation.
2022-07-31 09:07:26,254:INFO:Set up encoding of ordinal features.
2022-07-31 09:07:26,262:INFO:Set up encoding of categorical features.
2022-07-31 09:07:26,334:INFO:Finished creating preprocessing pipeline.
2022-07-31 09:07:26,358:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-07-31 09:07:26,358:INFO:Creating final display dataframe.
2022-07-31 09:07:26,374:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              ae45
2022-07-31 09:07:26,374:INFO:Preparing display monitor
2022-07-31 09:07:26,603:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:26,776:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:26,784:INFO:setup() successfully completed in 0.55s...............
2022-07-31 09:07:37,796:INFO:PyCaret RegressionExperiment
2022-07-31 09:07:37,796:INFO:Logging name: reg-default-name
2022-07-31 09:07:37,796:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-31 09:07:37,797:INFO:version 3.0.0
2022-07-31 09:07:37,797:INFO:Initializing setup()
2022-07-31 09:07:37,797:INFO:self.USI: 86f7
2022-07-31 09:07:37,797:INFO:self.variable_keys: {'USI', 'exp_name_log', 'imputation_regressor', '_gpu_n_jobs_param', 'experiment__', 'fold_shuffle_param', 'transform_target_method_param', 'data', 'X_test', 'y_train', '_all_metrics', 'stratify_param', 'gpu_param', 'fold_generator', 'transform_target_param', '_all_models_internal', '_all_models', 'html_param', 'master_model_container', 'fold_groups_param_full', 'seed', '_available_plots', 'exp_id', 'y_test', 'n_jobs_param', 'log_plots_param', 'display_container', 'iterative_imputation_iters_param', '_ml_usecase', 'X_train', 'target_param', 'logging_param', 'y', 'X', 'memory', 'pipeline', 'imputation_classifier', 'fold_param', 'variable_keys', 'fold_groups_param', 'idx'}
2022-07-31 09:07:37,797:INFO:Checking environment
2022-07-31 09:07:37,798:INFO:python_version: 3.9.12
2022-07-31 09:07:37,798:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-31 09:07:37,798:INFO:machine: AMD64
2022-07-31 09:07:37,798:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-31 09:07:37,798:INFO:Memory: svmem(total=8419573760, available=1399492608, percent=83.4, used=7020081152, free=1399492608)
2022-07-31 09:07:37,798:INFO:Physical Core: 4
2022-07-31 09:07:37,799:INFO:Logical Core: 8
2022-07-31 09:07:37,799:INFO:Checking libraries
2022-07-31 09:07:37,799:INFO:pd==1.4.2
2022-07-31 09:07:37,799:INFO:numpy==1.21.5
2022-07-31 09:07:37,799:INFO:sklearn==1.0.2
2022-07-31 09:07:37,799:INFO:lightgbm==3.3.2
2022-07-31 09:07:37,800:INFO:xgboost==1.6.1
2022-07-31 09:07:37,803:WARNING:catboost not found
2022-07-31 09:07:37,804:WARNING:mlflow not found
2022-07-31 09:07:37,804:INFO:Set up data.
2022-07-31 09:07:37,811:INFO:Set up target column.
2022-07-31 09:07:37,811:INFO:Set up train/test split.
2022-07-31 09:07:37,820:INFO:Set up folding strategy.
2022-07-31 09:07:37,820:INFO:Assigning column types.
2022-07-31 09:07:37,825:INFO:Preparing preprocessing pipeline...
2022-07-31 09:07:37,826:INFO:Set up simple imputation.
2022-07-31 09:07:37,833:INFO:Set up encoding of ordinal features.
2022-07-31 09:07:37,841:INFO:Set up encoding of categorical features.
2022-07-31 09:07:37,841:INFO:Set up polynomial features.
2022-07-31 09:07:37,841:INFO:Set up binning of numerical features.
2022-07-31 09:07:37,841:INFO:Set up feature normalization.
2022-07-31 09:07:37,970:INFO:Finished creating preprocessing pipeline.
2022-07-31 09:07:37,986:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-31 09:07:37,986:INFO:Creating final display dataframe.
2022-07-31 09:07:37,994:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              86f7
2022-07-31 09:07:37,994:INFO:Preparing display monitor
2022-07-31 09:07:38,209:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:38,359:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:38,367:INFO:setup() successfully completed in 0.57s...............
2022-07-31 09:07:57,271:INFO:PyCaret RegressionExperiment
2022-07-31 09:07:57,271:INFO:Logging name: reg-default-name
2022-07-31 09:07:57,271:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-31 09:07:57,271:INFO:version 3.0.0
2022-07-31 09:07:57,271:INFO:Initializing setup()
2022-07-31 09:07:57,271:INFO:self.USI: 9910
2022-07-31 09:07:57,276:INFO:self.variable_keys: {'USI', 'exp_name_log', 'imputation_regressor', '_gpu_n_jobs_param', 'experiment__', 'fold_shuffle_param', 'transform_target_method_param', 'data', 'X_test', 'y_train', '_all_metrics', 'stratify_param', 'gpu_param', 'fold_generator', 'transform_target_param', '_all_models_internal', '_all_models', 'html_param', 'master_model_container', 'fold_groups_param_full', 'seed', '_available_plots', 'exp_id', 'y_test', 'n_jobs_param', 'log_plots_param', 'display_container', 'iterative_imputation_iters_param', '_ml_usecase', 'X_train', 'target_param', 'logging_param', 'y', 'X', 'memory', 'pipeline', 'imputation_classifier', 'fold_param', 'variable_keys', 'fold_groups_param', 'idx'}
2022-07-31 09:07:57,276:INFO:Checking environment
2022-07-31 09:07:57,276:INFO:python_version: 3.9.12
2022-07-31 09:07:57,276:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-31 09:07:57,276:INFO:machine: AMD64
2022-07-31 09:07:57,276:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-31 09:07:57,276:INFO:Memory: svmem(total=8419573760, available=1400856576, percent=83.4, used=7018717184, free=1400856576)
2022-07-31 09:07:57,276:INFO:Physical Core: 4
2022-07-31 09:07:57,276:INFO:Logical Core: 8
2022-07-31 09:07:57,276:INFO:Checking libraries
2022-07-31 09:07:57,277:INFO:pd==1.4.2
2022-07-31 09:07:57,277:INFO:numpy==1.21.5
2022-07-31 09:07:57,277:INFO:sklearn==1.0.2
2022-07-31 09:07:57,277:INFO:lightgbm==3.3.2
2022-07-31 09:07:57,277:INFO:xgboost==1.6.1
2022-07-31 09:07:57,278:WARNING:catboost not found
2022-07-31 09:07:57,279:WARNING:mlflow not found
2022-07-31 09:07:57,279:INFO:Set up data.
2022-07-31 09:07:57,287:INFO:Set up target column.
2022-07-31 09:07:57,287:INFO:Set up train/test split.
2022-07-31 09:07:57,293:INFO:Set up folding strategy.
2022-07-31 09:07:57,293:INFO:Assigning column types.
2022-07-31 09:07:57,298:INFO:Preparing preprocessing pipeline...
2022-07-31 09:07:57,300:INFO:Set up simple imputation.
2022-07-31 09:07:57,309:INFO:Set up encoding of ordinal features.
2022-07-31 09:07:57,321:INFO:Set up encoding of categorical features.
2022-07-31 09:07:57,426:INFO:Finished creating preprocessing pipeline.
2022-07-31 09:07:57,444:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-07-31 09:07:57,444:INFO:Creating final display dataframe.
2022-07-31 09:07:57,451:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              9910
2022-07-31 09:07:57,451:INFO:Preparing display monitor
2022-07-31 09:07:57,659:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:57,820:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:07:57,828:INFO:setup() successfully completed in 0.55s...............
2022-07-31 09:10:16,340:INFO:Preparing display monitor
2022-07-31 09:10:19,001:INFO:PyCaret RegressionExperiment
2022-07-31 09:10:19,001:INFO:Logging name: reg-default-name
2022-07-31 09:10:19,001:INFO:ML Usecase: MLUsecase.REGRESSION
2022-07-31 09:10:19,001:INFO:version 3.0.0
2022-07-31 09:10:19,001:INFO:Initializing setup()
2022-07-31 09:10:19,001:INFO:self.USI: 9f1f
2022-07-31 09:10:19,001:INFO:self.variable_keys: {'seed', 'log_plots_param', 'X_test', 'idx', 'gpu_param', 'master_model_container', '_ml_usecase', 'logging_param', '_all_models', 'fold_shuffle_param', 'pipeline', 'fold_groups_param_full', 'imputation_classifier', 'iterative_imputation_iters_param', 'y', 'experiment__', 'X_train', '_all_metrics', 'html_param', 'y_test', 'exp_id', 'memory', '_all_models_internal', '_available_plots', 'exp_name_log', 'display_container', 'data', 'transform_target_method_param', 'y_train', 'imputation_regressor', '_gpu_n_jobs_param', 'target_param', 'variable_keys', 'fold_generator', 'fold_groups_param', 'fold_param', 'transform_target_param', 'n_jobs_param', 'stratify_param', 'X', 'USI'}
2022-07-31 09:10:19,001:INFO:Checking environment
2022-07-31 09:10:19,001:INFO:python_version: 3.9.12
2022-07-31 09:10:19,001:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-07-31 09:10:19,001:INFO:machine: AMD64
2022-07-31 09:10:19,001:INFO:platform: Windows-10-10.0.22000-SP0
2022-07-31 09:10:19,001:INFO:Memory: svmem(total=8419573760, available=1338413056, percent=84.1, used=7081160704, free=1338413056)
2022-07-31 09:10:19,001:INFO:Physical Core: 4
2022-07-31 09:10:19,008:INFO:Logical Core: 8
2022-07-31 09:10:19,008:INFO:Checking libraries
2022-07-31 09:10:19,008:INFO:pd==1.4.2
2022-07-31 09:10:19,008:INFO:numpy==1.21.5
2022-07-31 09:10:19,008:INFO:sklearn==1.0.2
2022-07-31 09:10:19,337:INFO:lightgbm==3.3.2
2022-07-31 09:10:19,377:INFO:xgboost==1.6.1
2022-07-31 09:10:19,377:WARNING:catboost not found
2022-07-31 09:10:19,377:WARNING:mlflow not found
2022-07-31 09:10:19,377:INFO:Set up data.
2022-07-31 09:10:19,385:INFO:Set up target column.
2022-07-31 09:10:19,385:INFO:Set up train/test split.
2022-07-31 09:10:19,393:INFO:Set up folding strategy.
2022-07-31 09:10:19,393:INFO:Assigning column types.
2022-07-31 09:10:19,401:INFO:Preparing preprocessing pipeline...
2022-07-31 09:10:19,401:INFO:Set up simple imputation.
2022-07-31 09:10:19,409:INFO:Set up encoding of ordinal features.
2022-07-31 09:10:19,417:INFO:Set up encoding of categorical features.
2022-07-31 09:10:19,417:INFO:Set up polynomial features.
2022-07-31 09:10:19,417:INFO:Set up binning of numerical features.
2022-07-31 09:10:19,417:INFO:Set up feature normalization.
2022-07-31 09:10:19,545:INFO:Finished creating preprocessing pipeline.
2022-07-31 09:10:19,569:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-07-31 09:10:19,569:INFO:Creating final display dataframe.
2022-07-31 09:10:19,577:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              9f1f
2022-07-31 09:10:19,577:INFO:Preparing display monitor
2022-07-31 09:10:19,873:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:10:20,127:WARNING:Couldn't import catboost.CatBoostRegressor
2022-07-31 09:10:20,143:INFO:setup() successfully completed in 1.13s...............
2022-07-31 09:10:20,270:INFO:Initializing create_model()
2022-07-31 09:10:20,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-31 09:10:20,270:INFO:Checking exceptions
2022-07-31 09:10:20,278:INFO:Preparing display monitor
2022-07-31 09:10:20,318:INFO:Importing libraries
2022-07-31 09:10:20,318:INFO:Copying training dataset
2022-07-31 09:10:20,542:INFO:Defining folds
2022-07-31 09:10:20,550:INFO:Declaring metric variables
2022-07-31 09:10:20,566:INFO:Importing untrained model
2022-07-31 09:10:20,582:INFO:Linear Regression Imported successfully
2022-07-31 09:10:20,622:INFO:Starting cross validation
2022-07-31 09:10:20,638:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:34,371:INFO:Calculating mean and std
2022-07-31 09:10:34,371:INFO:Creating metrics dataframe
2022-07-31 09:10:34,871:INFO:Finalizing model
2022-07-31 09:10:35,038:INFO:Uploading results into container
2022-07-31 09:10:35,038:INFO:Uploading model into container now
2022-07-31 09:10:35,046:INFO:master_model_container: 1
2022-07-31 09:10:35,046:INFO:display_container: 2
2022-07-31 09:10:35,054:INFO:LinearRegression(n_jobs=-1)
2022-07-31 09:10:35,054:INFO:create_model() successfully completed......................................
2022-07-31 09:10:35,272:INFO:Initializing compare_models()
2022-07-31 09:10:35,272:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-07-31 09:10:35,272:INFO:Checking exceptions
2022-07-31 09:10:35,280:INFO:Preparing display monitor
2022-07-31 09:10:35,280:INFO:Preparing display monitor
2022-07-31 09:10:35,336:INFO:Initializing Linear Regression
2022-07-31 09:10:35,336:INFO:Total runtime is 0.0 minutes
2022-07-31 09:10:35,352:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:35,352:INFO:Initializing create_model()
2022-07-31 09:10:35,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:35,352:INFO:Checking exceptions
2022-07-31 09:10:35,360:INFO:Importing libraries
2022-07-31 09:10:35,360:INFO:Copying training dataset
2022-07-31 09:10:35,653:INFO:Defining folds
2022-07-31 09:10:35,654:INFO:Declaring metric variables
2022-07-31 09:10:35,673:INFO:Importing untrained model
2022-07-31 09:10:35,692:INFO:Linear Regression Imported successfully
2022-07-31 09:10:35,732:INFO:Starting cross validation
2022-07-31 09:10:35,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:36,848:INFO:Calculating mean and std
2022-07-31 09:10:36,848:INFO:Creating metrics dataframe
2022-07-31 09:10:36,976:INFO:Uploading results into container
2022-07-31 09:10:36,976:INFO:Uploading model into container now
2022-07-31 09:10:36,976:INFO:master_model_container: 2
2022-07-31 09:10:36,976:INFO:display_container: 3
2022-07-31 09:10:36,976:INFO:LinearRegression(n_jobs=-1)
2022-07-31 09:10:36,976:INFO:create_model() successfully completed......................................
2022-07-31 09:10:37,249:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:37,249:INFO:Creating metrics dataframe
2022-07-31 09:10:37,325:INFO:Initializing Lasso Regression
2022-07-31 09:10:37,325:INFO:Total runtime is 0.03316059907277425 minutes
2022-07-31 09:10:37,344:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:37,344:INFO:Initializing create_model()
2022-07-31 09:10:37,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:37,344:INFO:Checking exceptions
2022-07-31 09:10:37,360:INFO:Importing libraries
2022-07-31 09:10:37,360:INFO:Copying training dataset
2022-07-31 09:10:37,825:INFO:Defining folds
2022-07-31 09:10:37,825:INFO:Declaring metric variables
2022-07-31 09:10:37,873:INFO:Importing untrained model
2022-07-31 09:10:37,913:INFO:Lasso Regression Imported successfully
2022-07-31 09:10:38,001:INFO:Starting cross validation
2022-07-31 09:10:38,009:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:39,236:INFO:Calculating mean and std
2022-07-31 09:10:39,236:INFO:Creating metrics dataframe
2022-07-31 09:10:39,276:INFO:Uploading results into container
2022-07-31 09:10:39,276:INFO:Uploading model into container now
2022-07-31 09:10:39,276:INFO:master_model_container: 3
2022-07-31 09:10:39,276:INFO:display_container: 3
2022-07-31 09:10:39,276:INFO:Lasso(random_state=123)
2022-07-31 09:10:39,276:INFO:create_model() successfully completed......................................
2022-07-31 09:10:39,380:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:39,380:INFO:Creating metrics dataframe
2022-07-31 09:10:39,412:INFO:Initializing Ridge Regression
2022-07-31 09:10:39,412:INFO:Total runtime is 0.06793627341588337 minutes
2022-07-31 09:10:39,420:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:39,428:INFO:Initializing create_model()
2022-07-31 09:10:39,428:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:39,428:INFO:Checking exceptions
2022-07-31 09:10:39,428:INFO:Importing libraries
2022-07-31 09:10:39,428:INFO:Copying training dataset
2022-07-31 09:10:39,588:INFO:Defining folds
2022-07-31 09:10:39,588:INFO:Declaring metric variables
2022-07-31 09:10:39,596:INFO:Importing untrained model
2022-07-31 09:10:39,604:INFO:Ridge Regression Imported successfully
2022-07-31 09:10:39,644:INFO:Starting cross validation
2022-07-31 09:10:39,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:40,405:INFO:Calculating mean and std
2022-07-31 09:10:40,405:INFO:Creating metrics dataframe
2022-07-31 09:10:40,470:INFO:Uploading results into container
2022-07-31 09:10:40,470:INFO:Uploading model into container now
2022-07-31 09:10:40,470:INFO:master_model_container: 4
2022-07-31 09:10:40,470:INFO:display_container: 3
2022-07-31 09:10:40,470:INFO:Ridge(random_state=123)
2022-07-31 09:10:40,470:INFO:create_model() successfully completed......................................
2022-07-31 09:10:40,587:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:40,587:INFO:Creating metrics dataframe
2022-07-31 09:10:40,613:INFO:Initializing Elastic Net
2022-07-31 09:10:40,613:INFO:Total runtime is 0.08795323371887206 minutes
2022-07-31 09:10:40,621:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:40,629:INFO:Initializing create_model()
2022-07-31 09:10:40,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:40,629:INFO:Checking exceptions
2022-07-31 09:10:40,629:INFO:Importing libraries
2022-07-31 09:10:40,629:INFO:Copying training dataset
2022-07-31 09:10:40,797:INFO:Defining folds
2022-07-31 09:10:40,797:INFO:Declaring metric variables
2022-07-31 09:10:40,805:INFO:Importing untrained model
2022-07-31 09:10:40,821:INFO:Elastic Net Imported successfully
2022-07-31 09:10:40,853:INFO:Starting cross validation
2022-07-31 09:10:40,853:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:42,183:INFO:Calculating mean and std
2022-07-31 09:10:42,191:INFO:Creating metrics dataframe
2022-07-31 09:10:42,287:INFO:Uploading results into container
2022-07-31 09:10:42,287:INFO:Uploading model into container now
2022-07-31 09:10:42,287:INFO:master_model_container: 5
2022-07-31 09:10:42,287:INFO:display_container: 3
2022-07-31 09:10:42,287:INFO:ElasticNet(random_state=123)
2022-07-31 09:10:42,287:INFO:create_model() successfully completed......................................
2022-07-31 09:10:42,703:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:42,703:INFO:Creating metrics dataframe
2022-07-31 09:10:42,735:INFO:Initializing Least Angle Regression
2022-07-31 09:10:42,735:INFO:Total runtime is 0.12332920630772909 minutes
2022-07-31 09:10:42,751:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:42,751:INFO:Initializing create_model()
2022-07-31 09:10:42,751:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:42,751:INFO:Checking exceptions
2022-07-31 09:10:42,751:INFO:Importing libraries
2022-07-31 09:10:42,751:INFO:Copying training dataset
2022-07-31 09:10:42,904:INFO:Defining folds
2022-07-31 09:10:42,904:INFO:Declaring metric variables
2022-07-31 09:10:42,912:INFO:Importing untrained model
2022-07-31 09:10:42,920:INFO:Least Angle Regression Imported successfully
2022-07-31 09:10:42,952:INFO:Starting cross validation
2022-07-31 09:10:42,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:44,030:INFO:Calculating mean and std
2022-07-31 09:10:44,033:INFO:Creating metrics dataframe
2022-07-31 09:10:44,079:INFO:Uploading results into container
2022-07-31 09:10:44,079:INFO:Uploading model into container now
2022-07-31 09:10:44,079:INFO:master_model_container: 6
2022-07-31 09:10:44,079:INFO:display_container: 3
2022-07-31 09:10:44,079:INFO:Lars(random_state=123)
2022-07-31 09:10:44,079:INFO:create_model() successfully completed......................................
2022-07-31 09:10:44,187:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:44,187:INFO:Creating metrics dataframe
2022-07-31 09:10:44,220:INFO:Initializing Lasso Least Angle Regression
2022-07-31 09:10:44,220:INFO:Total runtime is 0.14807512760162353 minutes
2022-07-31 09:10:44,236:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:44,236:INFO:Initializing create_model()
2022-07-31 09:10:44,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:44,236:INFO:Checking exceptions
2022-07-31 09:10:44,236:INFO:Importing libraries
2022-07-31 09:10:44,236:INFO:Copying training dataset
2022-07-31 09:10:44,388:INFO:Defining folds
2022-07-31 09:10:44,388:INFO:Declaring metric variables
2022-07-31 09:10:44,396:INFO:Importing untrained model
2022-07-31 09:10:44,404:INFO:Lasso Least Angle Regression Imported successfully
2022-07-31 09:10:44,436:INFO:Starting cross validation
2022-07-31 09:10:44,436:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:45,204:INFO:Calculating mean and std
2022-07-31 09:10:45,212:INFO:Creating metrics dataframe
2022-07-31 09:10:45,252:INFO:Uploading results into container
2022-07-31 09:10:45,252:INFO:Uploading model into container now
2022-07-31 09:10:45,252:INFO:master_model_container: 7
2022-07-31 09:10:45,252:INFO:display_container: 3
2022-07-31 09:10:45,252:INFO:LassoLars(random_state=123)
2022-07-31 09:10:45,252:INFO:create_model() successfully completed......................................
2022-07-31 09:10:45,362:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:45,362:INFO:Creating metrics dataframe
2022-07-31 09:10:45,396:INFO:Initializing Orthogonal Matching Pursuit
2022-07-31 09:10:45,396:INFO:Total runtime is 0.16767709255218505 minutes
2022-07-31 09:10:45,412:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:45,412:INFO:Initializing create_model()
2022-07-31 09:10:45,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:45,412:INFO:Checking exceptions
2022-07-31 09:10:45,420:INFO:Importing libraries
2022-07-31 09:10:45,420:INFO:Copying training dataset
2022-07-31 09:10:45,587:INFO:Defining folds
2022-07-31 09:10:45,587:INFO:Declaring metric variables
2022-07-31 09:10:45,595:INFO:Importing untrained model
2022-07-31 09:10:45,603:INFO:Orthogonal Matching Pursuit Imported successfully
2022-07-31 09:10:45,639:INFO:Starting cross validation
2022-07-31 09:10:45,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:46,581:INFO:Calculating mean and std
2022-07-31 09:10:46,581:INFO:Creating metrics dataframe
2022-07-31 09:10:46,645:INFO:Uploading results into container
2022-07-31 09:10:46,645:INFO:Uploading model into container now
2022-07-31 09:10:46,645:INFO:master_model_container: 8
2022-07-31 09:10:46,645:INFO:display_container: 3
2022-07-31 09:10:46,645:INFO:OrthogonalMatchingPursuit()
2022-07-31 09:10:46,645:INFO:create_model() successfully completed......................................
2022-07-31 09:10:46,772:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:46,780:INFO:Creating metrics dataframe
2022-07-31 09:10:46,804:INFO:Initializing Bayesian Ridge
2022-07-31 09:10:46,804:INFO:Total runtime is 0.19113478660583494 minutes
2022-07-31 09:10:46,820:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:46,820:INFO:Initializing create_model()
2022-07-31 09:10:46,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:46,820:INFO:Checking exceptions
2022-07-31 09:10:46,828:INFO:Importing libraries
2022-07-31 09:10:46,828:INFO:Copying training dataset
2022-07-31 09:10:46,980:INFO:Defining folds
2022-07-31 09:10:46,980:INFO:Declaring metric variables
2022-07-31 09:10:46,988:INFO:Importing untrained model
2022-07-31 09:10:47,004:INFO:Bayesian Ridge Imported successfully
2022-07-31 09:10:47,028:INFO:Starting cross validation
2022-07-31 09:10:47,028:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:48,037:INFO:Calculating mean and std
2022-07-31 09:10:48,037:INFO:Creating metrics dataframe
2022-07-31 09:10:48,089:INFO:Uploading results into container
2022-07-31 09:10:48,089:INFO:Uploading model into container now
2022-07-31 09:10:48,089:INFO:master_model_container: 9
2022-07-31 09:10:48,089:INFO:display_container: 3
2022-07-31 09:10:48,089:INFO:BayesianRidge()
2022-07-31 09:10:48,089:INFO:create_model() successfully completed......................................
2022-07-31 09:10:48,237:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:48,237:INFO:Creating metrics dataframe
2022-07-31 09:10:48,323:INFO:Initializing Passive Aggressive Regressor
2022-07-31 09:10:48,323:INFO:Total runtime is 0.21645075480143228 minutes
2022-07-31 09:10:48,350:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:48,350:INFO:Initializing create_model()
2022-07-31 09:10:48,358:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:48,358:INFO:Checking exceptions
2022-07-31 09:10:48,358:INFO:Importing libraries
2022-07-31 09:10:48,358:INFO:Copying training dataset
2022-07-31 09:10:48,726:INFO:Defining folds
2022-07-31 09:10:48,726:INFO:Declaring metric variables
2022-07-31 09:10:48,734:INFO:Importing untrained model
2022-07-31 09:10:48,750:INFO:Passive Aggressive Regressor Imported successfully
2022-07-31 09:10:48,782:INFO:Starting cross validation
2022-07-31 09:10:48,782:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:50,380:INFO:Calculating mean and std
2022-07-31 09:10:50,380:INFO:Creating metrics dataframe
2022-07-31 09:10:50,412:INFO:Uploading results into container
2022-07-31 09:10:50,412:INFO:Uploading model into container now
2022-07-31 09:10:50,412:INFO:master_model_container: 10
2022-07-31 09:10:50,412:INFO:display_container: 3
2022-07-31 09:10:50,412:INFO:PassiveAggressiveRegressor(random_state=123)
2022-07-31 09:10:50,412:INFO:create_model() successfully completed......................................
2022-07-31 09:10:50,517:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:50,517:INFO:Creating metrics dataframe
2022-07-31 09:10:50,549:INFO:Initializing Huber Regressor
2022-07-31 09:10:50,549:INFO:Total runtime is 0.2535605748494466 minutes
2022-07-31 09:10:50,557:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:50,557:INFO:Initializing create_model()
2022-07-31 09:10:50,557:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:50,557:INFO:Checking exceptions
2022-07-31 09:10:50,565:INFO:Importing libraries
2022-07-31 09:10:50,565:INFO:Copying training dataset
2022-07-31 09:10:50,695:INFO:Defining folds
2022-07-31 09:10:50,695:INFO:Declaring metric variables
2022-07-31 09:10:50,703:INFO:Importing untrained model
2022-07-31 09:10:50,724:INFO:Huber Regressor Imported successfully
2022-07-31 09:10:50,751:INFO:Starting cross validation
2022-07-31 09:10:50,754:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:52,345:INFO:Calculating mean and std
2022-07-31 09:10:52,345:INFO:Creating metrics dataframe
2022-07-31 09:10:52,385:INFO:Uploading results into container
2022-07-31 09:10:52,385:INFO:Uploading model into container now
2022-07-31 09:10:52,385:INFO:master_model_container: 11
2022-07-31 09:10:52,385:INFO:display_container: 3
2022-07-31 09:10:52,385:INFO:HuberRegressor()
2022-07-31 09:10:52,385:INFO:create_model() successfully completed......................................
2022-07-31 09:10:52,486:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:52,486:INFO:Creating metrics dataframe
2022-07-31 09:10:52,520:INFO:Initializing K Neighbors Regressor
2022-07-31 09:10:52,520:INFO:Total runtime is 0.2863986571629842 minutes
2022-07-31 09:10:52,528:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:52,528:INFO:Initializing create_model()
2022-07-31 09:10:52,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:52,528:INFO:Checking exceptions
2022-07-31 09:10:52,528:INFO:Importing libraries
2022-07-31 09:10:52,528:INFO:Copying training dataset
2022-07-31 09:10:52,808:INFO:Defining folds
2022-07-31 09:10:52,808:INFO:Declaring metric variables
2022-07-31 09:10:52,828:INFO:Importing untrained model
2022-07-31 09:10:52,851:INFO:K Neighbors Regressor Imported successfully
2022-07-31 09:10:52,883:INFO:Starting cross validation
2022-07-31 09:10:52,891:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:53,955:INFO:Calculating mean and std
2022-07-31 09:10:53,955:INFO:Creating metrics dataframe
2022-07-31 09:10:54,003:INFO:Uploading results into container
2022-07-31 09:10:54,003:INFO:Uploading model into container now
2022-07-31 09:10:54,003:INFO:master_model_container: 12
2022-07-31 09:10:54,003:INFO:display_container: 3
2022-07-31 09:10:54,003:INFO:KNeighborsRegressor(n_jobs=-1)
2022-07-31 09:10:54,003:INFO:create_model() successfully completed......................................
2022-07-31 09:10:54,103:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:54,103:INFO:Creating metrics dataframe
2022-07-31 09:10:54,144:INFO:Initializing Decision Tree Regressor
2022-07-31 09:10:54,144:INFO:Total runtime is 0.31346481243769325 minutes
2022-07-31 09:10:54,152:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:54,152:INFO:Initializing create_model()
2022-07-31 09:10:54,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:54,152:INFO:Checking exceptions
2022-07-31 09:10:54,160:INFO:Importing libraries
2022-07-31 09:10:54,160:INFO:Copying training dataset
2022-07-31 09:10:54,304:INFO:Defining folds
2022-07-31 09:10:54,304:INFO:Declaring metric variables
2022-07-31 09:10:54,312:INFO:Importing untrained model
2022-07-31 09:10:54,320:INFO:Decision Tree Regressor Imported successfully
2022-07-31 09:10:54,352:INFO:Starting cross validation
2022-07-31 09:10:54,352:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:55,194:INFO:Calculating mean and std
2022-07-31 09:10:55,194:INFO:Creating metrics dataframe
2022-07-31 09:10:55,235:INFO:Uploading results into container
2022-07-31 09:10:55,235:INFO:Uploading model into container now
2022-07-31 09:10:55,235:INFO:master_model_container: 13
2022-07-31 09:10:55,243:INFO:display_container: 3
2022-07-31 09:10:55,243:INFO:DecisionTreeRegressor(random_state=123)
2022-07-31 09:10:55,243:INFO:create_model() successfully completed......................................
2022-07-31 09:10:55,353:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:55,353:INFO:Creating metrics dataframe
2022-07-31 09:10:55,379:INFO:Initializing Random Forest Regressor
2022-07-31 09:10:55,379:INFO:Total runtime is 0.3340515851974487 minutes
2022-07-31 09:10:55,395:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:55,395:INFO:Initializing create_model()
2022-07-31 09:10:55,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:55,395:INFO:Checking exceptions
2022-07-31 09:10:55,395:INFO:Importing libraries
2022-07-31 09:10:55,395:INFO:Copying training dataset
2022-07-31 09:10:55,547:INFO:Defining folds
2022-07-31 09:10:55,547:INFO:Declaring metric variables
2022-07-31 09:10:55,554:INFO:Importing untrained model
2022-07-31 09:10:55,578:INFO:Random Forest Regressor Imported successfully
2022-07-31 09:10:55,628:INFO:Starting cross validation
2022-07-31 09:10:55,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:10:59,011:INFO:Calculating mean and std
2022-07-31 09:10:59,011:INFO:Creating metrics dataframe
2022-07-31 09:10:59,069:INFO:Uploading results into container
2022-07-31 09:10:59,069:INFO:Uploading model into container now
2022-07-31 09:10:59,069:INFO:master_model_container: 14
2022-07-31 09:10:59,069:INFO:display_container: 3
2022-07-31 09:10:59,069:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-07-31 09:10:59,069:INFO:create_model() successfully completed......................................
2022-07-31 09:10:59,169:INFO:SubProcess create_model() end ==================================
2022-07-31 09:10:59,169:INFO:Creating metrics dataframe
2022-07-31 09:10:59,210:INFO:Initializing Extra Trees Regressor
2022-07-31 09:10:59,210:INFO:Total runtime is 0.397901713848114 minutes
2022-07-31 09:10:59,226:INFO:SubProcess create_model() called ==================================
2022-07-31 09:10:59,226:INFO:Initializing create_model()
2022-07-31 09:10:59,226:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:10:59,226:INFO:Checking exceptions
2022-07-31 09:10:59,226:INFO:Importing libraries
2022-07-31 09:10:59,226:INFO:Copying training dataset
2022-07-31 09:10:59,370:INFO:Defining folds
2022-07-31 09:10:59,378:INFO:Declaring metric variables
2022-07-31 09:10:59,386:INFO:Importing untrained model
2022-07-31 09:10:59,402:INFO:Extra Trees Regressor Imported successfully
2022-07-31 09:10:59,426:INFO:Starting cross validation
2022-07-31 09:10:59,426:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:02,779:INFO:Calculating mean and std
2022-07-31 09:11:02,787:INFO:Creating metrics dataframe
2022-07-31 09:11:02,843:INFO:Uploading results into container
2022-07-31 09:11:02,843:INFO:Uploading model into container now
2022-07-31 09:11:02,843:INFO:master_model_container: 15
2022-07-31 09:11:02,843:INFO:display_container: 3
2022-07-31 09:11:02,843:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-07-31 09:11:02,843:INFO:create_model() successfully completed......................................
2022-07-31 09:11:02,986:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:02,986:INFO:Creating metrics dataframe
2022-07-31 09:11:03,036:INFO:Initializing AdaBoost Regressor
2022-07-31 09:11:03,036:INFO:Total runtime is 0.4616743286450704 minutes
2022-07-31 09:11:03,052:INFO:SubProcess create_model() called ==================================
2022-07-31 09:11:03,052:INFO:Initializing create_model()
2022-07-31 09:11:03,052:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:11:03,052:INFO:Checking exceptions
2022-07-31 09:11:03,052:INFO:Importing libraries
2022-07-31 09:11:03,052:INFO:Copying training dataset
2022-07-31 09:11:03,246:INFO:Defining folds
2022-07-31 09:11:03,246:INFO:Declaring metric variables
2022-07-31 09:11:03,254:INFO:Importing untrained model
2022-07-31 09:11:03,270:INFO:AdaBoost Regressor Imported successfully
2022-07-31 09:11:03,294:INFO:Starting cross validation
2022-07-31 09:11:03,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:04,467:INFO:Calculating mean and std
2022-07-31 09:11:04,467:INFO:Creating metrics dataframe
2022-07-31 09:11:04,499:INFO:Uploading results into container
2022-07-31 09:11:04,507:INFO:Uploading model into container now
2022-07-31 09:11:04,507:INFO:master_model_container: 16
2022-07-31 09:11:04,507:INFO:display_container: 3
2022-07-31 09:11:04,507:INFO:AdaBoostRegressor(random_state=123)
2022-07-31 09:11:04,507:INFO:create_model() successfully completed......................................
2022-07-31 09:11:04,612:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:04,612:INFO:Creating metrics dataframe
2022-07-31 09:11:04,644:INFO:Initializing Gradient Boosting Regressor
2022-07-31 09:11:04,644:INFO:Total runtime is 0.48847724199295045 minutes
2022-07-31 09:11:04,660:INFO:SubProcess create_model() called ==================================
2022-07-31 09:11:04,660:INFO:Initializing create_model()
2022-07-31 09:11:04,660:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:11:04,660:INFO:Checking exceptions
2022-07-31 09:11:04,660:INFO:Importing libraries
2022-07-31 09:11:04,660:INFO:Copying training dataset
2022-07-31 09:11:04,813:INFO:Defining folds
2022-07-31 09:11:04,813:INFO:Declaring metric variables
2022-07-31 09:11:04,821:INFO:Importing untrained model
2022-07-31 09:11:04,837:INFO:Gradient Boosting Regressor Imported successfully
2022-07-31 09:11:04,861:INFO:Starting cross validation
2022-07-31 09:11:04,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:06,559:INFO:Calculating mean and std
2022-07-31 09:11:06,562:INFO:Creating metrics dataframe
2022-07-31 09:11:06,594:INFO:Uploading results into container
2022-07-31 09:11:06,602:INFO:Uploading model into container now
2022-07-31 09:11:06,602:INFO:master_model_container: 17
2022-07-31 09:11:06,602:INFO:display_container: 3
2022-07-31 09:11:06,602:INFO:GradientBoostingRegressor(random_state=123)
2022-07-31 09:11:06,602:INFO:create_model() successfully completed......................................
2022-07-31 09:11:06,701:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:06,709:INFO:Creating metrics dataframe
2022-07-31 09:11:06,743:INFO:Initializing Extreme Gradient Boosting
2022-07-31 09:11:06,743:INFO:Total runtime is 0.5234488725662232 minutes
2022-07-31 09:11:06,752:INFO:SubProcess create_model() called ==================================
2022-07-31 09:11:06,752:INFO:Initializing create_model()
2022-07-31 09:11:06,752:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:11:06,752:INFO:Checking exceptions
2022-07-31 09:11:06,752:INFO:Importing libraries
2022-07-31 09:11:06,752:INFO:Copying training dataset
2022-07-31 09:11:06,896:INFO:Defining folds
2022-07-31 09:11:06,896:INFO:Declaring metric variables
2022-07-31 09:11:06,904:INFO:Importing untrained model
2022-07-31 09:11:06,920:INFO:Extreme Gradient Boosting Imported successfully
2022-07-31 09:11:06,944:INFO:Starting cross validation
2022-07-31 09:11:06,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:09,299:INFO:Calculating mean and std
2022-07-31 09:11:09,299:INFO:Creating metrics dataframe
2022-07-31 09:11:09,339:INFO:Uploading results into container
2022-07-31 09:11:09,339:INFO:Uploading model into container now
2022-07-31 09:11:09,339:INFO:master_model_container: 18
2022-07-31 09:11:09,339:INFO:display_container: 3
2022-07-31 09:11:09,339:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-07-31 09:11:09,339:INFO:create_model() successfully completed......................................
2022-07-31 09:11:09,435:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:09,435:INFO:Creating metrics dataframe
2022-07-31 09:11:09,475:INFO:Initializing Light Gradient Boosting Machine
2022-07-31 09:11:09,475:INFO:Total runtime is 0.5689867456754049 minutes
2022-07-31 09:11:09,491:INFO:SubProcess create_model() called ==================================
2022-07-31 09:11:09,491:INFO:Initializing create_model()
2022-07-31 09:11:09,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:11:09,491:INFO:Checking exceptions
2022-07-31 09:11:09,491:INFO:Importing libraries
2022-07-31 09:11:09,491:INFO:Copying training dataset
2022-07-31 09:11:09,643:INFO:Defining folds
2022-07-31 09:11:09,646:INFO:Declaring metric variables
2022-07-31 09:11:09,654:INFO:Importing untrained model
2022-07-31 09:11:09,667:INFO:Light Gradient Boosting Machine Imported successfully
2022-07-31 09:11:09,692:INFO:Starting cross validation
2022-07-31 09:11:09,692:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:13,021:INFO:Calculating mean and std
2022-07-31 09:11:13,021:INFO:Creating metrics dataframe
2022-07-31 09:11:13,077:INFO:Uploading results into container
2022-07-31 09:11:13,077:INFO:Uploading model into container now
2022-07-31 09:11:13,077:INFO:master_model_container: 19
2022-07-31 09:11:13,077:INFO:display_container: 3
2022-07-31 09:11:13,077:INFO:LGBMRegressor(random_state=123)
2022-07-31 09:11:13,077:INFO:create_model() successfully completed......................................
2022-07-31 09:11:13,181:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:13,181:INFO:Creating metrics dataframe
2022-07-31 09:11:13,221:INFO:Initializing Dummy Regressor
2022-07-31 09:11:13,221:INFO:Total runtime is 0.6314224402109782 minutes
2022-07-31 09:11:13,237:INFO:SubProcess create_model() called ==================================
2022-07-31 09:11:13,237:INFO:Initializing create_model()
2022-07-31 09:11:13,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000024F84FDFA90>, kwargs={})
2022-07-31 09:11:13,237:INFO:Checking exceptions
2022-07-31 09:11:13,237:INFO:Importing libraries
2022-07-31 09:11:13,237:INFO:Copying training dataset
2022-07-31 09:11:13,417:INFO:Defining folds
2022-07-31 09:11:13,417:INFO:Declaring metric variables
2022-07-31 09:11:13,427:INFO:Importing untrained model
2022-07-31 09:11:13,443:INFO:Dummy Regressor Imported successfully
2022-07-31 09:11:13,467:INFO:Starting cross validation
2022-07-31 09:11:13,475:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-07-31 09:11:14,243:INFO:Calculating mean and std
2022-07-31 09:11:14,243:INFO:Creating metrics dataframe
2022-07-31 09:11:14,291:INFO:Uploading results into container
2022-07-31 09:11:14,291:INFO:Uploading model into container now
2022-07-31 09:11:14,291:INFO:master_model_container: 20
2022-07-31 09:11:14,291:INFO:display_container: 3
2022-07-31 09:11:14,292:INFO:DummyRegressor()
2022-07-31 09:11:14,292:INFO:create_model() successfully completed......................................
2022-07-31 09:11:14,398:INFO:SubProcess create_model() end ==================================
2022-07-31 09:11:14,398:INFO:Creating metrics dataframe
2022-07-31 09:11:14,454:INFO:Initializing create_model()
2022-07-31 09:11:14,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-07-31 09:11:14,462:INFO:Checking exceptions
2022-07-31 09:11:14,462:INFO:Importing libraries
2022-07-31 09:11:14,462:INFO:Copying training dataset
2022-07-31 09:11:14,601:INFO:Defining folds
2022-07-31 09:11:14,601:INFO:Declaring metric variables
2022-07-31 09:11:14,601:INFO:Importing untrained model
2022-07-31 09:11:14,601:INFO:Declaring custom model
2022-07-31 09:11:14,601:INFO:Gradient Boosting Regressor Imported successfully
2022-07-31 09:11:14,601:INFO:Cross validation set to False
2022-07-31 09:11:14,601:INFO:Fitting Model
2022-07-31 09:11:15,001:INFO:GradientBoostingRegressor(random_state=123)
2022-07-31 09:11:15,001:INFO:create_models() successfully completed......................................
2022-07-31 09:11:15,135:INFO:master_model_container: 20
2022-07-31 09:11:15,135:INFO:display_container: 3
2022-07-31 09:11:15,135:INFO:GradientBoostingRegressor(random_state=123)
2022-07-31 09:11:15,135:INFO:compare_models() successfully completed......................................
2022-07-31 09:11:15,286:INFO:Initializing plot_model()
2022-07-31 09:11:15,286:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, system=True)
2022-07-31 09:11:15,286:INFO:Checking exceptions
2022-07-31 09:11:15,286:INFO:Preparing display monitor
2022-07-31 09:11:15,302:INFO:Preloading libraries
2022-07-31 09:11:15,318:INFO:Copying training dataset
2022-07-31 09:11:15,318:INFO:Plot type: feature
2022-07-31 09:11:15,318:WARNING:No coef_ found. Trying feature_importances_
2022-07-31 09:11:15,809:INFO:Visual Rendered Successfully
2022-07-31 09:11:15,917:INFO:plot_model() successfully completed......................................
2022-07-31 09:11:25,864:INFO:Initializing plot_model()
2022-07-31 09:11:25,866:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000024F84ED5550>, system=True)
2022-07-31 09:11:25,867:INFO:Checking exceptions
2022-07-31 09:11:25,870:INFO:Preparing display monitor
2022-07-31 09:11:25,881:INFO:Preloading libraries
2022-07-31 09:11:25,884:INFO:Copying training dataset
2022-07-31 09:11:25,884:INFO:Plot type: residuals
2022-07-31 09:11:26,564:INFO:Fitting Model
2022-07-31 09:11:26,692:INFO:Scoring test/hold-out set
2022-07-31 09:11:27,666:INFO:Visual Rendered Successfully
2022-07-31 09:11:27,802:INFO:plot_model() successfully completed......................................
2022-07-31 09:11:27,890:INFO:Initializing save_model()
2022-07-31 09:11:27,891:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-07-31 09:11:27,891:INFO:Adding model into prep_pipe
2022-07-31 09:11:27,902:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-07-31 09:11:27,930:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-07-31 09:11:27,930:INFO:save_model() successfully completed......................................
2022-08-01 15:20:37,931:INFO:Initializing load_model()
2022-08-01 15:20:37,931:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:15,489:INFO:Initializing load_model()
2022-08-01 15:21:15,489:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:19,287:INFO:Initializing load_model()
2022-08-01 15:21:19,295:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:22,374:INFO:Initializing load_model()
2022-08-01 15:21:22,374:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:22,638:INFO:Initializing load_model()
2022-08-01 15:21:22,638:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:22,853:INFO:Initializing load_model()
2022-08-01 15:21:22,853:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:23,034:INFO:Initializing load_model()
2022-08-01 15:21:23,034:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:23,250:INFO:Initializing load_model()
2022-08-01 15:21:23,250:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:23,474:INFO:Initializing load_model()
2022-08-01 15:21:23,474:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:23,695:INFO:Initializing load_model()
2022-08-01 15:21:23,695:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:33,654:INFO:Initializing load_model()
2022-08-01 15:21:33,654:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:37,859:INFO:Initializing load_model()
2022-08-01 15:21:37,867:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:39,008:INFO:Initializing load_model()
2022-08-01 15:21:39,008:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:43,169:INFO:Initializing load_model()
2022-08-01 15:21:43,170:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:45,795:INFO:Initializing load_model()
2022-08-01 15:21:45,795:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:21:45,968:INFO:Initializing predict_model()
2022-08-01 15:21:45,968:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000022517439E50>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002251744B040>)
2022-08-01 15:21:45,968:INFO:Checking exceptions
2022-08-01 15:21:45,976:INFO:Preloading libraries
2022-08-01 15:23:13,810:INFO:Initializing load_model()
2022-08-01 15:23:13,810:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:23:13,978:INFO:Initializing predict_model()
2022-08-01 15:23:13,978:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002251746AEE0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002251727D8E0>)
2022-08-01 15:23:13,978:INFO:Checking exceptions
2022-08-01 15:23:13,986:INFO:Preloading libraries
2022-08-01 15:24:48,833:INFO:Preparing display monitor
2022-08-01 15:24:51,226:INFO:PyCaret RegressionExperiment
2022-08-01 15:24:51,226:INFO:Logging name: reg-default-name
2022-08-01 15:24:51,226:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-01 15:24:51,226:INFO:version 3.0.0
2022-08-01 15:24:51,226:INFO:Initializing setup()
2022-08-01 15:24:51,226:INFO:self.USI: d477
2022-08-01 15:24:51,226:INFO:self.variable_keys: {'display_container', 'experiment__', 'X', 'fold_groups_param_full', '_available_plots', 'target_param', 'transform_target_method_param', 'transform_target_param', 'n_jobs_param', 'memory', 'imputation_classifier', '_gpu_n_jobs_param', '_all_models', 'fold_shuffle_param', 'exp_id', 'logging_param', 'html_param', 'exp_name_log', 'fold_generator', 'iterative_imputation_iters_param', 'stratify_param', 'pipeline', 'imputation_regressor', 'fold_groups_param', '_all_metrics', 'X_train', 'variable_keys', 'log_plots_param', 'master_model_container', 'idx', 'X_test', 'fold_param', 'y_train', '_ml_usecase', 'y', 'USI', 'gpu_param', 'y_test', '_all_models_internal', 'seed', 'data'}
2022-08-01 15:24:51,226:INFO:Checking environment
2022-08-01 15:24:51,226:INFO:python_version: 3.9.12
2022-08-01 15:24:51,226:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-01 15:24:51,226:INFO:machine: AMD64
2022-08-01 15:24:51,226:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-01 15:24:51,226:INFO:Memory: svmem(total=8419573760, available=1089024000, percent=87.1, used=7330549760, free=1089024000)
2022-08-01 15:24:51,226:INFO:Physical Core: 4
2022-08-01 15:24:51,226:INFO:Logical Core: 8
2022-08-01 15:24:51,226:INFO:Checking libraries
2022-08-01 15:24:51,226:INFO:pd==1.4.2
2022-08-01 15:24:51,226:INFO:numpy==1.21.5
2022-08-01 15:24:51,226:INFO:sklearn==1.0.2
2022-08-01 15:24:51,507:INFO:lightgbm==3.3.2
2022-08-01 15:24:51,585:INFO:xgboost==1.6.1
2022-08-01 15:24:51,585:WARNING:catboost not found
2022-08-01 15:24:51,585:WARNING:mlflow not found
2022-08-01 15:24:51,585:INFO:Set up data.
2022-08-01 15:24:51,601:INFO:Set up target column.
2022-08-01 15:24:51,601:INFO:Set up train/test split.
2022-08-01 15:24:51,617:INFO:Set up folding strategy.
2022-08-01 15:24:51,617:INFO:Assigning column types.
2022-08-01 15:24:51,617:INFO:Preparing preprocessing pipeline...
2022-08-01 15:24:51,617:INFO:Set up simple imputation.
2022-08-01 15:24:51,617:INFO:Set up encoding of ordinal features.
2022-08-01 15:24:51,632:INFO:Set up encoding of categorical features.
2022-08-01 15:24:51,632:INFO:Set up polynomial features.
2022-08-01 15:24:51,632:INFO:Set up binning of numerical features.
2022-08-01 15:24:51,632:INFO:Set up feature normalization.
2022-08-01 15:24:51,757:INFO:Finished creating preprocessing pipeline.
2022-08-01 15:24:51,773:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))])
2022-08-01 15:24:51,773:INFO:Creating final display dataframe.
2022-08-01 15:24:51,773:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15       Polynomial features              True
16         Polynomial degree                 2
17                 Normalize              True
18          Normalize method            zscore
19            Fold Generator             KFold
20               Fold Number                10
21                  CPU Jobs                -1
22            Log Experiment             False
23           Experiment Name  reg-default-name
24                       USI              d477
2022-08-01 15:24:51,773:INFO:Preparing display monitor
2022-08-01 15:24:52,030:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 15:24:52,407:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 15:24:52,415:INFO:setup() successfully completed in 1.23s...............
2022-08-01 15:24:52,702:INFO:Initializing create_model()
2022-08-01 15:24:52,702:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-01 15:24:52,702:INFO:Checking exceptions
2022-08-01 15:24:52,710:INFO:Preparing display monitor
2022-08-01 15:24:52,734:INFO:Importing libraries
2022-08-01 15:24:52,734:INFO:Copying training dataset
2022-08-01 15:24:53,054:INFO:Defining folds
2022-08-01 15:24:53,054:INFO:Declaring metric variables
2022-08-01 15:24:53,079:INFO:Importing untrained model
2022-08-01 15:24:53,095:INFO:Linear Regression Imported successfully
2022-08-01 15:24:53,135:INFO:Starting cross validation
2022-08-01 15:24:53,159:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:06,596:INFO:Calculating mean and std
2022-08-01 15:25:06,596:INFO:Creating metrics dataframe
2022-08-01 15:25:07,179:INFO:Finalizing model
2022-08-01 15:25:07,323:INFO:Uploading results into container
2022-08-01 15:25:07,323:INFO:Uploading model into container now
2022-08-01 15:25:07,339:INFO:master_model_container: 1
2022-08-01 15:25:07,339:INFO:display_container: 2
2022-08-01 15:25:07,339:INFO:LinearRegression(n_jobs=-1)
2022-08-01 15:25:07,339:INFO:create_model() successfully completed......................................
2022-08-01 15:25:07,779:INFO:Initializing compare_models()
2022-08-01 15:25:07,779:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-08-01 15:25:07,779:INFO:Checking exceptions
2022-08-01 15:25:07,787:INFO:Preparing display monitor
2022-08-01 15:25:07,787:INFO:Preparing display monitor
2022-08-01 15:25:07,843:INFO:Initializing Linear Regression
2022-08-01 15:25:07,843:INFO:Total runtime is 0.0 minutes
2022-08-01 15:25:07,859:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:07,867:INFO:Initializing create_model()
2022-08-01 15:25:07,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:07,867:INFO:Checking exceptions
2022-08-01 15:25:07,867:INFO:Importing libraries
2022-08-01 15:25:07,867:INFO:Copying training dataset
2022-08-01 15:25:08,100:INFO:Defining folds
2022-08-01 15:25:08,100:INFO:Declaring metric variables
2022-08-01 15:25:08,108:INFO:Importing untrained model
2022-08-01 15:25:08,124:INFO:Linear Regression Imported successfully
2022-08-01 15:25:08,156:INFO:Starting cross validation
2022-08-01 15:25:08,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:09,015:INFO:Calculating mean and std
2022-08-01 15:25:09,015:INFO:Creating metrics dataframe
2022-08-01 15:25:09,098:INFO:Uploading results into container
2022-08-01 15:25:09,098:INFO:Uploading model into container now
2022-08-01 15:25:09,098:INFO:master_model_container: 2
2022-08-01 15:25:09,098:INFO:display_container: 3
2022-08-01 15:25:09,098:INFO:LinearRegression(n_jobs=-1)
2022-08-01 15:25:09,098:INFO:create_model() successfully completed......................................
2022-08-01 15:25:09,242:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:09,242:INFO:Creating metrics dataframe
2022-08-01 15:25:09,290:INFO:Initializing Lasso Regression
2022-08-01 15:25:09,290:INFO:Total runtime is 0.024109435081481934 minutes
2022-08-01 15:25:09,306:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:09,314:INFO:Initializing create_model()
2022-08-01 15:25:09,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:09,314:INFO:Checking exceptions
2022-08-01 15:25:09,314:INFO:Importing libraries
2022-08-01 15:25:09,314:INFO:Copying training dataset
2022-08-01 15:25:09,482:INFO:Defining folds
2022-08-01 15:25:09,482:INFO:Declaring metric variables
2022-08-01 15:25:09,490:INFO:Importing untrained model
2022-08-01 15:25:09,498:INFO:Lasso Regression Imported successfully
2022-08-01 15:25:09,530:INFO:Starting cross validation
2022-08-01 15:25:09,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:10,682:INFO:Calculating mean and std
2022-08-01 15:25:10,690:INFO:Creating metrics dataframe
2022-08-01 15:25:10,746:INFO:Uploading results into container
2022-08-01 15:25:10,746:INFO:Uploading model into container now
2022-08-01 15:25:10,746:INFO:master_model_container: 3
2022-08-01 15:25:10,746:INFO:display_container: 3
2022-08-01 15:25:10,746:INFO:Lasso(random_state=123)
2022-08-01 15:25:10,746:INFO:create_model() successfully completed......................................
2022-08-01 15:25:10,863:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:10,863:INFO:Creating metrics dataframe
2022-08-01 15:25:10,896:INFO:Initializing Ridge Regression
2022-08-01 15:25:10,896:INFO:Total runtime is 0.050885109106699626 minutes
2022-08-01 15:25:10,912:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:10,912:INFO:Initializing create_model()
2022-08-01 15:25:10,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:10,912:INFO:Checking exceptions
2022-08-01 15:25:10,912:INFO:Importing libraries
2022-08-01 15:25:10,920:INFO:Copying training dataset
2022-08-01 15:25:11,081:INFO:Defining folds
2022-08-01 15:25:11,081:INFO:Declaring metric variables
2022-08-01 15:25:11,089:INFO:Importing untrained model
2022-08-01 15:25:11,097:INFO:Ridge Regression Imported successfully
2022-08-01 15:25:11,129:INFO:Starting cross validation
2022-08-01 15:25:11,129:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:12,039:INFO:Calculating mean and std
2022-08-01 15:25:12,043:INFO:Creating metrics dataframe
2022-08-01 15:25:12,126:INFO:Uploading results into container
2022-08-01 15:25:12,126:INFO:Uploading model into container now
2022-08-01 15:25:12,126:INFO:master_model_container: 4
2022-08-01 15:25:12,126:INFO:display_container: 3
2022-08-01 15:25:12,126:INFO:Ridge(random_state=123)
2022-08-01 15:25:12,126:INFO:create_model() successfully completed......................................
2022-08-01 15:25:12,263:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:12,263:INFO:Creating metrics dataframe
2022-08-01 15:25:12,289:INFO:Initializing Elastic Net
2022-08-01 15:25:12,289:INFO:Total runtime is 0.0740984280904134 minutes
2022-08-01 15:25:12,305:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:12,305:INFO:Initializing create_model()
2022-08-01 15:25:12,305:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:12,305:INFO:Checking exceptions
2022-08-01 15:25:12,305:INFO:Importing libraries
2022-08-01 15:25:12,305:INFO:Copying training dataset
2022-08-01 15:25:12,457:INFO:Defining folds
2022-08-01 15:25:12,457:INFO:Declaring metric variables
2022-08-01 15:25:12,465:INFO:Importing untrained model
2022-08-01 15:25:12,479:INFO:Elastic Net Imported successfully
2022-08-01 15:25:12,512:INFO:Starting cross validation
2022-08-01 15:25:12,512:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:13,381:INFO:Calculating mean and std
2022-08-01 15:25:13,381:INFO:Creating metrics dataframe
2022-08-01 15:25:13,421:INFO:Uploading results into container
2022-08-01 15:25:13,421:INFO:Uploading model into container now
2022-08-01 15:25:13,421:INFO:master_model_container: 5
2022-08-01 15:25:13,421:INFO:display_container: 3
2022-08-01 15:25:13,421:INFO:ElasticNet(random_state=123)
2022-08-01 15:25:13,421:INFO:create_model() successfully completed......................................
2022-08-01 15:25:13,529:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:13,529:INFO:Creating metrics dataframe
2022-08-01 15:25:13,563:INFO:Initializing Least Angle Regression
2022-08-01 15:25:13,563:INFO:Total runtime is 0.0953345497449239 minutes
2022-08-01 15:25:13,571:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:13,579:INFO:Initializing create_model()
2022-08-01 15:25:13,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:13,579:INFO:Checking exceptions
2022-08-01 15:25:13,579:INFO:Importing libraries
2022-08-01 15:25:13,579:INFO:Copying training dataset
2022-08-01 15:25:13,739:INFO:Defining folds
2022-08-01 15:25:13,739:INFO:Declaring metric variables
2022-08-01 15:25:13,747:INFO:Importing untrained model
2022-08-01 15:25:13,763:INFO:Least Angle Regression Imported successfully
2022-08-01 15:25:13,795:INFO:Starting cross validation
2022-08-01 15:25:13,795:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:14,815:INFO:Calculating mean and std
2022-08-01 15:25:14,815:INFO:Creating metrics dataframe
2022-08-01 15:25:14,913:INFO:Uploading results into container
2022-08-01 15:25:14,913:INFO:Uploading model into container now
2022-08-01 15:25:14,913:INFO:master_model_container: 6
2022-08-01 15:25:14,913:INFO:display_container: 3
2022-08-01 15:25:14,914:INFO:Lars(random_state=123)
2022-08-01 15:25:14,914:INFO:create_model() successfully completed......................................
2022-08-01 15:25:15,088:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:15,088:INFO:Creating metrics dataframe
2022-08-01 15:25:15,128:INFO:Initializing Lasso Least Angle Regression
2022-08-01 15:25:15,128:INFO:Total runtime is 0.12141376336415607 minutes
2022-08-01 15:25:15,136:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:15,136:INFO:Initializing create_model()
2022-08-01 15:25:15,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:15,144:INFO:Checking exceptions
2022-08-01 15:25:15,144:INFO:Importing libraries
2022-08-01 15:25:15,144:INFO:Copying training dataset
2022-08-01 15:25:15,305:INFO:Defining folds
2022-08-01 15:25:15,305:INFO:Declaring metric variables
2022-08-01 15:25:15,321:INFO:Importing untrained model
2022-08-01 15:25:15,329:INFO:Lasso Least Angle Regression Imported successfully
2022-08-01 15:25:15,368:INFO:Starting cross validation
2022-08-01 15:25:15,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:16,320:INFO:Calculating mean and std
2022-08-01 15:25:16,320:INFO:Creating metrics dataframe
2022-08-01 15:25:16,416:INFO:Uploading results into container
2022-08-01 15:25:16,416:INFO:Uploading model into container now
2022-08-01 15:25:16,416:INFO:master_model_container: 7
2022-08-01 15:25:16,416:INFO:display_container: 3
2022-08-01 15:25:16,416:INFO:LassoLars(random_state=123)
2022-08-01 15:25:16,424:INFO:create_model() successfully completed......................................
2022-08-01 15:25:16,617:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:16,617:INFO:Creating metrics dataframe
2022-08-01 15:25:16,673:INFO:Initializing Orthogonal Matching Pursuit
2022-08-01 15:25:16,673:INFO:Total runtime is 0.1471656878789266 minutes
2022-08-01 15:25:16,681:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:16,689:INFO:Initializing create_model()
2022-08-01 15:25:16,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:16,689:INFO:Checking exceptions
2022-08-01 15:25:16,689:INFO:Importing libraries
2022-08-01 15:25:16,689:INFO:Copying training dataset
2022-08-01 15:25:16,839:INFO:Defining folds
2022-08-01 15:25:16,839:INFO:Declaring metric variables
2022-08-01 15:25:16,847:INFO:Importing untrained model
2022-08-01 15:25:16,863:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-01 15:25:16,887:INFO:Starting cross validation
2022-08-01 15:25:16,887:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:17,663:INFO:Calculating mean and std
2022-08-01 15:25:17,665:INFO:Creating metrics dataframe
2022-08-01 15:25:17,715:INFO:Uploading results into container
2022-08-01 15:25:17,715:INFO:Uploading model into container now
2022-08-01 15:25:17,715:INFO:master_model_container: 8
2022-08-01 15:25:17,715:INFO:display_container: 3
2022-08-01 15:25:17,715:INFO:OrthogonalMatchingPursuit()
2022-08-01 15:25:17,715:INFO:create_model() successfully completed......................................
2022-08-01 15:25:17,931:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:17,931:INFO:Creating metrics dataframe
2022-08-01 15:25:18,004:INFO:Initializing Bayesian Ridge
2022-08-01 15:25:18,004:INFO:Total runtime is 0.16934996048609416 minutes
2022-08-01 15:25:18,020:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:18,020:INFO:Initializing create_model()
2022-08-01 15:25:18,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:18,020:INFO:Checking exceptions
2022-08-01 15:25:18,028:INFO:Importing libraries
2022-08-01 15:25:18,028:INFO:Copying training dataset
2022-08-01 15:25:18,171:INFO:Defining folds
2022-08-01 15:25:18,171:INFO:Declaring metric variables
2022-08-01 15:25:18,179:INFO:Importing untrained model
2022-08-01 15:25:18,187:INFO:Bayesian Ridge Imported successfully
2022-08-01 15:25:18,211:INFO:Starting cross validation
2022-08-01 15:25:18,219:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:19,110:INFO:Calculating mean and std
2022-08-01 15:25:19,118:INFO:Creating metrics dataframe
2022-08-01 15:25:19,166:INFO:Uploading results into container
2022-08-01 15:25:19,166:INFO:Uploading model into container now
2022-08-01 15:25:19,166:INFO:master_model_container: 9
2022-08-01 15:25:19,166:INFO:display_container: 3
2022-08-01 15:25:19,166:INFO:BayesianRidge()
2022-08-01 15:25:19,166:INFO:create_model() successfully completed......................................
2022-08-01 15:25:19,338:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:19,338:INFO:Creating metrics dataframe
2022-08-01 15:25:19,402:INFO:Initializing Passive Aggressive Regressor
2022-08-01 15:25:19,402:INFO:Total runtime is 0.19264995654424033 minutes
2022-08-01 15:25:19,418:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:19,418:INFO:Initializing create_model()
2022-08-01 15:25:19,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:19,418:INFO:Checking exceptions
2022-08-01 15:25:19,426:INFO:Importing libraries
2022-08-01 15:25:19,426:INFO:Copying training dataset
2022-08-01 15:25:19,692:INFO:Defining folds
2022-08-01 15:25:19,692:INFO:Declaring metric variables
2022-08-01 15:25:19,716:INFO:Importing untrained model
2022-08-01 15:25:19,740:INFO:Passive Aggressive Regressor Imported successfully
2022-08-01 15:25:19,796:INFO:Starting cross validation
2022-08-01 15:25:19,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:21,269:INFO:Calculating mean and std
2022-08-01 15:25:21,269:INFO:Creating metrics dataframe
2022-08-01 15:25:21,349:INFO:Uploading results into container
2022-08-01 15:25:21,349:INFO:Uploading model into container now
2022-08-01 15:25:21,349:INFO:master_model_container: 10
2022-08-01 15:25:21,349:INFO:display_container: 3
2022-08-01 15:25:21,349:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-01 15:25:21,349:INFO:create_model() successfully completed......................................
2022-08-01 15:25:21,541:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:21,541:INFO:Creating metrics dataframe
2022-08-01 15:25:21,581:INFO:Initializing Huber Regressor
2022-08-01 15:25:21,589:INFO:Total runtime is 0.22909906705220542 minutes
2022-08-01 15:25:21,597:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:21,597:INFO:Initializing create_model()
2022-08-01 15:25:21,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:21,597:INFO:Checking exceptions
2022-08-01 15:25:21,605:INFO:Importing libraries
2022-08-01 15:25:21,605:INFO:Copying training dataset
2022-08-01 15:25:21,728:INFO:Defining folds
2022-08-01 15:25:21,728:INFO:Declaring metric variables
2022-08-01 15:25:21,738:INFO:Importing untrained model
2022-08-01 15:25:21,746:INFO:Huber Regressor Imported successfully
2022-08-01 15:25:21,770:INFO:Starting cross validation
2022-08-01 15:25:21,778:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:23,066:INFO:Calculating mean and std
2022-08-01 15:25:23,074:INFO:Creating metrics dataframe
2022-08-01 15:25:23,146:INFO:Uploading results into container
2022-08-01 15:25:23,146:INFO:Uploading model into container now
2022-08-01 15:25:23,146:INFO:master_model_container: 11
2022-08-01 15:25:23,146:INFO:display_container: 3
2022-08-01 15:25:23,146:INFO:HuberRegressor()
2022-08-01 15:25:23,146:INFO:create_model() successfully completed......................................
2022-08-01 15:25:23,354:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:23,354:INFO:Creating metrics dataframe
2022-08-01 15:25:23,410:INFO:Initializing K Neighbors Regressor
2022-08-01 15:25:23,410:INFO:Total runtime is 0.25945773522059123 minutes
2022-08-01 15:25:23,418:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:23,426:INFO:Initializing create_model()
2022-08-01 15:25:23,426:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:23,426:INFO:Checking exceptions
2022-08-01 15:25:23,426:INFO:Importing libraries
2022-08-01 15:25:23,426:INFO:Copying training dataset
2022-08-01 15:25:23,667:INFO:Defining folds
2022-08-01 15:25:23,667:INFO:Declaring metric variables
2022-08-01 15:25:23,682:INFO:Importing untrained model
2022-08-01 15:25:23,698:INFO:K Neighbors Regressor Imported successfully
2022-08-01 15:25:23,734:INFO:Starting cross validation
2022-08-01 15:25:23,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:24,654:INFO:Calculating mean and std
2022-08-01 15:25:24,654:INFO:Creating metrics dataframe
2022-08-01 15:25:24,694:INFO:Uploading results into container
2022-08-01 15:25:24,694:INFO:Uploading model into container now
2022-08-01 15:25:24,694:INFO:master_model_container: 12
2022-08-01 15:25:24,694:INFO:display_container: 3
2022-08-01 15:25:24,694:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-01 15:25:24,694:INFO:create_model() successfully completed......................................
2022-08-01 15:25:24,809:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:24,809:INFO:Creating metrics dataframe
2022-08-01 15:25:24,838:INFO:Initializing Decision Tree Regressor
2022-08-01 15:25:24,838:INFO:Total runtime is 0.28324560324350995 minutes
2022-08-01 15:25:24,846:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:24,846:INFO:Initializing create_model()
2022-08-01 15:25:24,846:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:24,854:INFO:Checking exceptions
2022-08-01 15:25:24,854:INFO:Importing libraries
2022-08-01 15:25:24,854:INFO:Copying training dataset
2022-08-01 15:25:25,030:INFO:Defining folds
2022-08-01 15:25:25,030:INFO:Declaring metric variables
2022-08-01 15:25:25,046:INFO:Importing untrained model
2022-08-01 15:25:25,062:INFO:Decision Tree Regressor Imported successfully
2022-08-01 15:25:25,110:INFO:Starting cross validation
2022-08-01 15:25:25,110:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:25,995:INFO:Calculating mean and std
2022-08-01 15:25:25,995:INFO:Creating metrics dataframe
2022-08-01 15:25:26,028:INFO:Uploading results into container
2022-08-01 15:25:26,036:INFO:Uploading model into container now
2022-08-01 15:25:26,036:INFO:master_model_container: 13
2022-08-01 15:25:26,036:INFO:display_container: 3
2022-08-01 15:25:26,036:INFO:DecisionTreeRegressor(random_state=123)
2022-08-01 15:25:26,036:INFO:create_model() successfully completed......................................
2022-08-01 15:25:26,137:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:26,137:INFO:Creating metrics dataframe
2022-08-01 15:25:26,170:INFO:Initializing Random Forest Regressor
2022-08-01 15:25:26,170:INFO:Total runtime is 0.3054483731587728 minutes
2022-08-01 15:25:26,178:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:26,186:INFO:Initializing create_model()
2022-08-01 15:25:26,186:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:26,186:INFO:Checking exceptions
2022-08-01 15:25:26,191:INFO:Importing libraries
2022-08-01 15:25:26,192:INFO:Copying training dataset
2022-08-01 15:25:26,338:INFO:Defining folds
2022-08-01 15:25:26,338:INFO:Declaring metric variables
2022-08-01 15:25:26,350:INFO:Importing untrained model
2022-08-01 15:25:26,358:INFO:Random Forest Regressor Imported successfully
2022-08-01 15:25:26,391:INFO:Starting cross validation
2022-08-01 15:25:26,391:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:30,088:INFO:Calculating mean and std
2022-08-01 15:25:30,088:INFO:Creating metrics dataframe
2022-08-01 15:25:30,155:INFO:Uploading results into container
2022-08-01 15:25:30,155:INFO:Uploading model into container now
2022-08-01 15:25:30,155:INFO:master_model_container: 14
2022-08-01 15:25:30,155:INFO:display_container: 3
2022-08-01 15:25:30,155:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-01 15:25:30,155:INFO:create_model() successfully completed......................................
2022-08-01 15:25:30,319:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:30,319:INFO:Creating metrics dataframe
2022-08-01 15:25:30,355:INFO:Initializing Extra Trees Regressor
2022-08-01 15:25:30,355:INFO:Total runtime is 0.37519201040267947 minutes
2022-08-01 15:25:30,363:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:30,363:INFO:Initializing create_model()
2022-08-01 15:25:30,363:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:30,371:INFO:Checking exceptions
2022-08-01 15:25:30,371:INFO:Importing libraries
2022-08-01 15:25:30,371:INFO:Copying training dataset
2022-08-01 15:25:30,527:INFO:Defining folds
2022-08-01 15:25:30,535:INFO:Declaring metric variables
2022-08-01 15:25:30,543:INFO:Importing untrained model
2022-08-01 15:25:30,567:INFO:Extra Trees Regressor Imported successfully
2022-08-01 15:25:30,607:INFO:Starting cross validation
2022-08-01 15:25:30,615:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:33,744:INFO:Calculating mean and std
2022-08-01 15:25:33,744:INFO:Creating metrics dataframe
2022-08-01 15:25:33,793:INFO:Uploading results into container
2022-08-01 15:25:33,793:INFO:Uploading model into container now
2022-08-01 15:25:33,793:INFO:master_model_container: 15
2022-08-01 15:25:33,793:INFO:display_container: 3
2022-08-01 15:25:33,793:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-01 15:25:33,793:INFO:create_model() successfully completed......................................
2022-08-01 15:25:33,912:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:33,912:INFO:Creating metrics dataframe
2022-08-01 15:25:33,960:INFO:Initializing AdaBoost Regressor
2022-08-01 15:25:33,960:INFO:Total runtime is 0.4352793057759603 minutes
2022-08-01 15:25:33,976:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:33,976:INFO:Initializing create_model()
2022-08-01 15:25:33,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:33,976:INFO:Checking exceptions
2022-08-01 15:25:33,984:INFO:Importing libraries
2022-08-01 15:25:33,984:INFO:Copying training dataset
2022-08-01 15:25:34,240:INFO:Defining folds
2022-08-01 15:25:34,240:INFO:Declaring metric variables
2022-08-01 15:25:34,256:INFO:Importing untrained model
2022-08-01 15:25:34,272:INFO:AdaBoost Regressor Imported successfully
2022-08-01 15:25:34,296:INFO:Starting cross validation
2022-08-01 15:25:34,296:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:35,621:INFO:Calculating mean and std
2022-08-01 15:25:35,621:INFO:Creating metrics dataframe
2022-08-01 15:25:35,661:INFO:Uploading results into container
2022-08-01 15:25:35,661:INFO:Uploading model into container now
2022-08-01 15:25:35,661:INFO:master_model_container: 16
2022-08-01 15:25:35,661:INFO:display_container: 3
2022-08-01 15:25:35,661:INFO:AdaBoostRegressor(random_state=123)
2022-08-01 15:25:35,661:INFO:create_model() successfully completed......................................
2022-08-01 15:25:35,761:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:35,761:INFO:Creating metrics dataframe
2022-08-01 15:25:35,795:INFO:Initializing Gradient Boosting Regressor
2022-08-01 15:25:35,795:INFO:Total runtime is 0.46586591800053917 minutes
2022-08-01 15:25:35,803:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:35,803:INFO:Initializing create_model()
2022-08-01 15:25:35,803:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:35,803:INFO:Checking exceptions
2022-08-01 15:25:35,811:INFO:Importing libraries
2022-08-01 15:25:35,811:INFO:Copying training dataset
2022-08-01 15:25:35,994:INFO:Defining folds
2022-08-01 15:25:35,994:INFO:Declaring metric variables
2022-08-01 15:25:36,010:INFO:Importing untrained model
2022-08-01 15:25:36,027:INFO:Gradient Boosting Regressor Imported successfully
2022-08-01 15:25:36,065:INFO:Starting cross validation
2022-08-01 15:25:36,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:38,020:INFO:Calculating mean and std
2022-08-01 15:25:38,020:INFO:Creating metrics dataframe
2022-08-01 15:25:38,076:INFO:Uploading results into container
2022-08-01 15:25:38,076:INFO:Uploading model into container now
2022-08-01 15:25:38,076:INFO:master_model_container: 17
2022-08-01 15:25:38,076:INFO:display_container: 3
2022-08-01 15:25:38,076:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 15:25:38,076:INFO:create_model() successfully completed......................................
2022-08-01 15:25:38,197:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:38,197:INFO:Creating metrics dataframe
2022-08-01 15:25:38,242:INFO:Initializing Extreme Gradient Boosting
2022-08-01 15:25:38,243:INFO:Total runtime is 0.5066695809364319 minutes
2022-08-01 15:25:38,257:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:38,258:INFO:Initializing create_model()
2022-08-01 15:25:38,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:38,258:INFO:Checking exceptions
2022-08-01 15:25:38,261:INFO:Importing libraries
2022-08-01 15:25:38,261:INFO:Copying training dataset
2022-08-01 15:25:38,425:INFO:Defining folds
2022-08-01 15:25:38,425:INFO:Declaring metric variables
2022-08-01 15:25:38,441:INFO:Importing untrained model
2022-08-01 15:25:38,457:INFO:Extreme Gradient Boosting Imported successfully
2022-08-01 15:25:38,489:INFO:Starting cross validation
2022-08-01 15:25:38,489:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:40,987:INFO:Calculating mean and std
2022-08-01 15:25:40,987:INFO:Creating metrics dataframe
2022-08-01 15:25:41,027:INFO:Uploading results into container
2022-08-01 15:25:41,027:INFO:Uploading model into container now
2022-08-01 15:25:41,027:INFO:master_model_container: 18
2022-08-01 15:25:41,027:INFO:display_container: 3
2022-08-01 15:25:41,027:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-01 15:25:41,027:INFO:create_model() successfully completed......................................
2022-08-01 15:25:41,128:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:41,128:INFO:Creating metrics dataframe
2022-08-01 15:25:41,160:INFO:Initializing Light Gradient Boosting Machine
2022-08-01 15:25:41,160:INFO:Total runtime is 0.5552806218465169 minutes
2022-08-01 15:25:41,178:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:41,178:INFO:Initializing create_model()
2022-08-01 15:25:41,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:41,178:INFO:Checking exceptions
2022-08-01 15:25:41,178:INFO:Importing libraries
2022-08-01 15:25:41,178:INFO:Copying training dataset
2022-08-01 15:25:41,338:INFO:Defining folds
2022-08-01 15:25:41,338:INFO:Declaring metric variables
2022-08-01 15:25:41,346:INFO:Importing untrained model
2022-08-01 15:25:41,358:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-01 15:25:41,395:INFO:Starting cross validation
2022-08-01 15:25:41,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:45,293:INFO:Calculating mean and std
2022-08-01 15:25:45,302:INFO:Creating metrics dataframe
2022-08-01 15:25:45,360:INFO:Uploading results into container
2022-08-01 15:25:45,360:INFO:Uploading model into container now
2022-08-01 15:25:45,360:INFO:master_model_container: 19
2022-08-01 15:25:45,360:INFO:display_container: 3
2022-08-01 15:25:45,360:INFO:LGBMRegressor(random_state=123)
2022-08-01 15:25:45,360:INFO:create_model() successfully completed......................................
2022-08-01 15:25:45,494:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:45,494:INFO:Creating metrics dataframe
2022-08-01 15:25:45,536:INFO:Initializing Dummy Regressor
2022-08-01 15:25:45,536:INFO:Total runtime is 0.6282155593236287 minutes
2022-08-01 15:25:45,552:INFO:SubProcess create_model() called ==================================
2022-08-01 15:25:45,552:INFO:Initializing create_model()
2022-08-01 15:25:45,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000002C24B693A00>, kwargs={})
2022-08-01 15:25:45,552:INFO:Checking exceptions
2022-08-01 15:25:45,560:INFO:Importing libraries
2022-08-01 15:25:45,560:INFO:Copying training dataset
2022-08-01 15:25:45,712:INFO:Defining folds
2022-08-01 15:25:45,720:INFO:Declaring metric variables
2022-08-01 15:25:45,728:INFO:Importing untrained model
2022-08-01 15:25:45,736:INFO:Dummy Regressor Imported successfully
2022-08-01 15:25:45,760:INFO:Starting cross validation
2022-08-01 15:25:45,760:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 15:25:46,551:INFO:Calculating mean and std
2022-08-01 15:25:46,551:INFO:Creating metrics dataframe
2022-08-01 15:25:46,608:INFO:Uploading results into container
2022-08-01 15:25:46,608:INFO:Uploading model into container now
2022-08-01 15:25:46,608:INFO:master_model_container: 20
2022-08-01 15:25:46,608:INFO:display_container: 3
2022-08-01 15:25:46,608:INFO:DummyRegressor()
2022-08-01 15:25:46,608:INFO:create_model() successfully completed......................................
2022-08-01 15:25:46,719:INFO:SubProcess create_model() end ==================================
2022-08-01 15:25:46,719:INFO:Creating metrics dataframe
2022-08-01 15:25:46,817:INFO:Initializing create_model()
2022-08-01 15:25:46,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-01 15:25:46,817:INFO:Checking exceptions
2022-08-01 15:25:46,825:INFO:Importing libraries
2022-08-01 15:25:46,825:INFO:Copying training dataset
2022-08-01 15:25:46,994:INFO:Defining folds
2022-08-01 15:25:46,994:INFO:Declaring metric variables
2022-08-01 15:25:46,994:INFO:Importing untrained model
2022-08-01 15:25:46,994:INFO:Declaring custom model
2022-08-01 15:25:46,994:INFO:Gradient Boosting Regressor Imported successfully
2022-08-01 15:25:46,994:INFO:Cross validation set to False
2022-08-01 15:25:46,994:INFO:Fitting Model
2022-08-01 15:25:47,437:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 15:25:47,437:INFO:create_models() successfully completed......................................
2022-08-01 15:25:47,593:INFO:master_model_container: 20
2022-08-01 15:25:47,593:INFO:display_container: 3
2022-08-01 15:25:47,593:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 15:25:47,593:INFO:compare_models() successfully completed......................................
2022-08-01 15:25:47,859:INFO:Initializing plot_model()
2022-08-01 15:25:47,859:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, system=True)
2022-08-01 15:25:47,859:INFO:Checking exceptions
2022-08-01 15:25:47,875:INFO:Preparing display monitor
2022-08-01 15:25:47,883:INFO:Preloading libraries
2022-08-01 15:25:47,915:INFO:Copying training dataset
2022-08-01 15:25:47,915:INFO:Plot type: feature
2022-08-01 15:25:47,915:WARNING:No coef_ found. Trying feature_importances_
2022-08-01 15:25:48,476:INFO:Visual Rendered Successfully
2022-08-01 15:25:48,623:INFO:plot_model() successfully completed......................................
2022-08-01 15:25:48,784:INFO:Initializing plot_model()
2022-08-01 15:25:48,784:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002C24A1EE3A0>, system=True)
2022-08-01 15:25:48,784:INFO:Checking exceptions
2022-08-01 15:25:48,788:INFO:Preparing display monitor
2022-08-01 15:25:48,804:INFO:Preloading libraries
2022-08-01 15:25:48,805:INFO:Copying training dataset
2022-08-01 15:25:48,806:INFO:Plot type: residuals
2022-08-01 15:25:50,195:INFO:Fitting Model
2022-08-01 15:25:50,309:INFO:Scoring test/hold-out set
2022-08-01 15:25:51,654:INFO:Visual Rendered Successfully
2022-08-01 15:25:51,881:INFO:plot_model() successfully completed......................................
2022-08-01 15:25:52,126:INFO:Initializing save_model()
2022-08-01 15:25:52,126:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-01 15:25:52,126:INFO:Adding model into prep_pipe
2022-08-01 15:25:52,150:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-01 15:25:52,174:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-01 15:25:52,174:INFO:save_model() successfully completed......................................
2022-08-01 15:44:48,083:INFO:Initializing load_model()
2022-08-01 15:44:48,083:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:36,992:INFO:Initializing load_model()
2022-08-01 15:45:36,992:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:42,363:INFO:Initializing load_model()
2022-08-01 15:45:42,363:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:48,196:INFO:Initializing load_model()
2022-08-01 15:45:48,196:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:48,461:INFO:Initializing load_model()
2022-08-01 15:45:48,461:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:48,630:INFO:Initializing load_model()
2022-08-01 15:45:48,630:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:48,796:INFO:Initializing load_model()
2022-08-01 15:45:48,796:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:48,996:INFO:Initializing load_model()
2022-08-01 15:45:48,996:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:49,204:INFO:Initializing load_model()
2022-08-01 15:45:49,204:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:49,413:INFO:Initializing load_model()
2022-08-01 15:45:49,413:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:49,628:INFO:Initializing load_model()
2022-08-01 15:45:49,635:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:49,834:INFO:Initializing load_model()
2022-08-01 15:45:49,834:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:50,018:INFO:Initializing load_model()
2022-08-01 15:45:50,019:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:50,183:INFO:Initializing load_model()
2022-08-01 15:45:50,183:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:50,338:INFO:Initializing load_model()
2022-08-01 15:45:50,338:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:50,485:INFO:Initializing load_model()
2022-08-01 15:45:50,485:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:50,636:INFO:Initializing load_model()
2022-08-01 15:45:50,644:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:53,245:INFO:Initializing load_model()
2022-08-01 15:45:53,245:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:55,924:INFO:Initializing load_model()
2022-08-01 15:45:55,925:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:57,277:INFO:Initializing load_model()
2022-08-01 15:45:57,277:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:45:57,445:INFO:Initializing predict_model()
2022-08-01 15:45:57,445:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000225175701F0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000022517437970>)
2022-08-01 15:45:57,445:INFO:Checking exceptions
2022-08-01 15:45:57,445:INFO:Preloading libraries
2022-08-01 15:47:35,953:INFO:Initializing load_model()
2022-08-01 15:47:35,953:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:47:42,054:INFO:Initializing load_model()
2022-08-01 15:47:42,054:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 15:47:42,240:INFO:Initializing predict_model()
2022-08-01 15:47:42,240:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000022517570D30>, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000225174717F0>)
2022-08-01 15:47:42,240:INFO:Checking exceptions
2022-08-01 15:47:42,240:INFO:Preloading libraries
2022-08-01 15:55:48,610:INFO:Initializing load_model()
2022-08-01 16:21:38,123:INFO:Initializing load_model()
2022-08-01 16:22:10,391:INFO:Initializing load_model()
2022-08-01 16:37:48,449:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 16:37:48,455:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 16:37:48,455:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 16:39:52,957:INFO:Initializing load_model()
2022-08-01 16:39:52,957:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 16:40:04,551:INFO:Initializing load_model()
2022-08-01 16:40:04,551:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 16:40:04,752:INFO:Initializing predict_model()
2022-08-01 16:40:04,760:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028EA4C28B80>, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028EA4A74BE0>)
2022-08-01 16:40:04,760:INFO:Checking exceptions
2022-08-01 16:40:04,760:INFO:Preloading libraries
2022-08-01 17:01:23,759:INFO:Initializing load_model()
2022-08-01 17:01:23,767:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:01:44,218:INFO:Initializing load_model()
2022-08-01 17:01:44,226:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:01:44,482:INFO:Initializing predict_model()
2022-08-01 17:01:44,482:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028EA4D26F70>, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028E9E815820>)
2022-08-01 17:01:44,482:INFO:Checking exceptions
2022-08-01 17:01:44,482:INFO:Preloading libraries
2022-08-01 17:03:37,076:INFO:Initializing load_model()
2022-08-01 17:03:37,076:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:03:42,891:INFO:Initializing load_model()
2022-08-01 17:03:42,891:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:03:43,059:INFO:Initializing predict_model()
2022-08-01 17:03:43,059:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028EA4C28700>, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028EA4C2C520>)
2022-08-01 17:03:43,059:INFO:Checking exceptions
2022-08-01 17:03:43,067:INFO:Preloading libraries
2022-08-01 17:04:58,379:INFO:Initializing load_model()
2022-08-01 17:04:58,379:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:04:58,547:INFO:Initializing predict_model()
2022-08-01 17:04:58,547:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ('polynomial_features',
                 TransfomerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('bin_numeric_features',
                 TransfomerWrapper(include=['age', 'bmi'], transformer=KBinsDiscretizer(encode='ordinal', strategy='kmeans'))),
                ('normalize', TransfomerWrapper(transformer=StandardScaler())),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028EA4D26AF0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000028EA4C36460>)
2022-08-01 17:04:58,547:INFO:Checking exceptions
2022-08-01 17:04:58,555:INFO:Preloading libraries
2022-08-01 17:05:47,103:INFO:Initializing load_model()
2022-08-01 17:05:47,103:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:06:09,692:INFO:Initializing load_model()
2022-08-01 17:06:09,692:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:06:25,669:INFO:Initializing load_model()
2022-08-01 17:06:25,677:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:06:39,380:INFO:Initializing load_model()
2022-08-01 17:06:39,388:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 17:14:57,403:INFO:PyCaret RegressionExperiment
2022-08-01 17:14:57,411:INFO:Logging name: reg-default-name
2022-08-01 17:14:57,411:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-01 17:14:57,411:INFO:version 3.0.0
2022-08-01 17:14:57,411:INFO:Initializing setup()
2022-08-01 17:14:57,411:INFO:self.USI: e5b2
2022-08-01 17:14:57,411:INFO:self.variable_keys: {'display_container', 'experiment__', 'X', 'fold_groups_param_full', '_available_plots', 'target_param', 'transform_target_method_param', 'transform_target_param', 'n_jobs_param', 'memory', 'imputation_classifier', '_gpu_n_jobs_param', '_all_models', 'fold_shuffle_param', 'exp_id', 'logging_param', 'html_param', 'exp_name_log', 'fold_generator', 'iterative_imputation_iters_param', 'stratify_param', 'pipeline', 'imputation_regressor', 'fold_groups_param', '_all_metrics', 'X_train', 'variable_keys', 'log_plots_param', 'master_model_container', 'idx', 'X_test', 'fold_param', 'y_train', '_ml_usecase', 'y', 'USI', 'gpu_param', 'y_test', '_all_models_internal', 'seed', 'data'}
2022-08-01 17:14:57,411:INFO:Checking environment
2022-08-01 17:14:57,411:INFO:python_version: 3.9.12
2022-08-01 17:14:57,411:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-01 17:14:57,411:INFO:machine: AMD64
2022-08-01 17:14:57,419:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-01 17:14:57,419:INFO:Memory: svmem(total=8419573760, available=1821843456, percent=78.4, used=6597730304, free=1821843456)
2022-08-01 17:14:57,419:INFO:Physical Core: 4
2022-08-01 17:14:57,419:INFO:Logical Core: 8
2022-08-01 17:14:57,427:INFO:Checking libraries
2022-08-01 17:14:57,427:INFO:pd==1.4.2
2022-08-01 17:14:57,427:INFO:numpy==1.21.5
2022-08-01 17:14:57,427:INFO:sklearn==1.0.2
2022-08-01 17:14:57,427:INFO:lightgbm==3.3.2
2022-08-01 17:14:57,427:INFO:xgboost==1.6.1
2022-08-01 17:14:57,451:WARNING:catboost not found
2022-08-01 17:14:57,451:WARNING:mlflow not found
2022-08-01 17:14:57,451:INFO:Set up data.
2022-08-01 17:14:57,579:INFO:Set up target column.
2022-08-01 17:14:57,579:INFO:Set up train/test split.
2022-08-01 17:14:57,619:INFO:Set up folding strategy.
2022-08-01 17:14:57,619:INFO:Assigning column types.
2022-08-01 17:14:57,643:INFO:Preparing preprocessing pipeline...
2022-08-01 17:14:57,643:INFO:Set up simple imputation.
2022-08-01 17:14:57,659:INFO:Set up encoding of ordinal features.
2022-08-01 17:14:57,667:INFO:Set up encoding of categorical features.
2022-08-01 17:14:57,787:INFO:Finished creating preprocessing pipeline.
2022-08-01 17:14:57,803:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-08-01 17:14:57,803:INFO:Creating final display dataframe.
2022-08-01 17:14:57,819:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              e5b2
2022-08-01 17:14:57,819:INFO:Preparing display monitor
2022-08-01 17:14:58,067:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 17:14:58,241:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 17:14:58,249:INFO:setup() successfully completed in 0.92s...............
2022-08-01 17:24:14,935:INFO:Set up label encoding.
2022-08-01 17:24:28,229:INFO:Set up label encoding.
2022-08-01 17:24:51,999:INFO:Set up label encoding.
2022-08-01 17:24:57,648:INFO:Set up label encoding.
2022-08-01 17:56:02,838:INFO:Preparing display monitor
2022-08-01 17:56:06,499:INFO:PyCaret RegressionExperiment
2022-08-01 17:56:06,499:INFO:Logging name: reg-default-name
2022-08-01 17:56:06,499:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-01 17:56:06,499:INFO:version 3.0.0
2022-08-01 17:56:06,499:INFO:Initializing setup()
2022-08-01 17:56:06,499:INFO:self.USI: d1c7
2022-08-01 17:56:06,499:INFO:self.variable_keys: {'gpu_param', '_all_models_internal', 'transform_target_param', 'imputation_classifier', 'USI', '_available_plots', 'data', 'fold_param', 'exp_id', 'y_test', 'display_container', 'idx', 'fold_shuffle_param', 'memory', 'X_train', 'log_plots_param', 'X', 'exp_name_log', 'experiment__', 'y', 'pipeline', 'html_param', '_all_metrics', 'target_param', 'transform_target_method_param', 'n_jobs_param', '_ml_usecase', 'master_model_container', 'y_train', 'X_test', '_gpu_n_jobs_param', 'fold_groups_param_full', 'iterative_imputation_iters_param', 'seed', 'fold_groups_param', 'fold_generator', 'variable_keys', 'imputation_regressor', '_all_models', 'logging_param', 'stratify_param'}
2022-08-01 17:56:06,499:INFO:Checking environment
2022-08-01 17:56:06,499:INFO:python_version: 3.9.12
2022-08-01 17:56:06,499:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-01 17:56:06,499:INFO:machine: AMD64
2022-08-01 17:56:06,499:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-01 17:56:06,499:INFO:Memory: svmem(total=8419573760, available=1404854272, percent=83.3, used=7014719488, free=1404854272)
2022-08-01 17:56:06,499:INFO:Physical Core: 4
2022-08-01 17:56:06,499:INFO:Logical Core: 8
2022-08-01 17:56:06,499:INFO:Checking libraries
2022-08-01 17:56:06,499:INFO:pd==1.4.2
2022-08-01 17:56:06,499:INFO:numpy==1.21.5
2022-08-01 17:56:06,499:INFO:sklearn==1.0.2
2022-08-01 17:56:06,951:INFO:lightgbm==3.3.2
2022-08-01 17:56:07,042:INFO:xgboost==1.6.1
2022-08-01 17:56:07,042:WARNING:catboost not found
2022-08-01 17:56:07,042:WARNING:mlflow not found
2022-08-01 17:56:07,042:INFO:Set up data.
2022-08-01 17:56:07,042:INFO:Set up target column.
2022-08-01 17:56:07,042:INFO:Set up train/test split.
2022-08-01 17:56:07,050:INFO:Set up folding strategy.
2022-08-01 17:56:07,050:INFO:Assigning column types.
2022-08-01 17:56:07,058:INFO:Preparing preprocessing pipeline...
2022-08-01 17:56:07,058:INFO:Set up simple imputation.
2022-08-01 17:56:07,058:INFO:Set up encoding of ordinal features.
2022-08-01 17:56:07,068:INFO:Set up encoding of categorical features.
2022-08-01 17:56:07,126:INFO:Finished creating preprocessing pipeline.
2022-08-01 17:56:07,142:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-08-01 17:56:07,142:INFO:Creating final display dataframe.
2022-08-01 17:56:07,142:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              d1c7
2022-08-01 17:56:07,142:INFO:Preparing display monitor
2022-08-01 17:56:07,417:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 17:56:07,680:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-01 17:56:07,688:INFO:setup() successfully completed in 1.18s...............
2022-08-01 17:56:07,907:INFO:Initializing create_model()
2022-08-01 17:56:07,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-01 17:56:07,907:INFO:Checking exceptions
2022-08-01 17:56:07,915:INFO:Preparing display monitor
2022-08-01 17:56:07,939:INFO:Importing libraries
2022-08-01 17:56:07,939:INFO:Copying training dataset
2022-08-01 17:56:07,995:INFO:Defining folds
2022-08-01 17:56:08,003:INFO:Declaring metric variables
2022-08-01 17:56:08,011:INFO:Importing untrained model
2022-08-01 17:56:08,027:INFO:Linear Regression Imported successfully
2022-08-01 17:56:08,051:INFO:Starting cross validation
2022-08-01 17:56:08,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:25,891:INFO:Calculating mean and std
2022-08-01 17:56:25,891:INFO:Creating metrics dataframe
2022-08-01 17:56:26,589:INFO:Finalizing model
2022-08-01 17:56:26,687:INFO:Uploading results into container
2022-08-01 17:56:26,687:INFO:Uploading model into container now
2022-08-01 17:56:26,704:INFO:master_model_container: 1
2022-08-01 17:56:26,704:INFO:display_container: 2
2022-08-01 17:56:26,704:INFO:LinearRegression(n_jobs=-1)
2022-08-01 17:56:26,704:INFO:create_model() successfully completed......................................
2022-08-01 17:56:27,127:INFO:Initializing compare_models()
2022-08-01 17:56:27,127:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-08-01 17:56:27,127:INFO:Checking exceptions
2022-08-01 17:56:27,127:INFO:Preparing display monitor
2022-08-01 17:56:27,135:INFO:Preparing display monitor
2022-08-01 17:56:27,191:INFO:Initializing Linear Regression
2022-08-01 17:56:27,191:INFO:Total runtime is 0.0 minutes
2022-08-01 17:56:27,207:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:27,207:INFO:Initializing create_model()
2022-08-01 17:56:27,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:27,207:INFO:Checking exceptions
2022-08-01 17:56:27,207:INFO:Importing libraries
2022-08-01 17:56:27,215:INFO:Copying training dataset
2022-08-01 17:56:27,287:INFO:Defining folds
2022-08-01 17:56:27,287:INFO:Declaring metric variables
2022-08-01 17:56:27,303:INFO:Importing untrained model
2022-08-01 17:56:27,322:INFO:Linear Regression Imported successfully
2022-08-01 17:56:27,354:INFO:Starting cross validation
2022-08-01 17:56:27,362:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:27,782:INFO:Calculating mean and std
2022-08-01 17:56:27,790:INFO:Creating metrics dataframe
2022-08-01 17:56:27,846:INFO:Uploading results into container
2022-08-01 17:56:27,846:INFO:Uploading model into container now
2022-08-01 17:56:27,846:INFO:master_model_container: 2
2022-08-01 17:56:27,846:INFO:display_container: 3
2022-08-01 17:56:27,846:INFO:LinearRegression(n_jobs=-1)
2022-08-01 17:56:27,846:INFO:create_model() successfully completed......................................
2022-08-01 17:56:27,998:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:27,998:INFO:Creating metrics dataframe
2022-08-01 17:56:28,048:INFO:Initializing Lasso Regression
2022-08-01 17:56:28,048:INFO:Total runtime is 0.01426868438720703 minutes
2022-08-01 17:56:28,072:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:28,072:INFO:Initializing create_model()
2022-08-01 17:56:28,072:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:28,072:INFO:Checking exceptions
2022-08-01 17:56:28,072:INFO:Importing libraries
2022-08-01 17:56:28,072:INFO:Copying training dataset
2022-08-01 17:56:28,176:INFO:Defining folds
2022-08-01 17:56:28,176:INFO:Declaring metric variables
2022-08-01 17:56:28,192:INFO:Importing untrained model
2022-08-01 17:56:28,216:INFO:Lasso Regression Imported successfully
2022-08-01 17:56:28,268:INFO:Starting cross validation
2022-08-01 17:56:28,270:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:28,840:INFO:Calculating mean and std
2022-08-01 17:56:28,840:INFO:Creating metrics dataframe
2022-08-01 17:56:28,931:INFO:Uploading results into container
2022-08-01 17:56:28,931:INFO:Uploading model into container now
2022-08-01 17:56:28,931:INFO:master_model_container: 3
2022-08-01 17:56:28,931:INFO:display_container: 3
2022-08-01 17:56:28,931:INFO:Lasso(random_state=123)
2022-08-01 17:56:28,931:INFO:create_model() successfully completed......................................
2022-08-01 17:56:29,081:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:29,081:INFO:Creating metrics dataframe
2022-08-01 17:56:29,123:INFO:Initializing Ridge Regression
2022-08-01 17:56:29,123:INFO:Total runtime is 0.032189095020294184 minutes
2022-08-01 17:56:29,139:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:29,139:INFO:Initializing create_model()
2022-08-01 17:56:29,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:29,139:INFO:Checking exceptions
2022-08-01 17:56:29,147:INFO:Importing libraries
2022-08-01 17:56:29,147:INFO:Copying training dataset
2022-08-01 17:56:29,227:INFO:Defining folds
2022-08-01 17:56:29,227:INFO:Declaring metric variables
2022-08-01 17:56:29,236:INFO:Importing untrained model
2022-08-01 17:56:29,257:INFO:Ridge Regression Imported successfully
2022-08-01 17:56:29,291:INFO:Starting cross validation
2022-08-01 17:56:29,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:29,748:INFO:Calculating mean and std
2022-08-01 17:56:29,748:INFO:Creating metrics dataframe
2022-08-01 17:56:29,807:INFO:Uploading results into container
2022-08-01 17:56:29,807:INFO:Uploading model into container now
2022-08-01 17:56:29,807:INFO:master_model_container: 4
2022-08-01 17:56:29,807:INFO:display_container: 3
2022-08-01 17:56:29,807:INFO:Ridge(random_state=123)
2022-08-01 17:56:29,815:INFO:create_model() successfully completed......................................
2022-08-01 17:56:29,949:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:29,949:INFO:Creating metrics dataframe
2022-08-01 17:56:29,999:INFO:Initializing Elastic Net
2022-08-01 17:56:29,999:INFO:Total runtime is 0.046783709526062006 minutes
2022-08-01 17:56:30,015:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:30,015:INFO:Initializing create_model()
2022-08-01 17:56:30,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:30,015:INFO:Checking exceptions
2022-08-01 17:56:30,023:INFO:Importing libraries
2022-08-01 17:56:30,023:INFO:Copying training dataset
2022-08-01 17:56:30,095:INFO:Defining folds
2022-08-01 17:56:30,095:INFO:Declaring metric variables
2022-08-01 17:56:30,111:INFO:Importing untrained model
2022-08-01 17:56:30,127:INFO:Elastic Net Imported successfully
2022-08-01 17:56:30,167:INFO:Starting cross validation
2022-08-01 17:56:30,167:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:30,776:INFO:Calculating mean and std
2022-08-01 17:56:30,776:INFO:Creating metrics dataframe
2022-08-01 17:56:30,888:INFO:Uploading results into container
2022-08-01 17:56:30,888:INFO:Uploading model into container now
2022-08-01 17:56:30,888:INFO:master_model_container: 5
2022-08-01 17:56:30,888:INFO:display_container: 3
2022-08-01 17:56:30,888:INFO:ElasticNet(random_state=123)
2022-08-01 17:56:30,888:INFO:create_model() successfully completed......................................
2022-08-01 17:56:31,064:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:31,064:INFO:Creating metrics dataframe
2022-08-01 17:56:31,115:INFO:Initializing Least Angle Regression
2022-08-01 17:56:31,115:INFO:Total runtime is 0.06539272069931029 minutes
2022-08-01 17:56:31,136:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:31,136:INFO:Initializing create_model()
2022-08-01 17:56:31,138:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:31,138:INFO:Checking exceptions
2022-08-01 17:56:31,141:INFO:Importing libraries
2022-08-01 17:56:31,141:INFO:Copying training dataset
2022-08-01 17:56:31,204:INFO:Defining folds
2022-08-01 17:56:31,204:INFO:Declaring metric variables
2022-08-01 17:56:31,220:INFO:Importing untrained model
2022-08-01 17:56:31,236:INFO:Least Angle Regression Imported successfully
2022-08-01 17:56:31,277:INFO:Starting cross validation
2022-08-01 17:56:31,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:31,755:INFO:Calculating mean and std
2022-08-01 17:56:31,764:INFO:Creating metrics dataframe
2022-08-01 17:56:31,836:INFO:Uploading results into container
2022-08-01 17:56:31,836:INFO:Uploading model into container now
2022-08-01 17:56:31,836:INFO:master_model_container: 6
2022-08-01 17:56:31,836:INFO:display_container: 3
2022-08-01 17:56:31,836:INFO:Lars(random_state=123)
2022-08-01 17:56:31,836:INFO:create_model() successfully completed......................................
2022-08-01 17:56:32,021:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:32,029:INFO:Creating metrics dataframe
2022-08-01 17:56:32,085:INFO:Initializing Lasso Least Angle Regression
2022-08-01 17:56:32,085:INFO:Total runtime is 0.08156033754348754 minutes
2022-08-01 17:56:32,101:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:32,101:INFO:Initializing create_model()
2022-08-01 17:56:32,101:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:32,101:INFO:Checking exceptions
2022-08-01 17:56:32,101:INFO:Importing libraries
2022-08-01 17:56:32,101:INFO:Copying training dataset
2022-08-01 17:56:32,173:INFO:Defining folds
2022-08-01 17:56:32,173:INFO:Declaring metric variables
2022-08-01 17:56:32,189:INFO:Importing untrained model
2022-08-01 17:56:32,205:INFO:Lasso Least Angle Regression Imported successfully
2022-08-01 17:56:32,253:INFO:Starting cross validation
2022-08-01 17:56:32,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:32,714:INFO:Calculating mean and std
2022-08-01 17:56:32,714:INFO:Creating metrics dataframe
2022-08-01 17:56:32,802:INFO:Uploading results into container
2022-08-01 17:56:32,802:INFO:Uploading model into container now
2022-08-01 17:56:32,802:INFO:master_model_container: 7
2022-08-01 17:56:32,802:INFO:display_container: 3
2022-08-01 17:56:32,802:INFO:LassoLars(random_state=123)
2022-08-01 17:56:32,802:INFO:create_model() successfully completed......................................
2022-08-01 17:56:32,994:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:32,994:INFO:Creating metrics dataframe
2022-08-01 17:56:33,066:INFO:Initializing Orthogonal Matching Pursuit
2022-08-01 17:56:33,066:INFO:Total runtime is 0.0979017694791158 minutes
2022-08-01 17:56:33,090:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:33,090:INFO:Initializing create_model()
2022-08-01 17:56:33,090:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:33,090:INFO:Checking exceptions
2022-08-01 17:56:33,098:INFO:Importing libraries
2022-08-01 17:56:33,098:INFO:Copying training dataset
2022-08-01 17:56:33,178:INFO:Defining folds
2022-08-01 17:56:33,178:INFO:Declaring metric variables
2022-08-01 17:56:33,194:INFO:Importing untrained model
2022-08-01 17:56:33,218:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-01 17:56:33,258:INFO:Starting cross validation
2022-08-01 17:56:33,266:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:33,682:INFO:Calculating mean and std
2022-08-01 17:56:33,682:INFO:Creating metrics dataframe
2022-08-01 17:56:33,738:INFO:Uploading results into container
2022-08-01 17:56:33,738:INFO:Uploading model into container now
2022-08-01 17:56:33,738:INFO:master_model_container: 8
2022-08-01 17:56:33,738:INFO:display_container: 3
2022-08-01 17:56:33,738:INFO:OrthogonalMatchingPursuit()
2022-08-01 17:56:33,738:INFO:create_model() successfully completed......................................
2022-08-01 17:56:33,857:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:33,865:INFO:Creating metrics dataframe
2022-08-01 17:56:33,905:INFO:Initializing Bayesian Ridge
2022-08-01 17:56:33,905:INFO:Total runtime is 0.11188815037409464 minutes
2022-08-01 17:56:33,923:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:33,923:INFO:Initializing create_model()
2022-08-01 17:56:33,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:33,923:INFO:Checking exceptions
2022-08-01 17:56:33,923:INFO:Importing libraries
2022-08-01 17:56:33,923:INFO:Copying training dataset
2022-08-01 17:56:34,027:INFO:Defining folds
2022-08-01 17:56:34,027:INFO:Declaring metric variables
2022-08-01 17:56:34,043:INFO:Importing untrained model
2022-08-01 17:56:34,067:INFO:Bayesian Ridge Imported successfully
2022-08-01 17:56:34,107:INFO:Starting cross validation
2022-08-01 17:56:34,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:34,647:INFO:Calculating mean and std
2022-08-01 17:56:34,656:INFO:Creating metrics dataframe
2022-08-01 17:56:34,710:INFO:Uploading results into container
2022-08-01 17:56:34,710:INFO:Uploading model into container now
2022-08-01 17:56:34,711:INFO:master_model_container: 9
2022-08-01 17:56:34,711:INFO:display_container: 3
2022-08-01 17:56:34,711:INFO:BayesianRidge()
2022-08-01 17:56:34,711:INFO:create_model() successfully completed......................................
2022-08-01 17:56:34,833:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:34,833:INFO:Creating metrics dataframe
2022-08-01 17:56:34,885:INFO:Initializing Passive Aggressive Regressor
2022-08-01 17:56:34,886:INFO:Total runtime is 0.12824840545654295 minutes
2022-08-01 17:56:34,902:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:34,903:INFO:Initializing create_model()
2022-08-01 17:56:34,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:34,903:INFO:Checking exceptions
2022-08-01 17:56:34,907:INFO:Importing libraries
2022-08-01 17:56:34,908:INFO:Copying training dataset
2022-08-01 17:56:34,971:INFO:Defining folds
2022-08-01 17:56:34,971:INFO:Declaring metric variables
2022-08-01 17:56:34,987:INFO:Importing untrained model
2022-08-01 17:56:35,003:INFO:Passive Aggressive Regressor Imported successfully
2022-08-01 17:56:35,035:INFO:Starting cross validation
2022-08-01 17:56:35,043:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:35,488:INFO:Calculating mean and std
2022-08-01 17:56:35,496:INFO:Creating metrics dataframe
2022-08-01 17:56:35,547:INFO:Uploading results into container
2022-08-01 17:56:35,547:INFO:Uploading model into container now
2022-08-01 17:56:35,547:INFO:master_model_container: 10
2022-08-01 17:56:35,547:INFO:display_container: 3
2022-08-01 17:56:35,547:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-01 17:56:35,555:INFO:create_model() successfully completed......................................
2022-08-01 17:56:35,673:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:35,673:INFO:Creating metrics dataframe
2022-08-01 17:56:35,716:INFO:Initializing Huber Regressor
2022-08-01 17:56:35,716:INFO:Total runtime is 0.14207266171773272 minutes
2022-08-01 17:56:35,732:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:35,732:INFO:Initializing create_model()
2022-08-01 17:56:35,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:35,732:INFO:Checking exceptions
2022-08-01 17:56:35,740:INFO:Importing libraries
2022-08-01 17:56:35,740:INFO:Copying training dataset
2022-08-01 17:56:35,812:INFO:Defining folds
2022-08-01 17:56:35,812:INFO:Declaring metric variables
2022-08-01 17:56:35,828:INFO:Importing untrained model
2022-08-01 17:56:35,836:INFO:Huber Regressor Imported successfully
2022-08-01 17:56:35,868:INFO:Starting cross validation
2022-08-01 17:56:35,876:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:36,472:INFO:Calculating mean and std
2022-08-01 17:56:36,472:INFO:Creating metrics dataframe
2022-08-01 17:56:36,531:INFO:Uploading results into container
2022-08-01 17:56:36,531:INFO:Uploading model into container now
2022-08-01 17:56:36,531:INFO:master_model_container: 11
2022-08-01 17:56:36,531:INFO:display_container: 3
2022-08-01 17:56:36,531:INFO:HuberRegressor()
2022-08-01 17:56:36,531:INFO:create_model() successfully completed......................................
2022-08-01 17:56:36,648:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:36,648:INFO:Creating metrics dataframe
2022-08-01 17:56:36,698:INFO:Initializing K Neighbors Regressor
2022-08-01 17:56:36,698:INFO:Total runtime is 0.1584346532821655 minutes
2022-08-01 17:56:36,706:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:36,706:INFO:Initializing create_model()
2022-08-01 17:56:36,714:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:36,714:INFO:Checking exceptions
2022-08-01 17:56:36,714:INFO:Importing libraries
2022-08-01 17:56:36,714:INFO:Copying training dataset
2022-08-01 17:56:36,786:INFO:Defining folds
2022-08-01 17:56:36,786:INFO:Declaring metric variables
2022-08-01 17:56:36,802:INFO:Importing untrained model
2022-08-01 17:56:36,818:INFO:K Neighbors Regressor Imported successfully
2022-08-01 17:56:36,842:INFO:Starting cross validation
2022-08-01 17:56:36,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:37,475:INFO:Calculating mean and std
2022-08-01 17:56:37,477:INFO:Creating metrics dataframe
2022-08-01 17:56:37,549:INFO:Uploading results into container
2022-08-01 17:56:37,549:INFO:Uploading model into container now
2022-08-01 17:56:37,549:INFO:master_model_container: 12
2022-08-01 17:56:37,549:INFO:display_container: 3
2022-08-01 17:56:37,557:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-01 17:56:37,557:INFO:create_model() successfully completed......................................
2022-08-01 17:56:37,703:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:37,703:INFO:Creating metrics dataframe
2022-08-01 17:56:37,751:INFO:Initializing Decision Tree Regressor
2022-08-01 17:56:37,751:INFO:Total runtime is 0.1759936690330505 minutes
2022-08-01 17:56:37,767:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:37,767:INFO:Initializing create_model()
2022-08-01 17:56:37,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:37,767:INFO:Checking exceptions
2022-08-01 17:56:37,767:INFO:Importing libraries
2022-08-01 17:56:37,767:INFO:Copying training dataset
2022-08-01 17:56:37,839:INFO:Defining folds
2022-08-01 17:56:37,839:INFO:Declaring metric variables
2022-08-01 17:56:37,855:INFO:Importing untrained model
2022-08-01 17:56:37,876:INFO:Decision Tree Regressor Imported successfully
2022-08-01 17:56:37,912:INFO:Starting cross validation
2022-08-01 17:56:37,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:38,386:INFO:Calculating mean and std
2022-08-01 17:56:38,386:INFO:Creating metrics dataframe
2022-08-01 17:56:38,458:INFO:Uploading results into container
2022-08-01 17:56:38,458:INFO:Uploading model into container now
2022-08-01 17:56:38,458:INFO:master_model_container: 13
2022-08-01 17:56:38,458:INFO:display_container: 3
2022-08-01 17:56:38,458:INFO:DecisionTreeRegressor(random_state=123)
2022-08-01 17:56:38,458:INFO:create_model() successfully completed......................................
2022-08-01 17:56:38,595:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:38,595:INFO:Creating metrics dataframe
2022-08-01 17:56:38,659:INFO:Initializing Random Forest Regressor
2022-08-01 17:56:38,659:INFO:Total runtime is 0.1911267518997192 minutes
2022-08-01 17:56:38,675:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:38,683:INFO:Initializing create_model()
2022-08-01 17:56:38,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:38,683:INFO:Checking exceptions
2022-08-01 17:56:38,691:INFO:Importing libraries
2022-08-01 17:56:38,691:INFO:Copying training dataset
2022-08-01 17:56:38,779:INFO:Defining folds
2022-08-01 17:56:38,779:INFO:Declaring metric variables
2022-08-01 17:56:38,795:INFO:Importing untrained model
2022-08-01 17:56:38,823:INFO:Random Forest Regressor Imported successfully
2022-08-01 17:56:38,860:INFO:Starting cross validation
2022-08-01 17:56:38,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:40,630:INFO:Calculating mean and std
2022-08-01 17:56:40,630:INFO:Creating metrics dataframe
2022-08-01 17:56:40,686:INFO:Uploading results into container
2022-08-01 17:56:40,686:INFO:Uploading model into container now
2022-08-01 17:56:40,686:INFO:master_model_container: 14
2022-08-01 17:56:40,686:INFO:display_container: 3
2022-08-01 17:56:40,686:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-01 17:56:40,686:INFO:create_model() successfully completed......................................
2022-08-01 17:56:40,812:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:40,812:INFO:Creating metrics dataframe
2022-08-01 17:56:40,854:INFO:Initializing Extra Trees Regressor
2022-08-01 17:56:40,854:INFO:Total runtime is 0.22771244446436562 minutes
2022-08-01 17:56:40,872:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:40,872:INFO:Initializing create_model()
2022-08-01 17:56:40,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:40,872:INFO:Checking exceptions
2022-08-01 17:56:40,872:INFO:Importing libraries
2022-08-01 17:56:40,880:INFO:Copying training dataset
2022-08-01 17:56:40,976:INFO:Defining folds
2022-08-01 17:56:40,976:INFO:Declaring metric variables
2022-08-01 17:56:40,992:INFO:Importing untrained model
2022-08-01 17:56:41,008:INFO:Extra Trees Regressor Imported successfully
2022-08-01 17:56:41,040:INFO:Starting cross validation
2022-08-01 17:56:41,040:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:42,385:INFO:Calculating mean and std
2022-08-01 17:56:42,385:INFO:Creating metrics dataframe
2022-08-01 17:56:42,441:INFO:Uploading results into container
2022-08-01 17:56:42,441:INFO:Uploading model into container now
2022-08-01 17:56:42,441:INFO:master_model_container: 15
2022-08-01 17:56:42,441:INFO:display_container: 3
2022-08-01 17:56:42,441:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-01 17:56:42,441:INFO:create_model() successfully completed......................................
2022-08-01 17:56:42,563:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:42,563:INFO:Creating metrics dataframe
2022-08-01 17:56:42,604:INFO:Initializing AdaBoost Regressor
2022-08-01 17:56:42,604:INFO:Total runtime is 0.2568736990292867 minutes
2022-08-01 17:56:42,622:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:42,622:INFO:Initializing create_model()
2022-08-01 17:56:42,622:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:42,622:INFO:Checking exceptions
2022-08-01 17:56:42,630:INFO:Importing libraries
2022-08-01 17:56:42,630:INFO:Copying training dataset
2022-08-01 17:56:42,686:INFO:Defining folds
2022-08-01 17:56:42,686:INFO:Declaring metric variables
2022-08-01 17:56:42,702:INFO:Importing untrained model
2022-08-01 17:56:42,718:INFO:AdaBoost Regressor Imported successfully
2022-08-01 17:56:42,750:INFO:Starting cross validation
2022-08-01 17:56:42,758:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:43,246:INFO:Calculating mean and std
2022-08-01 17:56:43,254:INFO:Creating metrics dataframe
2022-08-01 17:56:43,304:INFO:Uploading results into container
2022-08-01 17:56:43,304:INFO:Uploading model into container now
2022-08-01 17:56:43,304:INFO:master_model_container: 16
2022-08-01 17:56:43,304:INFO:display_container: 3
2022-08-01 17:56:43,304:INFO:AdaBoostRegressor(random_state=123)
2022-08-01 17:56:43,304:INFO:create_model() successfully completed......................................
2022-08-01 17:56:43,430:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:43,430:INFO:Creating metrics dataframe
2022-08-01 17:56:43,478:INFO:Initializing Gradient Boosting Regressor
2022-08-01 17:56:43,478:INFO:Total runtime is 0.27144012451171873 minutes
2022-08-01 17:56:43,495:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:43,495:INFO:Initializing create_model()
2022-08-01 17:56:43,495:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:43,503:INFO:Checking exceptions
2022-08-01 17:56:43,503:INFO:Importing libraries
2022-08-01 17:56:43,503:INFO:Copying training dataset
2022-08-01 17:56:43,567:INFO:Defining folds
2022-08-01 17:56:43,567:INFO:Declaring metric variables
2022-08-01 17:56:43,583:INFO:Importing untrained model
2022-08-01 17:56:43,599:INFO:Gradient Boosting Regressor Imported successfully
2022-08-01 17:56:43,631:INFO:Starting cross validation
2022-08-01 17:56:43,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:44,473:INFO:Calculating mean and std
2022-08-01 17:56:44,481:INFO:Creating metrics dataframe
2022-08-01 17:56:44,553:INFO:Uploading results into container
2022-08-01 17:56:44,553:INFO:Uploading model into container now
2022-08-01 17:56:44,553:INFO:master_model_container: 17
2022-08-01 17:56:44,553:INFO:display_container: 3
2022-08-01 17:56:44,561:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 17:56:44,561:INFO:create_model() successfully completed......................................
2022-08-01 17:56:44,706:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:44,706:INFO:Creating metrics dataframe
2022-08-01 17:56:44,755:INFO:Initializing Extreme Gradient Boosting
2022-08-01 17:56:44,755:INFO:Total runtime is 0.2927189548810323 minutes
2022-08-01 17:56:44,771:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:44,771:INFO:Initializing create_model()
2022-08-01 17:56:44,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:44,771:INFO:Checking exceptions
2022-08-01 17:56:44,771:INFO:Importing libraries
2022-08-01 17:56:44,771:INFO:Copying training dataset
2022-08-01 17:56:44,843:INFO:Defining folds
2022-08-01 17:56:44,843:INFO:Declaring metric variables
2022-08-01 17:56:44,859:INFO:Importing untrained model
2022-08-01 17:56:44,875:INFO:Extreme Gradient Boosting Imported successfully
2022-08-01 17:56:44,915:INFO:Starting cross validation
2022-08-01 17:56:44,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:46,188:INFO:Calculating mean and std
2022-08-01 17:56:46,196:INFO:Creating metrics dataframe
2022-08-01 17:56:46,247:INFO:Uploading results into container
2022-08-01 17:56:46,248:INFO:Uploading model into container now
2022-08-01 17:56:46,248:INFO:master_model_container: 18
2022-08-01 17:56:46,248:INFO:display_container: 3
2022-08-01 17:56:46,250:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-01 17:56:46,250:INFO:create_model() successfully completed......................................
2022-08-01 17:56:46,374:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:46,374:INFO:Creating metrics dataframe
2022-08-01 17:56:46,414:INFO:Initializing Light Gradient Boosting Machine
2022-08-01 17:56:46,414:INFO:Total runtime is 0.320371933778127 minutes
2022-08-01 17:56:46,430:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:46,430:INFO:Initializing create_model()
2022-08-01 17:56:46,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:46,430:INFO:Checking exceptions
2022-08-01 17:56:46,438:INFO:Importing libraries
2022-08-01 17:56:46,438:INFO:Copying training dataset
2022-08-01 17:56:46,510:INFO:Defining folds
2022-08-01 17:56:46,510:INFO:Declaring metric variables
2022-08-01 17:56:46,526:INFO:Importing untrained model
2022-08-01 17:56:46,542:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-01 17:56:46,574:INFO:Starting cross validation
2022-08-01 17:56:46,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:49,478:INFO:Calculating mean and std
2022-08-01 17:56:49,478:INFO:Creating metrics dataframe
2022-08-01 17:56:49,537:INFO:Uploading results into container
2022-08-01 17:56:49,537:INFO:Uploading model into container now
2022-08-01 17:56:49,537:INFO:master_model_container: 19
2022-08-01 17:56:49,537:INFO:display_container: 3
2022-08-01 17:56:49,537:INFO:LGBMRegressor(random_state=123)
2022-08-01 17:56:49,537:INFO:create_model() successfully completed......................................
2022-08-01 17:56:49,662:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:49,662:INFO:Creating metrics dataframe
2022-08-01 17:56:49,706:INFO:Initializing Dummy Regressor
2022-08-01 17:56:49,706:INFO:Total runtime is 0.37523905038833616 minutes
2022-08-01 17:56:49,730:INFO:SubProcess create_model() called ==================================
2022-08-01 17:56:49,730:INFO:Initializing create_model()
2022-08-01 17:56:49,730:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000027476EEC670>, kwargs={})
2022-08-01 17:56:49,730:INFO:Checking exceptions
2022-08-01 17:56:49,738:INFO:Importing libraries
2022-08-01 17:56:49,738:INFO:Copying training dataset
2022-08-01 17:56:49,811:INFO:Defining folds
2022-08-01 17:56:49,811:INFO:Declaring metric variables
2022-08-01 17:56:49,821:INFO:Importing untrained model
2022-08-01 17:56:49,837:INFO:Dummy Regressor Imported successfully
2022-08-01 17:56:49,877:INFO:Starting cross validation
2022-08-01 17:56:49,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-01 17:56:50,239:INFO:Calculating mean and std
2022-08-01 17:56:50,239:INFO:Creating metrics dataframe
2022-08-01 17:56:50,295:INFO:Uploading results into container
2022-08-01 17:56:50,295:INFO:Uploading model into container now
2022-08-01 17:56:50,295:INFO:master_model_container: 20
2022-08-01 17:56:50,295:INFO:display_container: 3
2022-08-01 17:56:50,295:INFO:DummyRegressor()
2022-08-01 17:56:50,295:INFO:create_model() successfully completed......................................
2022-08-01 17:56:50,413:INFO:SubProcess create_model() end ==================================
2022-08-01 17:56:50,413:INFO:Creating metrics dataframe
2022-08-01 17:56:50,495:INFO:Initializing create_model()
2022-08-01 17:56:50,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-01 17:56:50,496:INFO:Checking exceptions
2022-08-01 17:56:50,504:INFO:Importing libraries
2022-08-01 17:56:50,504:INFO:Copying training dataset
2022-08-01 17:56:50,584:INFO:Defining folds
2022-08-01 17:56:50,584:INFO:Declaring metric variables
2022-08-01 17:56:50,584:INFO:Importing untrained model
2022-08-01 17:56:50,584:INFO:Declaring custom model
2022-08-01 17:56:50,584:INFO:Gradient Boosting Regressor Imported successfully
2022-08-01 17:56:50,584:INFO:Cross validation set to False
2022-08-01 17:56:50,584:INFO:Fitting Model
2022-08-01 17:56:50,816:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 17:56:50,816:INFO:create_models() successfully completed......................................
2022-08-01 17:56:51,080:INFO:master_model_container: 20
2022-08-01 17:56:51,088:INFO:display_container: 3
2022-08-01 17:56:51,088:INFO:GradientBoostingRegressor(random_state=123)
2022-08-01 17:56:51,088:INFO:compare_models() successfully completed......................................
2022-08-01 17:56:51,345:INFO:Initializing plot_model()
2022-08-01 17:56:51,345:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, system=True)
2022-08-01 17:56:51,345:INFO:Checking exceptions
2022-08-01 17:56:51,361:INFO:Preparing display monitor
2022-08-01 17:56:51,377:INFO:Preloading libraries
2022-08-01 17:56:51,402:INFO:Copying training dataset
2022-08-01 17:56:51,402:INFO:Plot type: feature
2022-08-01 17:56:51,410:WARNING:No coef_ found. Trying feature_importances_
2022-08-01 17:56:51,980:INFO:Visual Rendered Successfully
2022-08-01 17:56:52,166:INFO:plot_model() successfully completed......................................
2022-08-01 17:56:52,326:INFO:Initializing plot_model()
2022-08-01 17:56:52,331:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002747094B520>, system=True)
2022-08-01 17:56:52,331:INFO:Checking exceptions
2022-08-01 17:56:52,336:INFO:Preparing display monitor
2022-08-01 17:56:52,348:INFO:Preloading libraries
2022-08-01 17:56:52,350:INFO:Copying training dataset
2022-08-01 17:56:52,350:INFO:Plot type: residuals
2022-08-01 17:56:52,904:INFO:Fitting Model
2022-08-01 17:56:53,009:INFO:Scoring test/hold-out set
2022-08-01 17:56:54,813:INFO:Visual Rendered Successfully
2022-08-01 17:56:55,028:INFO:plot_model() successfully completed......................................
2022-08-01 17:56:55,258:INFO:Initializing save_model()
2022-08-01 17:56:55,258:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-01 17:56:55,258:INFO:Adding model into prep_pipe
2022-08-01 17:56:55,271:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-01 17:56:55,287:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-01 17:56:55,287:INFO:save_model() successfully completed......................................
2022-08-01 17:58:52,266:INFO:Initializing load_model()
2022-08-01 17:58:52,274:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 18:01:15,832:INFO:Initializing load_model()
2022-08-01 18:01:59,368:INFO:Initializing load_model()
2022-08-01 18:02:11,992:INFO:Initializing load_model()
2022-08-01 18:02:15,394:INFO:Initializing load_model()
2022-08-01 18:02:40,454:INFO:Initializing load_model()
2022-08-01 18:02:58,630:INFO:Initializing load_model()
2022-08-01 18:06:44,137:INFO:Initializing load_model()
2022-08-01 18:06:44,137:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 18:06:59,651:INFO:Initializing load_model()
2022-08-01 18:06:59,651:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 18:06:59,838:INFO:Initializing predict_model()
2022-08-01 18:06:59,838:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002204956E1F0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x00000220432CB610>)
2022-08-01 18:06:59,838:INFO:Checking exceptions
2022-08-01 18:06:59,838:INFO:Preloading libraries
2022-08-01 18:18:05,143:INFO:Initializing load_model()
2022-08-01 18:18:05,143:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-01 18:18:05,309:INFO:Initializing predict_model()
2022-08-01 18:18:05,309:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002204956E040>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000002204966BAC0>)
2022-08-01 18:18:05,309:INFO:Checking exceptions
2022-08-01 18:18:05,317:INFO:Preloading libraries
2022-08-01 19:12:54,293:INFO:Initializing load_model()
2022-08-01 19:12:54,293:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 11:51:51,529:INFO:Preparing display monitor
2022-08-16 11:51:57,135:INFO:PyCaret RegressionExperiment
2022-08-16 11:51:57,135:INFO:Logging name: reg-default-name
2022-08-16 11:51:57,135:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 11:51:57,135:INFO:version 3.0.0
2022-08-16 11:51:57,135:INFO:Initializing setup()
2022-08-16 11:51:57,135:INFO:self.USI: a74c
2022-08-16 11:51:57,138:INFO:self.variable_keys: {'exp_id', 'seed', 'variable_keys', 'display_container', 'iterative_imputation_iters_param', 'X_test', 'USI', 'y', 'experiment__', 'X', 'target_param', 'transform_target_method_param', 'master_model_container', '_all_metrics', 'fold_generator', 'y_train', '_all_models_internal', 'imputation_classifier', '_all_models', 'log_plots_param', '_ml_usecase', 'html_param', 'fold_groups_param_full', 'fold_groups_param', 'data', 'stratify_param', 'pipeline', 'exp_name_log', 'gpu_param', 'idx', 'logging_param', 'memory', 'fold_shuffle_param', 'fold_param', 'transform_target_param', 'y_test', '_gpu_n_jobs_param', 'X_train', 'n_jobs_param', '_available_plots', 'imputation_regressor'}
2022-08-16 11:51:57,138:INFO:Checking environment
2022-08-16 11:51:57,138:INFO:python_version: 3.9.12
2022-08-16 11:51:57,138:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 11:51:57,139:INFO:machine: AMD64
2022-08-16 11:51:57,139:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 11:51:57,139:INFO:Memory: svmem(total=8419573760, available=1359663104, percent=83.9, used=7059910656, free=1359663104)
2022-08-16 11:51:57,139:INFO:Physical Core: 4
2022-08-16 11:51:57,139:INFO:Logical Core: 8
2022-08-16 11:51:57,139:INFO:Checking libraries
2022-08-16 11:51:57,139:INFO:pd==1.4.2
2022-08-16 11:51:57,139:INFO:numpy==1.21.5
2022-08-16 11:51:57,139:INFO:sklearn==1.0.2
2022-08-16 11:51:57,468:INFO:lightgbm==3.3.2
2022-08-16 11:51:57,549:INFO:xgboost==1.6.1
2022-08-16 11:51:57,549:WARNING:catboost not found
2022-08-16 11:51:57,549:WARNING:mlflow not found
2022-08-16 11:51:57,549:INFO:Set up data.
2022-08-16 11:51:57,549:INFO:Set up target column.
2022-08-16 11:51:57,549:INFO:Set up train/test split.
2022-08-16 11:51:57,559:INFO:Set up folding strategy.
2022-08-16 11:51:57,559:INFO:Assigning column types.
2022-08-16 11:51:57,568:INFO:Preparing preprocessing pipeline...
2022-08-16 11:51:57,569:INFO:Set up simple imputation.
2022-08-16 11:51:57,574:INFO:Set up encoding of ordinal features.
2022-08-16 11:51:57,582:INFO:Set up encoding of categorical features.
2022-08-16 11:51:57,759:INFO:Finished creating preprocessing pipeline.
2022-08-16 11:51:57,771:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-08-16 11:51:57,771:INFO:Creating final display dataframe.
2022-08-16 11:51:57,779:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              a74c
2022-08-16 11:51:57,779:INFO:Preparing display monitor
2022-08-16 11:51:58,140:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-16 11:51:58,373:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-16 11:51:58,382:INFO:setup() successfully completed in 1.24s...............
2022-08-16 11:51:58,600:INFO:Initializing create_model()
2022-08-16 11:51:58,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-16 11:51:58,600:INFO:Checking exceptions
2022-08-16 11:51:58,608:INFO:Preparing display monitor
2022-08-16 11:51:58,649:INFO:Importing libraries
2022-08-16 11:51:58,649:INFO:Copying training dataset
2022-08-16 11:51:58,744:INFO:Defining folds
2022-08-16 11:51:58,744:INFO:Declaring metric variables
2022-08-16 11:51:58,758:INFO:Importing untrained model
2022-08-16 11:51:58,768:INFO:Linear Regression Imported successfully
2022-08-16 11:51:58,814:INFO:Starting cross validation
2022-08-16 11:51:58,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:13,549:INFO:Calculating mean and std
2022-08-16 11:52:13,549:INFO:Creating metrics dataframe
2022-08-16 11:52:13,989:INFO:Finalizing model
2022-08-16 11:52:14,238:INFO:Uploading results into container
2022-08-16 11:52:14,238:INFO:Uploading model into container now
2022-08-16 11:52:14,259:INFO:master_model_container: 1
2022-08-16 11:52:14,262:INFO:display_container: 2
2022-08-16 11:52:14,262:INFO:LinearRegression(n_jobs=-1)
2022-08-16 11:52:14,262:INFO:create_model() successfully completed......................................
2022-08-16 11:52:14,669:INFO:Initializing compare_models()
2022-08-16 11:52:14,670:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-08-16 11:52:14,670:INFO:Checking exceptions
2022-08-16 11:52:14,670:INFO:Preparing display monitor
2022-08-16 11:52:14,670:INFO:Preparing display monitor
2022-08-16 11:52:14,727:INFO:Initializing Linear Regression
2022-08-16 11:52:14,727:INFO:Total runtime is 0.0 minutes
2022-08-16 11:52:14,748:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:14,751:INFO:Initializing create_model()
2022-08-16 11:52:14,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:14,753:INFO:Checking exceptions
2022-08-16 11:52:14,759:INFO:Importing libraries
2022-08-16 11:52:14,759:INFO:Copying training dataset
2022-08-16 11:52:14,844:INFO:Defining folds
2022-08-16 11:52:14,844:INFO:Declaring metric variables
2022-08-16 11:52:14,860:INFO:Importing untrained model
2022-08-16 11:52:14,890:INFO:Linear Regression Imported successfully
2022-08-16 11:52:14,929:INFO:Starting cross validation
2022-08-16 11:52:14,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:15,448:INFO:Calculating mean and std
2022-08-16 11:52:15,449:INFO:Creating metrics dataframe
2022-08-16 11:52:15,498:INFO:Uploading results into container
2022-08-16 11:52:15,498:INFO:Uploading model into container now
2022-08-16 11:52:15,498:INFO:master_model_container: 2
2022-08-16 11:52:15,498:INFO:display_container: 3
2022-08-16 11:52:15,499:INFO:LinearRegression(n_jobs=-1)
2022-08-16 11:52:15,499:INFO:create_model() successfully completed......................................
2022-08-16 11:52:15,606:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:15,606:INFO:Creating metrics dataframe
2022-08-16 11:52:15,639:INFO:Initializing Lasso Regression
2022-08-16 11:52:15,639:INFO:Total runtime is 0.015198846658070883 minutes
2022-08-16 11:52:15,653:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:15,655:INFO:Initializing create_model()
2022-08-16 11:52:15,655:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:15,655:INFO:Checking exceptions
2022-08-16 11:52:15,658:INFO:Importing libraries
2022-08-16 11:52:15,658:INFO:Copying training dataset
2022-08-16 11:52:15,709:INFO:Defining folds
2022-08-16 11:52:15,709:INFO:Declaring metric variables
2022-08-16 11:52:15,728:INFO:Importing untrained model
2022-08-16 11:52:15,748:INFO:Lasso Regression Imported successfully
2022-08-16 11:52:15,780:INFO:Starting cross validation
2022-08-16 11:52:15,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:16,324:INFO:Calculating mean and std
2022-08-16 11:52:16,324:INFO:Creating metrics dataframe
2022-08-16 11:52:16,369:INFO:Uploading results into container
2022-08-16 11:52:16,369:INFO:Uploading model into container now
2022-08-16 11:52:16,369:INFO:master_model_container: 3
2022-08-16 11:52:16,369:INFO:display_container: 3
2022-08-16 11:52:16,369:INFO:Lasso(random_state=123)
2022-08-16 11:52:16,369:INFO:create_model() successfully completed......................................
2022-08-16 11:52:16,478:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:16,479:INFO:Creating metrics dataframe
2022-08-16 11:52:16,507:INFO:Initializing Ridge Regression
2022-08-16 11:52:16,507:INFO:Total runtime is 0.02967027425765991 minutes
2022-08-16 11:52:16,518:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:16,518:INFO:Initializing create_model()
2022-08-16 11:52:16,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:16,518:INFO:Checking exceptions
2022-08-16 11:52:16,526:INFO:Importing libraries
2022-08-16 11:52:16,526:INFO:Copying training dataset
2022-08-16 11:52:16,590:INFO:Defining folds
2022-08-16 11:52:16,590:INFO:Declaring metric variables
2022-08-16 11:52:16,599:INFO:Importing untrained model
2022-08-16 11:52:16,618:INFO:Ridge Regression Imported successfully
2022-08-16 11:52:16,648:INFO:Starting cross validation
2022-08-16 11:52:16,650:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:17,068:INFO:Calculating mean and std
2022-08-16 11:52:17,068:INFO:Creating metrics dataframe
2022-08-16 11:52:17,157:INFO:Uploading results into container
2022-08-16 11:52:17,157:INFO:Uploading model into container now
2022-08-16 11:52:17,157:INFO:master_model_container: 4
2022-08-16 11:52:17,157:INFO:display_container: 3
2022-08-16 11:52:17,157:INFO:Ridge(random_state=123)
2022-08-16 11:52:17,157:INFO:create_model() successfully completed......................................
2022-08-16 11:52:17,369:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:17,369:INFO:Creating metrics dataframe
2022-08-16 11:52:17,428:INFO:Initializing Elastic Net
2022-08-16 11:52:17,429:INFO:Total runtime is 0.045026961962382 minutes
2022-08-16 11:52:17,448:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:17,448:INFO:Initializing create_model()
2022-08-16 11:52:17,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:17,448:INFO:Checking exceptions
2022-08-16 11:52:17,456:INFO:Importing libraries
2022-08-16 11:52:17,456:INFO:Copying training dataset
2022-08-16 11:52:17,536:INFO:Defining folds
2022-08-16 11:52:17,538:INFO:Declaring metric variables
2022-08-16 11:52:17,549:INFO:Importing untrained model
2022-08-16 11:52:17,570:INFO:Elastic Net Imported successfully
2022-08-16 11:52:17,608:INFO:Starting cross validation
2022-08-16 11:52:17,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:18,074:INFO:Calculating mean and std
2022-08-16 11:52:18,077:INFO:Creating metrics dataframe
2022-08-16 11:52:18,128:INFO:Uploading results into container
2022-08-16 11:52:18,128:INFO:Uploading model into container now
2022-08-16 11:52:18,128:INFO:master_model_container: 5
2022-08-16 11:52:18,128:INFO:display_container: 3
2022-08-16 11:52:18,128:INFO:ElasticNet(random_state=123)
2022-08-16 11:52:18,128:INFO:create_model() successfully completed......................................
2022-08-16 11:52:18,269:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:18,269:INFO:Creating metrics dataframe
2022-08-16 11:52:18,308:INFO:Initializing Least Angle Regression
2022-08-16 11:52:18,309:INFO:Total runtime is 0.059695478280385336 minutes
2022-08-16 11:52:18,318:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:18,318:INFO:Initializing create_model()
2022-08-16 11:52:18,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:18,318:INFO:Checking exceptions
2022-08-16 11:52:18,329:INFO:Importing libraries
2022-08-16 11:52:18,329:INFO:Copying training dataset
2022-08-16 11:52:18,394:INFO:Defining folds
2022-08-16 11:52:18,395:INFO:Declaring metric variables
2022-08-16 11:52:18,409:INFO:Importing untrained model
2022-08-16 11:52:18,418:INFO:Least Angle Regression Imported successfully
2022-08-16 11:52:18,459:INFO:Starting cross validation
2022-08-16 11:52:18,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:18,868:INFO:Calculating mean and std
2022-08-16 11:52:18,868:INFO:Creating metrics dataframe
2022-08-16 11:52:18,924:INFO:Uploading results into container
2022-08-16 11:52:18,924:INFO:Uploading model into container now
2022-08-16 11:52:18,924:INFO:master_model_container: 6
2022-08-16 11:52:18,924:INFO:display_container: 3
2022-08-16 11:52:18,928:INFO:Lars(random_state=123)
2022-08-16 11:52:18,928:INFO:create_model() successfully completed......................................
2022-08-16 11:52:19,046:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:19,047:INFO:Creating metrics dataframe
2022-08-16 11:52:19,079:INFO:Initializing Lasso Least Angle Regression
2022-08-16 11:52:19,079:INFO:Total runtime is 0.0725361466407776 minutes
2022-08-16 11:52:19,088:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:19,088:INFO:Initializing create_model()
2022-08-16 11:52:19,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:19,088:INFO:Checking exceptions
2022-08-16 11:52:19,097:INFO:Importing libraries
2022-08-16 11:52:19,098:INFO:Copying training dataset
2022-08-16 11:52:19,158:INFO:Defining folds
2022-08-16 11:52:19,158:INFO:Declaring metric variables
2022-08-16 11:52:19,170:INFO:Importing untrained model
2022-08-16 11:52:19,185:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 11:52:19,218:INFO:Starting cross validation
2022-08-16 11:52:19,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:19,613:INFO:Calculating mean and std
2022-08-16 11:52:19,613:INFO:Creating metrics dataframe
2022-08-16 11:52:19,661:INFO:Uploading results into container
2022-08-16 11:52:19,661:INFO:Uploading model into container now
2022-08-16 11:52:19,661:INFO:master_model_container: 7
2022-08-16 11:52:19,661:INFO:display_container: 3
2022-08-16 11:52:19,661:INFO:LassoLars(random_state=123)
2022-08-16 11:52:19,661:INFO:create_model() successfully completed......................................
2022-08-16 11:52:19,774:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:19,778:INFO:Creating metrics dataframe
2022-08-16 11:52:19,809:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 11:52:19,809:INFO:Total runtime is 0.08470304807027182 minutes
2022-08-16 11:52:19,821:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:19,821:INFO:Initializing create_model()
2022-08-16 11:52:19,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:19,821:INFO:Checking exceptions
2022-08-16 11:52:19,828:INFO:Importing libraries
2022-08-16 11:52:19,828:INFO:Copying training dataset
2022-08-16 11:52:19,886:INFO:Defining folds
2022-08-16 11:52:19,888:INFO:Declaring metric variables
2022-08-16 11:52:19,898:INFO:Importing untrained model
2022-08-16 11:52:19,910:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 11:52:19,947:INFO:Starting cross validation
2022-08-16 11:52:19,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:20,298:INFO:Calculating mean and std
2022-08-16 11:52:20,299:INFO:Creating metrics dataframe
2022-08-16 11:52:20,337:INFO:Uploading results into container
2022-08-16 11:52:20,337:INFO:Uploading model into container now
2022-08-16 11:52:20,337:INFO:master_model_container: 8
2022-08-16 11:52:20,337:INFO:display_container: 3
2022-08-16 11:52:20,337:INFO:OrthogonalMatchingPursuit()
2022-08-16 11:52:20,337:INFO:create_model() successfully completed......................................
2022-08-16 11:52:20,450:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:20,450:INFO:Creating metrics dataframe
2022-08-16 11:52:20,478:INFO:Initializing Bayesian Ridge
2022-08-16 11:52:20,478:INFO:Total runtime is 0.09584469795227052 minutes
2022-08-16 11:52:20,490:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:20,490:INFO:Initializing create_model()
2022-08-16 11:52:20,493:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:20,493:INFO:Checking exceptions
2022-08-16 11:52:20,498:INFO:Importing libraries
2022-08-16 11:52:20,498:INFO:Copying training dataset
2022-08-16 11:52:20,551:INFO:Defining folds
2022-08-16 11:52:20,551:INFO:Declaring metric variables
2022-08-16 11:52:20,568:INFO:Importing untrained model
2022-08-16 11:52:20,579:INFO:Bayesian Ridge Imported successfully
2022-08-16 11:52:20,608:INFO:Starting cross validation
2022-08-16 11:52:20,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:20,988:INFO:Calculating mean and std
2022-08-16 11:52:20,993:INFO:Creating metrics dataframe
2022-08-16 11:52:21,040:INFO:Uploading results into container
2022-08-16 11:52:21,040:INFO:Uploading model into container now
2022-08-16 11:52:21,040:INFO:master_model_container: 9
2022-08-16 11:52:21,040:INFO:display_container: 3
2022-08-16 11:52:21,040:INFO:BayesianRidge()
2022-08-16 11:52:21,040:INFO:create_model() successfully completed......................................
2022-08-16 11:52:21,153:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:21,153:INFO:Creating metrics dataframe
2022-08-16 11:52:21,189:INFO:Initializing Passive Aggressive Regressor
2022-08-16 11:52:21,189:INFO:Total runtime is 0.10769915183385215 minutes
2022-08-16 11:52:21,201:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:21,201:INFO:Initializing create_model()
2022-08-16 11:52:21,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:21,201:INFO:Checking exceptions
2022-08-16 11:52:21,209:INFO:Importing libraries
2022-08-16 11:52:21,209:INFO:Copying training dataset
2022-08-16 11:52:21,293:INFO:Defining folds
2022-08-16 11:52:21,298:INFO:Declaring metric variables
2022-08-16 11:52:21,317:INFO:Importing untrained model
2022-08-16 11:52:21,331:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 11:52:21,356:INFO:Starting cross validation
2022-08-16 11:52:21,356:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:21,778:INFO:Calculating mean and std
2022-08-16 11:52:21,779:INFO:Creating metrics dataframe
2022-08-16 11:52:21,822:INFO:Uploading results into container
2022-08-16 11:52:21,822:INFO:Uploading model into container now
2022-08-16 11:52:21,822:INFO:master_model_container: 10
2022-08-16 11:52:21,822:INFO:display_container: 3
2022-08-16 11:52:21,822:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 11:52:21,822:INFO:create_model() successfully completed......................................
2022-08-16 11:52:21,930:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:21,930:INFO:Creating metrics dataframe
2022-08-16 11:52:21,970:INFO:Initializing Huber Regressor
2022-08-16 11:52:21,970:INFO:Total runtime is 0.12071916262308757 minutes
2022-08-16 11:52:21,986:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:21,988:INFO:Initializing create_model()
2022-08-16 11:52:21,988:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:21,988:INFO:Checking exceptions
2022-08-16 11:52:21,988:INFO:Importing libraries
2022-08-16 11:52:21,988:INFO:Copying training dataset
2022-08-16 11:52:22,068:INFO:Defining folds
2022-08-16 11:52:22,069:INFO:Declaring metric variables
2022-08-16 11:52:22,084:INFO:Importing untrained model
2022-08-16 11:52:22,106:INFO:Huber Regressor Imported successfully
2022-08-16 11:52:22,139:INFO:Starting cross validation
2022-08-16 11:52:22,141:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:22,738:INFO:Calculating mean and std
2022-08-16 11:52:22,739:INFO:Creating metrics dataframe
2022-08-16 11:52:22,789:INFO:Uploading results into container
2022-08-16 11:52:22,789:INFO:Uploading model into container now
2022-08-16 11:52:22,789:INFO:master_model_container: 11
2022-08-16 11:52:22,789:INFO:display_container: 3
2022-08-16 11:52:22,789:INFO:HuberRegressor()
2022-08-16 11:52:22,789:INFO:create_model() successfully completed......................................
2022-08-16 11:52:22,902:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:22,902:INFO:Creating metrics dataframe
2022-08-16 11:52:22,933:INFO:Initializing K Neighbors Regressor
2022-08-16 11:52:22,933:INFO:Total runtime is 0.13677616914113364 minutes
2022-08-16 11:52:22,948:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:22,950:INFO:Initializing create_model()
2022-08-16 11:52:22,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:22,950:INFO:Checking exceptions
2022-08-16 11:52:22,950:INFO:Importing libraries
2022-08-16 11:52:22,950:INFO:Copying training dataset
2022-08-16 11:52:23,000:INFO:Defining folds
2022-08-16 11:52:23,000:INFO:Declaring metric variables
2022-08-16 11:52:23,015:INFO:Importing untrained model
2022-08-16 11:52:23,030:INFO:K Neighbors Regressor Imported successfully
2022-08-16 11:52:23,069:INFO:Starting cross validation
2022-08-16 11:52:23,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:23,509:INFO:Calculating mean and std
2022-08-16 11:52:23,510:INFO:Creating metrics dataframe
2022-08-16 11:52:23,558:INFO:Uploading results into container
2022-08-16 11:52:23,558:INFO:Uploading model into container now
2022-08-16 11:52:23,558:INFO:master_model_container: 12
2022-08-16 11:52:23,558:INFO:display_container: 3
2022-08-16 11:52:23,558:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 11:52:23,558:INFO:create_model() successfully completed......................................
2022-08-16 11:52:23,670:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:23,670:INFO:Creating metrics dataframe
2022-08-16 11:52:23,704:INFO:Initializing Decision Tree Regressor
2022-08-16 11:52:23,707:INFO:Total runtime is 0.1496714433034261 minutes
2022-08-16 11:52:23,719:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:23,720:INFO:Initializing create_model()
2022-08-16 11:52:23,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:23,720:INFO:Checking exceptions
2022-08-16 11:52:23,720:INFO:Importing libraries
2022-08-16 11:52:23,720:INFO:Copying training dataset
2022-08-16 11:52:23,777:INFO:Defining folds
2022-08-16 11:52:23,777:INFO:Declaring metric variables
2022-08-16 11:52:23,789:INFO:Importing untrained model
2022-08-16 11:52:23,805:INFO:Decision Tree Regressor Imported successfully
2022-08-16 11:52:23,841:INFO:Starting cross validation
2022-08-16 11:52:23,841:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:24,238:INFO:Calculating mean and std
2022-08-16 11:52:24,238:INFO:Creating metrics dataframe
2022-08-16 11:52:24,298:INFO:Uploading results into container
2022-08-16 11:52:24,298:INFO:Uploading model into container now
2022-08-16 11:52:24,298:INFO:master_model_container: 13
2022-08-16 11:52:24,298:INFO:display_container: 3
2022-08-16 11:52:24,298:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 11:52:24,298:INFO:create_model() successfully completed......................................
2022-08-16 11:52:24,407:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:24,407:INFO:Creating metrics dataframe
2022-08-16 11:52:24,439:INFO:Initializing Random Forest Regressor
2022-08-16 11:52:24,439:INFO:Total runtime is 0.16186937888463337 minutes
2022-08-16 11:52:24,447:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:24,455:INFO:Initializing create_model()
2022-08-16 11:52:24,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:24,456:INFO:Checking exceptions
2022-08-16 11:52:24,459:INFO:Importing libraries
2022-08-16 11:52:24,459:INFO:Copying training dataset
2022-08-16 11:52:24,519:INFO:Defining folds
2022-08-16 11:52:24,519:INFO:Declaring metric variables
2022-08-16 11:52:24,532:INFO:Importing untrained model
2022-08-16 11:52:24,550:INFO:Random Forest Regressor Imported successfully
2022-08-16 11:52:24,578:INFO:Starting cross validation
2022-08-16 11:52:24,579:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:26,068:INFO:Calculating mean and std
2022-08-16 11:52:26,068:INFO:Creating metrics dataframe
2022-08-16 11:52:26,118:INFO:Uploading results into container
2022-08-16 11:52:26,119:INFO:Uploading model into container now
2022-08-16 11:52:26,119:INFO:master_model_container: 14
2022-08-16 11:52:26,119:INFO:display_container: 3
2022-08-16 11:52:26,119:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 11:52:26,119:INFO:create_model() successfully completed......................................
2022-08-16 11:52:26,231:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:26,231:INFO:Creating metrics dataframe
2022-08-16 11:52:26,264:INFO:Initializing Extra Trees Regressor
2022-08-16 11:52:26,264:INFO:Total runtime is 0.19228182236353555 minutes
2022-08-16 11:52:26,271:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:26,271:INFO:Initializing create_model()
2022-08-16 11:52:26,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:26,277:INFO:Checking exceptions
2022-08-16 11:52:26,279:INFO:Importing libraries
2022-08-16 11:52:26,279:INFO:Copying training dataset
2022-08-16 11:52:26,351:INFO:Defining folds
2022-08-16 11:52:26,351:INFO:Declaring metric variables
2022-08-16 11:52:26,367:INFO:Importing untrained model
2022-08-16 11:52:26,383:INFO:Extra Trees Regressor Imported successfully
2022-08-16 11:52:26,419:INFO:Starting cross validation
2022-08-16 11:52:26,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:27,795:INFO:Calculating mean and std
2022-08-16 11:52:27,795:INFO:Creating metrics dataframe
2022-08-16 11:52:27,838:INFO:Uploading results into container
2022-08-16 11:52:27,838:INFO:Uploading model into container now
2022-08-16 11:52:27,838:INFO:master_model_container: 15
2022-08-16 11:52:27,838:INFO:display_container: 3
2022-08-16 11:52:27,838:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 11:52:27,838:INFO:create_model() successfully completed......................................
2022-08-16 11:52:27,956:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:27,956:INFO:Creating metrics dataframe
2022-08-16 11:52:27,988:INFO:Initializing AdaBoost Regressor
2022-08-16 11:52:27,989:INFO:Total runtime is 0.2210326115290324 minutes
2022-08-16 11:52:27,996:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:27,996:INFO:Initializing create_model()
2022-08-16 11:52:27,996:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:27,996:INFO:Checking exceptions
2022-08-16 11:52:28,004:INFO:Importing libraries
2022-08-16 11:52:28,004:INFO:Copying training dataset
2022-08-16 11:52:28,052:INFO:Defining folds
2022-08-16 11:52:28,052:INFO:Declaring metric variables
2022-08-16 11:52:28,066:INFO:Importing untrained model
2022-08-16 11:52:28,088:INFO:AdaBoost Regressor Imported successfully
2022-08-16 11:52:28,122:INFO:Starting cross validation
2022-08-16 11:52:28,126:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:28,578:INFO:Calculating mean and std
2022-08-16 11:52:28,578:INFO:Creating metrics dataframe
2022-08-16 11:52:28,632:INFO:Uploading results into container
2022-08-16 11:52:28,632:INFO:Uploading model into container now
2022-08-16 11:52:28,632:INFO:master_model_container: 16
2022-08-16 11:52:28,632:INFO:display_container: 3
2022-08-16 11:52:28,632:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 11:52:28,632:INFO:create_model() successfully completed......................................
2022-08-16 11:52:28,738:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:28,738:INFO:Creating metrics dataframe
2022-08-16 11:52:28,768:INFO:Initializing Gradient Boosting Regressor
2022-08-16 11:52:28,768:INFO:Total runtime is 0.23402212460835775 minutes
2022-08-16 11:52:28,789:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:28,789:INFO:Initializing create_model()
2022-08-16 11:52:28,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:28,789:INFO:Checking exceptions
2022-08-16 11:52:28,796:INFO:Importing libraries
2022-08-16 11:52:28,796:INFO:Copying training dataset
2022-08-16 11:52:28,848:INFO:Defining folds
2022-08-16 11:52:28,849:INFO:Declaring metric variables
2022-08-16 11:52:28,859:INFO:Importing untrained model
2022-08-16 11:52:28,874:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 11:52:28,919:INFO:Starting cross validation
2022-08-16 11:52:28,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:29,809:INFO:Calculating mean and std
2022-08-16 11:52:29,817:INFO:Creating metrics dataframe
2022-08-16 11:52:29,929:INFO:Uploading results into container
2022-08-16 11:52:29,929:INFO:Uploading model into container now
2022-08-16 11:52:29,929:INFO:master_model_container: 17
2022-08-16 11:52:29,929:INFO:display_container: 3
2022-08-16 11:52:29,936:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 11:52:29,936:INFO:create_model() successfully completed......................................
2022-08-16 11:52:30,139:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:30,139:INFO:Creating metrics dataframe
2022-08-16 11:52:30,186:INFO:Initializing Extreme Gradient Boosting
2022-08-16 11:52:30,186:INFO:Total runtime is 0.25765666166941326 minutes
2022-08-16 11:52:30,209:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:30,209:INFO:Initializing create_model()
2022-08-16 11:52:30,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:30,209:INFO:Checking exceptions
2022-08-16 11:52:30,216:INFO:Importing libraries
2022-08-16 11:52:30,216:INFO:Copying training dataset
2022-08-16 11:52:30,300:INFO:Defining folds
2022-08-16 11:52:30,300:INFO:Declaring metric variables
2022-08-16 11:52:30,319:INFO:Importing untrained model
2022-08-16 11:52:30,338:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 11:52:30,380:INFO:Starting cross validation
2022-08-16 11:52:30,380:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:31,610:INFO:Calculating mean and std
2022-08-16 11:52:31,616:INFO:Creating metrics dataframe
2022-08-16 11:52:31,672:INFO:Uploading results into container
2022-08-16 11:52:31,672:INFO:Uploading model into container now
2022-08-16 11:52:31,678:INFO:master_model_container: 18
2022-08-16 11:52:31,678:INFO:display_container: 3
2022-08-16 11:52:31,679:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 11:52:31,679:INFO:create_model() successfully completed......................................
2022-08-16 11:52:31,783:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:31,783:INFO:Creating metrics dataframe
2022-08-16 11:52:31,819:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 11:52:31,819:INFO:Total runtime is 0.28486795028050743 minutes
2022-08-16 11:52:31,827:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:31,827:INFO:Initializing create_model()
2022-08-16 11:52:31,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:31,827:INFO:Checking exceptions
2022-08-16 11:52:31,835:INFO:Importing libraries
2022-08-16 11:52:31,835:INFO:Copying training dataset
2022-08-16 11:52:31,883:INFO:Defining folds
2022-08-16 11:52:31,883:INFO:Declaring metric variables
2022-08-16 11:52:31,900:INFO:Importing untrained model
2022-08-16 11:52:31,925:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 11:52:31,964:INFO:Starting cross validation
2022-08-16 11:52:31,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:35,162:INFO:Calculating mean and std
2022-08-16 11:52:35,162:INFO:Creating metrics dataframe
2022-08-16 11:52:35,205:INFO:Uploading results into container
2022-08-16 11:52:35,205:INFO:Uploading model into container now
2022-08-16 11:52:35,205:INFO:master_model_container: 19
2022-08-16 11:52:35,205:INFO:display_container: 3
2022-08-16 11:52:35,208:INFO:LGBMRegressor(random_state=123)
2022-08-16 11:52:35,209:INFO:create_model() successfully completed......................................
2022-08-16 11:52:35,309:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:35,309:INFO:Creating metrics dataframe
2022-08-16 11:52:35,338:INFO:Initializing Dummy Regressor
2022-08-16 11:52:35,338:INFO:Total runtime is 0.3435119907061259 minutes
2022-08-16 11:52:35,347:INFO:SubProcess create_model() called ==================================
2022-08-16 11:52:35,347:INFO:Initializing create_model()
2022-08-16 11:52:35,347:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x000001E084C79130>, kwargs={})
2022-08-16 11:52:35,347:INFO:Checking exceptions
2022-08-16 11:52:35,355:INFO:Importing libraries
2022-08-16 11:52:35,355:INFO:Copying training dataset
2022-08-16 11:52:35,422:INFO:Defining folds
2022-08-16 11:52:35,422:INFO:Declaring metric variables
2022-08-16 11:52:35,439:INFO:Importing untrained model
2022-08-16 11:52:35,454:INFO:Dummy Regressor Imported successfully
2022-08-16 11:52:35,489:INFO:Starting cross validation
2022-08-16 11:52:35,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 11:52:35,817:INFO:Calculating mean and std
2022-08-16 11:52:35,817:INFO:Creating metrics dataframe
2022-08-16 11:52:35,865:INFO:Uploading results into container
2022-08-16 11:52:35,865:INFO:Uploading model into container now
2022-08-16 11:52:35,865:INFO:master_model_container: 20
2022-08-16 11:52:35,865:INFO:display_container: 3
2022-08-16 11:52:35,869:INFO:DummyRegressor()
2022-08-16 11:52:35,869:INFO:create_model() successfully completed......................................
2022-08-16 11:52:35,968:INFO:SubProcess create_model() end ==================================
2022-08-16 11:52:35,968:INFO:Creating metrics dataframe
2022-08-16 11:52:36,029:INFO:Initializing create_model()
2022-08-16 11:52:36,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-16 11:52:36,029:INFO:Checking exceptions
2022-08-16 11:52:36,029:INFO:Importing libraries
2022-08-16 11:52:36,029:INFO:Copying training dataset
2022-08-16 11:52:36,092:INFO:Defining folds
2022-08-16 11:52:36,092:INFO:Declaring metric variables
2022-08-16 11:52:36,092:INFO:Importing untrained model
2022-08-16 11:52:36,098:INFO:Declaring custom model
2022-08-16 11:52:36,100:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 11:52:36,100:INFO:Cross validation set to False
2022-08-16 11:52:36,100:INFO:Fitting Model
2022-08-16 11:52:36,299:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 11:52:36,299:INFO:create_models() successfully completed......................................
2022-08-16 11:52:36,572:INFO:master_model_container: 20
2022-08-16 11:52:36,572:INFO:display_container: 3
2022-08-16 11:52:36,572:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 11:52:36,572:INFO:compare_models() successfully completed......................................
2022-08-16 11:52:36,910:INFO:Initializing plot_model()
2022-08-16 11:52:36,910:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, system=True)
2022-08-16 11:52:36,910:INFO:Checking exceptions
2022-08-16 11:52:36,918:INFO:Preparing display monitor
2022-08-16 11:52:36,929:INFO:Preloading libraries
2022-08-16 11:52:36,950:INFO:Copying training dataset
2022-08-16 11:52:36,950:INFO:Plot type: feature
2022-08-16 11:52:36,950:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 11:52:37,584:INFO:Visual Rendered Successfully
2022-08-16 11:52:37,786:INFO:plot_model() successfully completed......................................
2022-08-16 11:52:37,998:INFO:Initializing plot_model()
2022-08-16 11:52:37,998:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E084C85160>, system=True)
2022-08-16 11:52:37,998:INFO:Checking exceptions
2022-08-16 11:52:38,006:INFO:Preparing display monitor
2022-08-16 11:52:38,023:INFO:Preloading libraries
2022-08-16 11:52:38,030:INFO:Copying training dataset
2022-08-16 11:52:38,030:INFO:Plot type: residuals
2022-08-16 11:52:38,600:INFO:Fitting Model
2022-08-16 11:52:38,714:INFO:Scoring test/hold-out set
2022-08-16 11:52:40,200:INFO:Visual Rendered Successfully
2022-08-16 11:52:40,418:INFO:plot_model() successfully completed......................................
2022-08-16 11:52:40,598:INFO:Initializing save_model()
2022-08-16 11:52:40,599:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 11:52:40,599:INFO:Adding model into prep_pipe
2022-08-16 11:52:40,643:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 11:52:40,659:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 11:52:40,659:INFO:save_model() successfully completed......................................
2022-08-16 11:54:37,725:INFO:Initializing load_model()
2022-08-16 11:54:37,733:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 11:54:54,626:INFO:Initializing load_model()
2022-08-16 11:54:54,626:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 11:54:56,067:INFO:Initializing load_model()
2022-08-16 11:54:56,067:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 11:54:57,918:INFO:Initializing load_model()
2022-08-16 11:54:57,918:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 11:54:58,119:INFO:Initializing predict_model()
2022-08-16 11:54:58,119:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAEE159E50>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAF427F730>)
2022-08-16 11:54:58,119:INFO:Checking exceptions
2022-08-16 11:54:58,119:INFO:Preloading libraries
2022-08-16 12:26:54,539:INFO:Preparing display monitor
2022-08-16 12:26:58,714:INFO:PyCaret RegressionExperiment
2022-08-16 12:26:58,714:INFO:Logging name: reg-default-name
2022-08-16 12:26:58,714:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 12:26:58,714:INFO:version 3.0.0
2022-08-16 12:26:58,714:INFO:Initializing setup()
2022-08-16 12:26:58,714:INFO:self.USI: 3473
2022-08-16 12:26:58,714:INFO:self.variable_keys: {'_all_models', 'exp_id', 'fold_param', 'experiment__', 'iterative_imputation_iters_param', '_all_models_internal', 'data', 'display_container', 'y_train', 'variable_keys', 'transform_target_param', 'imputation_classifier', 'fold_shuffle_param', '_available_plots', 'gpu_param', 'n_jobs_param', 'fold_generator', '_ml_usecase', 'X_test', 'html_param', 'USI', 'fold_groups_param_full', 'X', 'log_plots_param', 'master_model_container', 'pipeline', 'memory', 'X_train', 'logging_param', 'target_param', 'imputation_regressor', 'stratify_param', 'transform_target_method_param', 'fold_groups_param', 'idx', '_gpu_n_jobs_param', 'exp_name_log', 'seed', '_all_metrics', 'y_test', 'y'}
2022-08-16 12:26:58,714:INFO:Checking environment
2022-08-16 12:26:58,714:INFO:python_version: 3.9.12
2022-08-16 12:26:58,714:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 12:26:58,714:INFO:machine: AMD64
2022-08-16 12:26:58,714:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 12:26:58,714:INFO:Memory: svmem(total=8419573760, available=1284784128, percent=84.7, used=7134789632, free=1284784128)
2022-08-16 12:26:58,714:INFO:Physical Core: 4
2022-08-16 12:26:58,714:INFO:Logical Core: 8
2022-08-16 12:26:58,714:INFO:Checking libraries
2022-08-16 12:26:58,714:INFO:pd==1.4.2
2022-08-16 12:26:58,714:INFO:numpy==1.21.5
2022-08-16 12:26:58,714:INFO:sklearn==1.0.2
2022-08-16 12:26:59,073:INFO:lightgbm==3.3.2
2022-08-16 12:26:59,120:INFO:xgboost==1.6.1
2022-08-16 12:26:59,120:WARNING:catboost not found
2022-08-16 12:26:59,120:WARNING:mlflow not found
2022-08-16 12:26:59,120:INFO:Set up data.
2022-08-16 12:26:59,128:INFO:Set up target column.
2022-08-16 12:26:59,128:INFO:Set up train/test split.
2022-08-16 12:26:59,128:INFO:Set up folding strategy.
2022-08-16 12:26:59,128:INFO:Assigning column types.
2022-08-16 12:26:59,137:INFO:Preparing preprocessing pipeline...
2022-08-16 12:26:59,137:INFO:Set up simple imputation.
2022-08-16 12:26:59,146:INFO:Set up encoding of ordinal features.
2022-08-16 12:26:59,157:INFO:Set up encoding of categorical features.
2022-08-16 12:26:59,241:INFO:Finished creating preprocessing pipeline.
2022-08-16 12:26:59,249:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))])
2022-08-16 12:26:59,249:INFO:Creating final display dataframe.
2022-08-16 12:26:59,255:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        regression
3                 Data shape         (1338, 7)
4           Train data shape          (936, 7)
5            Test data shape          (402, 7)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15            Fold Generator             KFold
16               Fold Number                10
17                  CPU Jobs                -1
18            Log Experiment             False
19           Experiment Name  reg-default-name
20                       USI              3473
2022-08-16 12:26:59,255:INFO:Preparing display monitor
2022-08-16 12:26:59,592:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-16 12:26:59,804:WARNING:Couldn't import catboost.CatBoostRegressor
2022-08-16 12:26:59,817:INFO:setup() successfully completed in 1.09s...............
2022-08-16 12:27:00,150:INFO:Initializing create_model()
2022-08-16 12:27:00,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-16 12:27:00,150:INFO:Checking exceptions
2022-08-16 12:27:00,155:INFO:Preparing display monitor
2022-08-16 12:27:00,197:INFO:Importing libraries
2022-08-16 12:27:00,197:INFO:Copying training dataset
2022-08-16 12:27:00,268:INFO:Defining folds
2022-08-16 12:27:00,268:INFO:Declaring metric variables
2022-08-16 12:27:00,285:INFO:Importing untrained model
2022-08-16 12:27:00,326:INFO:Linear Regression Imported successfully
2022-08-16 12:27:00,368:INFO:Starting cross validation
2022-08-16 12:27:00,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:16,404:INFO:Calculating mean and std
2022-08-16 12:27:16,404:INFO:Creating metrics dataframe
2022-08-16 12:27:16,962:INFO:Finalizing model
2022-08-16 12:27:17,030:INFO:Uploading results into container
2022-08-16 12:27:17,038:INFO:Uploading model into container now
2022-08-16 12:27:17,062:INFO:master_model_container: 1
2022-08-16 12:27:17,062:INFO:display_container: 2
2022-08-16 12:27:17,062:INFO:LinearRegression(n_jobs=-1)
2022-08-16 12:27:17,062:INFO:create_model() successfully completed......................................
2022-08-16 12:27:17,477:INFO:Initializing compare_models()
2022-08-16 12:27:17,477:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, display=None, exclude=None)
2022-08-16 12:27:17,477:INFO:Checking exceptions
2022-08-16 12:27:17,485:INFO:Preparing display monitor
2022-08-16 12:27:17,485:INFO:Preparing display monitor
2022-08-16 12:27:17,582:INFO:Initializing Linear Regression
2022-08-16 12:27:17,582:INFO:Total runtime is 0.0 minutes
2022-08-16 12:27:17,603:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:17,604:INFO:Initializing create_model()
2022-08-16 12:27:17,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:17,605:INFO:Checking exceptions
2022-08-16 12:27:17,611:INFO:Importing libraries
2022-08-16 12:27:17,611:INFO:Copying training dataset
2022-08-16 12:27:17,694:INFO:Defining folds
2022-08-16 12:27:17,694:INFO:Declaring metric variables
2022-08-16 12:27:17,711:INFO:Importing untrained model
2022-08-16 12:27:17,734:INFO:Linear Regression Imported successfully
2022-08-16 12:27:17,771:INFO:Starting cross validation
2022-08-16 12:27:17,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:18,545:INFO:Calculating mean and std
2022-08-16 12:27:18,545:INFO:Creating metrics dataframe
2022-08-16 12:27:18,676:INFO:Uploading results into container
2022-08-16 12:27:18,676:INFO:Uploading model into container now
2022-08-16 12:27:18,676:INFO:master_model_container: 2
2022-08-16 12:27:18,676:INFO:display_container: 3
2022-08-16 12:27:18,676:INFO:LinearRegression(n_jobs=-1)
2022-08-16 12:27:18,676:INFO:create_model() successfully completed......................................
2022-08-16 12:27:18,836:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:18,836:INFO:Creating metrics dataframe
2022-08-16 12:27:18,895:INFO:Initializing Lasso Regression
2022-08-16 12:27:18,895:INFO:Total runtime is 0.021885927518208823 minutes
2022-08-16 12:27:18,906:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:18,906:INFO:Initializing create_model()
2022-08-16 12:27:18,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:18,906:INFO:Checking exceptions
2022-08-16 12:27:18,906:INFO:Importing libraries
2022-08-16 12:27:18,906:INFO:Copying training dataset
2022-08-16 12:27:19,004:INFO:Defining folds
2022-08-16 12:27:19,004:INFO:Declaring metric variables
2022-08-16 12:27:19,016:INFO:Importing untrained model
2022-08-16 12:27:19,025:INFO:Lasso Regression Imported successfully
2022-08-16 12:27:19,056:INFO:Starting cross validation
2022-08-16 12:27:19,064:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:19,474:INFO:Calculating mean and std
2022-08-16 12:27:19,476:INFO:Creating metrics dataframe
2022-08-16 12:27:19,520:INFO:Uploading results into container
2022-08-16 12:27:19,520:INFO:Uploading model into container now
2022-08-16 12:27:19,520:INFO:master_model_container: 3
2022-08-16 12:27:19,520:INFO:display_container: 3
2022-08-16 12:27:19,520:INFO:Lasso(random_state=123)
2022-08-16 12:27:19,520:INFO:create_model() successfully completed......................................
2022-08-16 12:27:19,666:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:19,666:INFO:Creating metrics dataframe
2022-08-16 12:27:19,699:INFO:Initializing Ridge Regression
2022-08-16 12:27:19,699:INFO:Total runtime is 0.035275216897328696 minutes
2022-08-16 12:27:19,709:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:19,709:INFO:Initializing create_model()
2022-08-16 12:27:19,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:19,716:INFO:Checking exceptions
2022-08-16 12:27:19,717:INFO:Importing libraries
2022-08-16 12:27:19,717:INFO:Copying training dataset
2022-08-16 12:27:19,798:INFO:Defining folds
2022-08-16 12:27:19,798:INFO:Declaring metric variables
2022-08-16 12:27:19,820:INFO:Importing untrained model
2022-08-16 12:27:19,843:INFO:Ridge Regression Imported successfully
2022-08-16 12:27:19,907:INFO:Starting cross validation
2022-08-16 12:27:19,907:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:20,457:INFO:Calculating mean and std
2022-08-16 12:27:20,457:INFO:Creating metrics dataframe
2022-08-16 12:27:20,508:INFO:Uploading results into container
2022-08-16 12:27:20,508:INFO:Uploading model into container now
2022-08-16 12:27:20,508:INFO:master_model_container: 4
2022-08-16 12:27:20,508:INFO:display_container: 3
2022-08-16 12:27:20,508:INFO:Ridge(random_state=123)
2022-08-16 12:27:20,508:INFO:create_model() successfully completed......................................
2022-08-16 12:27:20,611:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:20,611:INFO:Creating metrics dataframe
2022-08-16 12:27:20,646:INFO:Initializing Elastic Net
2022-08-16 12:27:20,646:INFO:Total runtime is 0.05107367436091105 minutes
2022-08-16 12:27:20,680:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:20,681:INFO:Initializing create_model()
2022-08-16 12:27:20,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:20,681:INFO:Checking exceptions
2022-08-16 12:27:20,684:INFO:Importing libraries
2022-08-16 12:27:20,684:INFO:Copying training dataset
2022-08-16 12:27:20,749:INFO:Defining folds
2022-08-16 12:27:20,749:INFO:Declaring metric variables
2022-08-16 12:27:20,766:INFO:Importing untrained model
2022-08-16 12:27:20,776:INFO:Elastic Net Imported successfully
2022-08-16 12:27:20,816:INFO:Starting cross validation
2022-08-16 12:27:20,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:21,397:INFO:Calculating mean and std
2022-08-16 12:27:21,397:INFO:Creating metrics dataframe
2022-08-16 12:27:21,475:INFO:Uploading results into container
2022-08-16 12:27:21,475:INFO:Uploading model into container now
2022-08-16 12:27:21,475:INFO:master_model_container: 5
2022-08-16 12:27:21,475:INFO:display_container: 3
2022-08-16 12:27:21,475:INFO:ElasticNet(random_state=123)
2022-08-16 12:27:21,475:INFO:create_model() successfully completed......................................
2022-08-16 12:27:21,615:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:21,615:INFO:Creating metrics dataframe
2022-08-16 12:27:21,647:INFO:Initializing Least Angle Regression
2022-08-16 12:27:21,647:INFO:Total runtime is 0.06774684190750122 minutes
2022-08-16 12:27:21,665:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:21,665:INFO:Initializing create_model()
2022-08-16 12:27:21,665:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:21,665:INFO:Checking exceptions
2022-08-16 12:27:21,675:INFO:Importing libraries
2022-08-16 12:27:21,675:INFO:Copying training dataset
2022-08-16 12:27:21,761:INFO:Defining folds
2022-08-16 12:27:21,761:INFO:Declaring metric variables
2022-08-16 12:27:21,769:INFO:Importing untrained model
2022-08-16 12:27:21,785:INFO:Least Angle Regression Imported successfully
2022-08-16 12:27:21,823:INFO:Starting cross validation
2022-08-16 12:27:21,825:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:22,444:INFO:Calculating mean and std
2022-08-16 12:27:22,444:INFO:Creating metrics dataframe
2022-08-16 12:27:22,526:INFO:Uploading results into container
2022-08-16 12:27:22,526:INFO:Uploading model into container now
2022-08-16 12:27:22,530:INFO:master_model_container: 6
2022-08-16 12:27:22,530:INFO:display_container: 3
2022-08-16 12:27:22,531:INFO:Lars(random_state=123)
2022-08-16 12:27:22,531:INFO:create_model() successfully completed......................................
2022-08-16 12:27:22,656:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:22,660:INFO:Creating metrics dataframe
2022-08-16 12:27:22,694:INFO:Initializing Lasso Least Angle Regression
2022-08-16 12:27:22,694:INFO:Total runtime is 0.08519815603892009 minutes
2022-08-16 12:27:22,731:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:22,734:INFO:Initializing create_model()
2022-08-16 12:27:22,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:22,734:INFO:Checking exceptions
2022-08-16 12:27:22,736:INFO:Importing libraries
2022-08-16 12:27:22,736:INFO:Copying training dataset
2022-08-16 12:27:22,807:INFO:Defining folds
2022-08-16 12:27:22,808:INFO:Declaring metric variables
2022-08-16 12:27:22,816:INFO:Importing untrained model
2022-08-16 12:27:22,840:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 12:27:22,885:INFO:Starting cross validation
2022-08-16 12:27:22,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:23,486:INFO:Calculating mean and std
2022-08-16 12:27:23,496:INFO:Creating metrics dataframe
2022-08-16 12:27:23,574:INFO:Uploading results into container
2022-08-16 12:27:23,574:INFO:Uploading model into container now
2022-08-16 12:27:23,574:INFO:master_model_container: 7
2022-08-16 12:27:23,574:INFO:display_container: 3
2022-08-16 12:27:23,574:INFO:LassoLars(random_state=123)
2022-08-16 12:27:23,574:INFO:create_model() successfully completed......................................
2022-08-16 12:27:23,808:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:23,808:INFO:Creating metrics dataframe
2022-08-16 12:27:23,878:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 12:27:23,878:INFO:Total runtime is 0.10492799679438274 minutes
2022-08-16 12:27:23,901:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:23,907:INFO:Initializing create_model()
2022-08-16 12:27:23,907:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:23,907:INFO:Checking exceptions
2022-08-16 12:27:23,909:INFO:Importing libraries
2022-08-16 12:27:23,915:INFO:Copying training dataset
2022-08-16 12:27:24,005:INFO:Defining folds
2022-08-16 12:27:24,005:INFO:Declaring metric variables
2022-08-16 12:27:24,045:INFO:Importing untrained model
2022-08-16 12:27:24,067:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 12:27:24,107:INFO:Starting cross validation
2022-08-16 12:27:24,107:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:24,573:INFO:Calculating mean and std
2022-08-16 12:27:24,582:INFO:Creating metrics dataframe
2022-08-16 12:27:24,625:INFO:Uploading results into container
2022-08-16 12:27:24,625:INFO:Uploading model into container now
2022-08-16 12:27:24,625:INFO:master_model_container: 8
2022-08-16 12:27:24,625:INFO:display_container: 3
2022-08-16 12:27:24,630:INFO:OrthogonalMatchingPursuit()
2022-08-16 12:27:24,630:INFO:create_model() successfully completed......................................
2022-08-16 12:27:24,729:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:24,729:INFO:Creating metrics dataframe
2022-08-16 12:27:24,775:INFO:Initializing Bayesian Ridge
2022-08-16 12:27:24,775:INFO:Total runtime is 0.11988513072331747 minutes
2022-08-16 12:27:24,786:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:24,786:INFO:Initializing create_model()
2022-08-16 12:27:24,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:24,786:INFO:Checking exceptions
2022-08-16 12:27:24,786:INFO:Importing libraries
2022-08-16 12:27:24,786:INFO:Copying training dataset
2022-08-16 12:27:24,931:INFO:Defining folds
2022-08-16 12:27:24,931:INFO:Declaring metric variables
2022-08-16 12:27:24,951:INFO:Importing untrained model
2022-08-16 12:27:24,967:INFO:Bayesian Ridge Imported successfully
2022-08-16 12:27:25,006:INFO:Starting cross validation
2022-08-16 12:27:25,006:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:25,506:INFO:Calculating mean and std
2022-08-16 12:27:25,506:INFO:Creating metrics dataframe
2022-08-16 12:27:25,551:INFO:Uploading results into container
2022-08-16 12:27:25,551:INFO:Uploading model into container now
2022-08-16 12:27:25,551:INFO:master_model_container: 9
2022-08-16 12:27:25,555:INFO:display_container: 3
2022-08-16 12:27:25,555:INFO:BayesianRidge()
2022-08-16 12:27:25,555:INFO:create_model() successfully completed......................................
2022-08-16 12:27:25,690:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:25,690:INFO:Creating metrics dataframe
2022-08-16 12:27:25,717:INFO:Initializing Passive Aggressive Regressor
2022-08-16 12:27:25,717:INFO:Total runtime is 0.13557537396748862 minutes
2022-08-16 12:27:25,734:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:25,734:INFO:Initializing create_model()
2022-08-16 12:27:25,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:25,734:INFO:Checking exceptions
2022-08-16 12:27:25,736:INFO:Importing libraries
2022-08-16 12:27:25,736:INFO:Copying training dataset
2022-08-16 12:27:25,802:INFO:Defining folds
2022-08-16 12:27:25,802:INFO:Declaring metric variables
2022-08-16 12:27:25,818:INFO:Importing untrained model
2022-08-16 12:27:25,827:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 12:27:25,881:INFO:Starting cross validation
2022-08-16 12:27:25,881:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:26,330:INFO:Calculating mean and std
2022-08-16 12:27:26,330:INFO:Creating metrics dataframe
2022-08-16 12:27:26,409:INFO:Uploading results into container
2022-08-16 12:27:26,409:INFO:Uploading model into container now
2022-08-16 12:27:26,409:INFO:master_model_container: 10
2022-08-16 12:27:26,409:INFO:display_container: 3
2022-08-16 12:27:26,409:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 12:27:26,409:INFO:create_model() successfully completed......................................
2022-08-16 12:27:26,566:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:26,566:INFO:Creating metrics dataframe
2022-08-16 12:27:26,664:INFO:Initializing Huber Regressor
2022-08-16 12:27:26,664:INFO:Total runtime is 0.15136329730351766 minutes
2022-08-16 12:27:26,688:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:26,688:INFO:Initializing create_model()
2022-08-16 12:27:26,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:26,688:INFO:Checking exceptions
2022-08-16 12:27:26,696:INFO:Importing libraries
2022-08-16 12:27:26,696:INFO:Copying training dataset
2022-08-16 12:27:26,777:INFO:Defining folds
2022-08-16 12:27:26,777:INFO:Declaring metric variables
2022-08-16 12:27:26,791:INFO:Importing untrained model
2022-08-16 12:27:26,806:INFO:Huber Regressor Imported successfully
2022-08-16 12:27:26,840:INFO:Starting cross validation
2022-08-16 12:27:26,840:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:27,516:INFO:Calculating mean and std
2022-08-16 12:27:27,518:INFO:Creating metrics dataframe
2022-08-16 12:27:27,590:INFO:Uploading results into container
2022-08-16 12:27:27,590:INFO:Uploading model into container now
2022-08-16 12:27:27,590:INFO:master_model_container: 11
2022-08-16 12:27:27,590:INFO:display_container: 3
2022-08-16 12:27:27,590:INFO:HuberRegressor()
2022-08-16 12:27:27,590:INFO:create_model() successfully completed......................................
2022-08-16 12:27:27,886:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:27,886:INFO:Creating metrics dataframe
2022-08-16 12:27:28,102:INFO:Initializing K Neighbors Regressor
2022-08-16 12:27:28,102:INFO:Total runtime is 0.1753247062365214 minutes
2022-08-16 12:27:28,117:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:28,117:INFO:Initializing create_model()
2022-08-16 12:27:28,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:28,117:INFO:Checking exceptions
2022-08-16 12:27:28,117:INFO:Importing libraries
2022-08-16 12:27:28,117:INFO:Copying training dataset
2022-08-16 12:27:28,210:INFO:Defining folds
2022-08-16 12:27:28,210:INFO:Declaring metric variables
2022-08-16 12:27:28,226:INFO:Importing untrained model
2022-08-16 12:27:28,244:INFO:K Neighbors Regressor Imported successfully
2022-08-16 12:27:28,277:INFO:Starting cross validation
2022-08-16 12:27:28,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:28,823:INFO:Calculating mean and std
2022-08-16 12:27:28,823:INFO:Creating metrics dataframe
2022-08-16 12:27:28,870:INFO:Uploading results into container
2022-08-16 12:27:28,876:INFO:Uploading model into container now
2022-08-16 12:27:28,876:INFO:master_model_container: 12
2022-08-16 12:27:28,876:INFO:display_container: 3
2022-08-16 12:27:28,876:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 12:27:28,876:INFO:create_model() successfully completed......................................
2022-08-16 12:27:29,012:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:29,012:INFO:Creating metrics dataframe
2022-08-16 12:27:29,075:INFO:Initializing Decision Tree Regressor
2022-08-16 12:27:29,075:INFO:Total runtime is 0.19155053297678631 minutes
2022-08-16 12:27:29,099:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:29,099:INFO:Initializing create_model()
2022-08-16 12:27:29,105:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:29,105:INFO:Checking exceptions
2022-08-16 12:27:29,107:INFO:Importing libraries
2022-08-16 12:27:29,107:INFO:Copying training dataset
2022-08-16 12:27:29,231:INFO:Defining folds
2022-08-16 12:27:29,236:INFO:Declaring metric variables
2022-08-16 12:27:29,267:INFO:Importing untrained model
2022-08-16 12:27:29,295:INFO:Decision Tree Regressor Imported successfully
2022-08-16 12:27:29,334:INFO:Starting cross validation
2022-08-16 12:27:29,334:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:29,826:INFO:Calculating mean and std
2022-08-16 12:27:29,827:INFO:Creating metrics dataframe
2022-08-16 12:27:29,879:INFO:Uploading results into container
2022-08-16 12:27:29,880:INFO:Uploading model into container now
2022-08-16 12:27:29,880:INFO:master_model_container: 13
2022-08-16 12:27:29,880:INFO:display_container: 3
2022-08-16 12:27:29,881:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 12:27:29,881:INFO:create_model() successfully completed......................................
2022-08-16 12:27:30,041:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:30,041:INFO:Creating metrics dataframe
2022-08-16 12:27:30,096:INFO:Initializing Random Forest Regressor
2022-08-16 12:27:30,096:INFO:Total runtime is 0.20856924057006837 minutes
2022-08-16 12:27:30,113:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:30,114:INFO:Initializing create_model()
2022-08-16 12:27:30,115:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:30,115:INFO:Checking exceptions
2022-08-16 12:27:30,120:INFO:Importing libraries
2022-08-16 12:27:30,120:INFO:Copying training dataset
2022-08-16 12:27:30,197:INFO:Defining folds
2022-08-16 12:27:30,200:INFO:Declaring metric variables
2022-08-16 12:27:30,217:INFO:Importing untrained model
2022-08-16 12:27:30,234:INFO:Random Forest Regressor Imported successfully
2022-08-16 12:27:30,288:INFO:Starting cross validation
2022-08-16 12:27:30,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:32,155:INFO:Calculating mean and std
2022-08-16 12:27:32,155:INFO:Creating metrics dataframe
2022-08-16 12:27:32,208:INFO:Uploading results into container
2022-08-16 12:27:32,208:INFO:Uploading model into container now
2022-08-16 12:27:32,208:INFO:master_model_container: 14
2022-08-16 12:27:32,208:INFO:display_container: 3
2022-08-16 12:27:32,215:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 12:27:32,215:INFO:create_model() successfully completed......................................
2022-08-16 12:27:32,337:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:32,337:INFO:Creating metrics dataframe
2022-08-16 12:27:32,395:INFO:Initializing Extra Trees Regressor
2022-08-16 12:27:32,395:INFO:Total runtime is 0.24688404003779094 minutes
2022-08-16 12:27:32,409:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:32,409:INFO:Initializing create_model()
2022-08-16 12:27:32,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:32,409:INFO:Checking exceptions
2022-08-16 12:27:32,409:INFO:Importing libraries
2022-08-16 12:27:32,409:INFO:Copying training dataset
2022-08-16 12:27:32,476:INFO:Defining folds
2022-08-16 12:27:32,476:INFO:Declaring metric variables
2022-08-16 12:27:32,500:INFO:Importing untrained model
2022-08-16 12:27:32,516:INFO:Extra Trees Regressor Imported successfully
2022-08-16 12:27:32,555:INFO:Starting cross validation
2022-08-16 12:27:32,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:34,011:INFO:Calculating mean and std
2022-08-16 12:27:34,011:INFO:Creating metrics dataframe
2022-08-16 12:27:34,087:INFO:Uploading results into container
2022-08-16 12:27:34,087:INFO:Uploading model into container now
2022-08-16 12:27:34,087:INFO:master_model_container: 15
2022-08-16 12:27:34,087:INFO:display_container: 3
2022-08-16 12:27:34,087:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 12:27:34,095:INFO:create_model() successfully completed......................................
2022-08-16 12:27:34,225:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:34,225:INFO:Creating metrics dataframe
2022-08-16 12:27:34,265:INFO:Initializing AdaBoost Regressor
2022-08-16 12:27:34,266:INFO:Total runtime is 0.27807326316833497 minutes
2022-08-16 12:27:34,282:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:34,282:INFO:Initializing create_model()
2022-08-16 12:27:34,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:34,282:INFO:Checking exceptions
2022-08-16 12:27:34,286:INFO:Importing libraries
2022-08-16 12:27:34,286:INFO:Copying training dataset
2022-08-16 12:27:34,342:INFO:Defining folds
2022-08-16 12:27:34,342:INFO:Declaring metric variables
2022-08-16 12:27:34,358:INFO:Importing untrained model
2022-08-16 12:27:34,367:INFO:AdaBoost Regressor Imported successfully
2022-08-16 12:27:34,398:INFO:Starting cross validation
2022-08-16 12:27:34,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:34,912:INFO:Calculating mean and std
2022-08-16 12:27:34,913:INFO:Creating metrics dataframe
2022-08-16 12:27:35,007:INFO:Uploading results into container
2022-08-16 12:27:35,007:INFO:Uploading model into container now
2022-08-16 12:27:35,007:INFO:master_model_container: 16
2022-08-16 12:27:35,007:INFO:display_container: 3
2022-08-16 12:27:35,007:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 12:27:35,007:INFO:create_model() successfully completed......................................
2022-08-16 12:27:35,158:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:35,158:INFO:Creating metrics dataframe
2022-08-16 12:27:35,224:INFO:Initializing Gradient Boosting Regressor
2022-08-16 12:27:35,224:INFO:Total runtime is 0.29404014348983765 minutes
2022-08-16 12:27:35,246:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:35,249:INFO:Initializing create_model()
2022-08-16 12:27:35,249:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:35,249:INFO:Checking exceptions
2022-08-16 12:27:35,249:INFO:Importing libraries
2022-08-16 12:27:35,255:INFO:Copying training dataset
2022-08-16 12:27:35,337:INFO:Defining folds
2022-08-16 12:27:35,337:INFO:Declaring metric variables
2022-08-16 12:27:35,357:INFO:Importing untrained model
2022-08-16 12:27:35,369:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 12:27:35,395:INFO:Starting cross validation
2022-08-16 12:27:35,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:36,289:INFO:Calculating mean and std
2022-08-16 12:27:36,289:INFO:Creating metrics dataframe
2022-08-16 12:27:36,345:INFO:Uploading results into container
2022-08-16 12:27:36,345:INFO:Uploading model into container now
2022-08-16 12:27:36,345:INFO:master_model_container: 17
2022-08-16 12:27:36,345:INFO:display_container: 3
2022-08-16 12:27:36,353:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 12:27:36,354:INFO:create_model() successfully completed......................................
2022-08-16 12:27:36,509:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:36,509:INFO:Creating metrics dataframe
2022-08-16 12:27:36,565:INFO:Initializing Extreme Gradient Boosting
2022-08-16 12:27:36,573:INFO:Total runtime is 0.3165108482042948 minutes
2022-08-16 12:27:36,589:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:36,589:INFO:Initializing create_model()
2022-08-16 12:27:36,589:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:36,589:INFO:Checking exceptions
2022-08-16 12:27:36,597:INFO:Importing libraries
2022-08-16 12:27:36,597:INFO:Copying training dataset
2022-08-16 12:27:36,700:INFO:Defining folds
2022-08-16 12:27:36,700:INFO:Declaring metric variables
2022-08-16 12:27:36,716:INFO:Importing untrained model
2022-08-16 12:27:36,740:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 12:27:36,787:INFO:Starting cross validation
2022-08-16 12:27:36,790:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:38,415:INFO:Calculating mean and std
2022-08-16 12:27:38,417:INFO:Creating metrics dataframe
2022-08-16 12:27:38,549:INFO:Uploading results into container
2022-08-16 12:27:38,549:INFO:Uploading model into container now
2022-08-16 12:27:38,551:INFO:master_model_container: 18
2022-08-16 12:27:38,551:INFO:display_container: 3
2022-08-16 12:27:38,555:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 12:27:38,555:INFO:create_model() successfully completed......................................
2022-08-16 12:27:38,711:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:38,711:INFO:Creating metrics dataframe
2022-08-16 12:27:38,746:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 12:27:38,746:INFO:Total runtime is 0.3527329087257385 minutes
2022-08-16 12:27:38,763:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:38,763:INFO:Initializing create_model()
2022-08-16 12:27:38,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:38,765:INFO:Checking exceptions
2022-08-16 12:27:38,766:INFO:Importing libraries
2022-08-16 12:27:38,766:INFO:Copying training dataset
2022-08-16 12:27:38,936:INFO:Defining folds
2022-08-16 12:27:38,941:INFO:Declaring metric variables
2022-08-16 12:27:38,966:INFO:Importing untrained model
2022-08-16 12:27:38,992:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 12:27:39,026:INFO:Starting cross validation
2022-08-16 12:27:39,026:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:43,157:INFO:Calculating mean and std
2022-08-16 12:27:43,157:INFO:Creating metrics dataframe
2022-08-16 12:27:43,241:INFO:Uploading results into container
2022-08-16 12:27:43,241:INFO:Uploading model into container now
2022-08-16 12:27:43,241:INFO:master_model_container: 19
2022-08-16 12:27:43,241:INFO:display_container: 3
2022-08-16 12:27:43,245:INFO:LGBMRegressor(random_state=123)
2022-08-16 12:27:43,245:INFO:create_model() successfully completed......................................
2022-08-16 12:27:43,376:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:43,376:INFO:Creating metrics dataframe
2022-08-16 12:27:43,422:INFO:Initializing Dummy Regressor
2022-08-16 12:27:43,422:INFO:Total runtime is 0.4306708216667175 minutes
2022-08-16 12:27:43,466:INFO:SubProcess create_model() called ==================================
2022-08-16 12:27:43,466:INFO:Initializing create_model()
2022-08-16 12:27:43,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000026E62FDB1C0>, kwargs={})
2022-08-16 12:27:43,466:INFO:Checking exceptions
2022-08-16 12:27:43,470:INFO:Importing libraries
2022-08-16 12:27:43,470:INFO:Copying training dataset
2022-08-16 12:27:43,577:INFO:Defining folds
2022-08-16 12:27:43,579:INFO:Declaring metric variables
2022-08-16 12:27:43,607:INFO:Importing untrained model
2022-08-16 12:27:43,624:INFO:Dummy Regressor Imported successfully
2022-08-16 12:27:43,677:INFO:Starting cross validation
2022-08-16 12:27:43,680:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 12:27:44,174:INFO:Calculating mean and std
2022-08-16 12:27:44,175:INFO:Creating metrics dataframe
2022-08-16 12:27:44,244:INFO:Uploading results into container
2022-08-16 12:27:44,244:INFO:Uploading model into container now
2022-08-16 12:27:44,244:INFO:master_model_container: 20
2022-08-16 12:27:44,244:INFO:display_container: 3
2022-08-16 12:27:44,244:INFO:DummyRegressor()
2022-08-16 12:27:44,244:INFO:create_model() successfully completed......................................
2022-08-16 12:27:44,362:INFO:SubProcess create_model() end ==================================
2022-08-16 12:27:44,362:INFO:Creating metrics dataframe
2022-08-16 12:27:44,428:INFO:Initializing create_model()
2022-08-16 12:27:44,428:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, kwargs={})
2022-08-16 12:27:44,428:INFO:Checking exceptions
2022-08-16 12:27:44,428:INFO:Importing libraries
2022-08-16 12:27:44,428:INFO:Copying training dataset
2022-08-16 12:27:44,526:INFO:Defining folds
2022-08-16 12:27:44,526:INFO:Declaring metric variables
2022-08-16 12:27:44,526:INFO:Importing untrained model
2022-08-16 12:27:44,526:INFO:Declaring custom model
2022-08-16 12:27:44,527:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 12:27:44,530:INFO:Cross validation set to False
2022-08-16 12:27:44,530:INFO:Fitting Model
2022-08-16 12:27:44,789:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 12:27:44,789:INFO:create_models() successfully completed......................................
2022-08-16 12:27:44,937:INFO:master_model_container: 20
2022-08-16 12:27:44,937:INFO:display_container: 3
2022-08-16 12:27:44,937:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 12:27:44,937:INFO:compare_models() successfully completed......................................
2022-08-16 12:27:45,264:INFO:Initializing plot_model()
2022-08-16 12:27:45,264:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=feature, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, system=True)
2022-08-16 12:27:45,264:INFO:Checking exceptions
2022-08-16 12:27:45,305:INFO:Preparing display monitor
2022-08-16 12:27:45,314:INFO:Preloading libraries
2022-08-16 12:27:45,338:INFO:Copying training dataset
2022-08-16 12:27:45,338:INFO:Plot type: feature
2022-08-16 12:27:45,345:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 12:27:45,933:INFO:Visual Rendered Successfully
2022-08-16 12:27:46,235:INFO:plot_model() successfully completed......................................
2022-08-16 12:27:46,366:INFO:Initializing plot_model()
2022-08-16 12:27:46,366:INFO:plot_model(fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot=residuals, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026E63DB9520>, system=True)
2022-08-16 12:27:46,366:INFO:Checking exceptions
2022-08-16 12:27:46,377:INFO:Preparing display monitor
2022-08-16 12:27:46,395:INFO:Preloading libraries
2022-08-16 12:27:46,395:INFO:Copying training dataset
2022-08-16 12:27:46,395:INFO:Plot type: residuals
2022-08-16 12:27:47,203:INFO:Fitting Model
2022-08-16 12:27:47,378:INFO:Scoring test/hold-out set
2022-08-16 12:27:48,524:INFO:Visual Rendered Successfully
2022-08-16 12:27:48,663:INFO:plot_model() successfully completed......................................
2022-08-16 12:27:48,744:INFO:Initializing save_model()
2022-08-16 12:27:48,745:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...oker'], transformer=OrdinalEncoder(cols=['sex', 'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 12:27:48,745:INFO:Adding model into prep_pipe
2022-08-16 12:27:48,758:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 12:27:48,775:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 12:27:48,775:INFO:save_model() successfully completed......................................
2022-08-16 12:29:08,345:INFO:Initializing load_model()
2022-08-16 12:29:08,345:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:29:19,015:INFO:Initializing load_model()
2022-08-16 12:29:19,015:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:29:19,324:INFO:Initializing load_model()
2022-08-16 12:29:19,333:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:29:33,464:INFO:Initializing load_model()
2022-08-16 12:29:33,464:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:29:33,656:INFO:Initializing predict_model()
2022-08-16 12:29:33,664:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF433B820>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAEDF5DB20>)
2022-08-16 12:29:33,664:INFO:Checking exceptions
2022-08-16 12:29:33,664:INFO:Preloading libraries
2022-08-16 12:31:24,678:INFO:Initializing load_model()
2022-08-16 12:31:24,678:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:31:27,087:INFO:Initializing load_model()
2022-08-16 12:31:27,087:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 12:31:27,287:INFO:Initializing predict_model()
2022-08-16 12:31:27,287:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF433B790>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAEDF5CD90>)
2022-08-16 12:31:27,287:INFO:Checking exceptions
2022-08-16 12:31:27,287:INFO:Preloading libraries
2022-08-16 13:01:54,849:INFO:Initializing load_model()
2022-08-16 13:01:54,857:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 13:02:06,328:INFO:Initializing load_model()
2022-08-16 13:02:06,328:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 13:02:06,658:INFO:Initializing load_model()
2022-08-16 13:02:06,658:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 13:02:08,235:INFO:Initializing load_model()
2022-08-16 13:02:08,235:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 13:02:08,427:INFO:Initializing predict_model()
2022-08-16 13:02:08,427:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF4344DC0>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAEDF60370>)
2022-08-16 13:02:08,429:INFO:Checking exceptions
2022-08-16 13:02:08,429:INFO:Preloading libraries
2022-08-16 14:34:12,013:INFO:Initializing load_model()
2022-08-16 14:34:12,013:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 14:34:14,154:INFO:Initializing load_model()
2022-08-16 14:34:14,154:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 14:34:14,298:INFO:Initializing predict_model()
2022-08-16 14:34:14,305:INFO:predict_model(estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransfomerWrapper(include=['age', 'bmi', 'children'], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransfomerWrapper(include=['sex', 'smoker', 'region'], transformer=SimpleImputer(fill_value='constant', strategy='constant'))),
                ('ordinal_encoding',
                 Tr...'smoker'], handle_missing='return_nan', mapping=[{'col': 'sex', 'mapping': {nan: -1, 'female': 0, 'male': 1}}, {'col': 'smoker', 'mapping': {nan: -1, 'no': 0, 'yes': 1}}]))),
                ('onehot_encoding',
                 TransfomerWrapper(include=['region'], transformer=OneHotEncoder(cols=['region'], handle_missing='return_nan', use_cat_names=True))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, display=None, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DAF4344820>, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001DAF4343C70>)
2022-08-16 14:34:14,305:INFO:Checking exceptions
2022-08-16 14:34:14,305:INFO:Preloading libraries
2022-08-16 14:51:31,172:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 14:51:31,172:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 14:51:31,172:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 14:51:31,172:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 14:51:32,947:INFO:PyCaret RegressionExperiment
2022-08-16 14:51:32,947:INFO:Logging name: reg-default-name
2022-08-16 14:51:32,947:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 14:51:32,947:INFO:version 3.0.0.rc3
2022-08-16 14:51:32,947:INFO:Initializing setup()
2022-08-16 14:51:32,947:INFO:self.USI: bd33
2022-08-16 14:51:32,947:INFO:self.variable_keys: {'variable_keys', '_available_plots', 'X_test', 'fold_generator', 'seed', 'target_param', 'gpu_param', 'log_plots_param', 'exp_name_log', 'n_jobs_param', 'data', '_ml_usecase', '_all_models', 'transform_target_param', 'y_train', 'idx', 'memory', '_all_metrics', 'fold_groups_param', '_all_models_internal', 'USI', 'y_test', 'X_train', 'display_container', 'exp_id', 'transform_target_method_param', 'pipeline', 'html_param', 'fold_shuffle_param', 'y', 'X', '_gpu_n_jobs_param', 'master_model_container', 'logging_param'}
2022-08-16 14:51:32,947:INFO:Checking environment
2022-08-16 14:51:32,947:INFO:python_version: 3.9.12
2022-08-16 14:51:32,947:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 14:51:32,947:INFO:machine: AMD64
2022-08-16 14:51:32,947:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 14:51:32,947:INFO:Memory: svmem(total=8419573760, available=358043648, percent=95.7, used=8061530112, free=358043648)
2022-08-16 14:51:32,947:INFO:Physical Core: 4
2022-08-16 14:51:32,947:INFO:Logical Core: 8
2022-08-16 14:51:32,947:INFO:Checking libraries
2022-08-16 14:51:32,947:INFO:System:
2022-08-16 14:51:32,947:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-08-16 14:51:32,947:INFO:executable: c:\Users\user\anaconda3\python.exe
2022-08-16 14:51:32,947:INFO:   machine: Windows-10-10.0.22000-SP0
2022-08-16 14:51:32,947:INFO:PyCaret required dependencies:
2022-08-16 14:51:35,011:INFO:                 pip: 22.2.2
2022-08-16 14:51:35,011:INFO:          setuptools: 61.2.0
2022-08-16 14:51:35,011:INFO:             pycaret: 3.0.0.rc3
2022-08-16 14:51:35,011:INFO:             IPython: 8.2.0
2022-08-16 14:51:35,011:INFO:          ipywidgets: 7.6.5
2022-08-16 14:51:35,011:INFO:                tqdm: 4.64.0
2022-08-16 14:51:35,011:INFO:               numpy: 1.21.5
2022-08-16 14:51:35,011:INFO:              pandas: 1.4.2
2022-08-16 14:51:35,011:INFO:              jinja2: 2.11.3
2022-08-16 14:51:35,011:INFO:               scipy: 1.7.3
2022-08-16 14:51:35,011:INFO:              joblib: 1.1.0
2022-08-16 14:51:35,011:INFO:             sklearn: 1.0.2
2022-08-16 14:51:35,011:INFO:                pyod: Installed but version unavailable
2022-08-16 14:51:35,011:INFO:            imblearn: 0.9.1
2022-08-16 14:51:35,011:INFO:   category_encoders: 2.5.0
2022-08-16 14:51:35,011:INFO:            lightgbm: 3.3.2
2022-08-16 14:51:35,011:INFO:               numba: 0.55.1
2022-08-16 14:51:35,011:INFO:            requests: 2.27.1
2022-08-16 14:51:35,011:INFO:          matplotlib: 3.5.1
2022-08-16 14:51:35,019:INFO:          scikitplot: 0.3.7
2022-08-16 14:51:35,019:INFO:         yellowbrick: 1.4
2022-08-16 14:51:35,019:INFO:              plotly: 5.6.0
2022-08-16 14:51:35,019:INFO:             kaleido: 0.2.1
2022-08-16 14:51:35,019:INFO:         statsmodels: 0.13.2
2022-08-16 14:51:35,019:INFO:              sktime: 0.11.4
2022-08-16 14:51:35,019:INFO:               tbats: Installed but version unavailable
2022-08-16 14:51:35,019:INFO:            pmdarima: 1.8.5
2022-08-16 14:51:35,019:INFO:              psutil: 5.9.1
2022-08-16 14:51:35,019:INFO:None
2022-08-16 14:51:35,019:INFO:Set up data.
2022-08-16 14:51:35,027:INFO:Set up train/test split.
2022-08-16 14:51:35,035:INFO:Set up folding strategy.
2022-08-16 14:51:35,035:INFO:Assigning column types.
2022-08-16 14:51:35,043:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-16 14:51:35,043:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,051:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,067:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,147:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,291:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:35,483:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:35,483:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,499:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,507:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,843:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,851:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:35,859:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:35,859:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-16 14:51:35,875:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 14:51:35,891:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,235:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:36,243:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:36,259:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,594:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,602:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:36,602:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:36,610:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-16 14:51:36,634:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,858:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,858:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:36,866:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:36,882:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 14:51:36,986:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,050:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,058:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,058:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-16 14:51:37,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,218:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,226:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,370:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,370:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,378:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,378:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-16 14:51:37,466:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,522:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,530:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,618:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 14:51:37,682:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,682:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,682:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-16 14:51:37,841:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:37,844:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:37,994:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:38,002:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:38,041:INFO:Preparing preprocessing pipeline...
2022-08-16 14:51:38,043:INFO:Set up simple imputation.
2022-08-16 14:51:38,051:INFO:Set up encoding of ordinal features.
2022-08-16 14:51:38,059:INFO:Set up encoding of categorical features.
2022-08-16 14:51:38,059:INFO:Set up variance threshold.
2022-08-16 14:51:38,347:INFO:Finished creating preprocessing pipeline.
2022-08-16 14:51:38,379:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-16 14:51:38,379:INFO:Creating final display dataframe.
2022-08-16 14:51:39,204:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        Regression
3                 Data shape        (1338, 10)
4           Train data shape         (936, 10)
5            Test data shape         (402, 10)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              bd33
2022-08-16 14:51:39,385:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:39,388:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:39,542:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 14:51:39,542:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 14:51:39,550:INFO:setup() successfully completed in 6.6s...............
2022-08-16 14:51:39,774:INFO:Initializing create_model()
2022-08-16 14:51:39,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:51:39,774:INFO:Checking exceptions
2022-08-16 14:51:39,871:INFO:Importing libraries
2022-08-16 14:51:39,871:INFO:Copying training dataset
2022-08-16 14:51:39,879:INFO:Defining folds
2022-08-16 14:51:39,879:INFO:Declaring metric variables
2022-08-16 14:51:39,887:INFO:Importing untrained model
2022-08-16 14:51:39,898:INFO:Linear Regression Imported successfully
2022-08-16 14:51:39,914:INFO:Starting cross validation
2022-08-16 14:51:40,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:51:59,145:INFO:Calculating mean and std
2022-08-16 14:51:59,145:INFO:Creating metrics dataframe
2022-08-16 14:51:59,153:INFO:Finalizing model
2022-08-16 14:51:59,413:INFO:Uploading results into container
2022-08-16 14:51:59,413:INFO:Uploading model into container now
2022-08-16 14:51:59,429:INFO:master_model_container: 1
2022-08-16 14:51:59,429:INFO:display_container: 2
2022-08-16 14:51:59,429:INFO:LinearRegression(n_jobs=-1)
2022-08-16 14:51:59,429:INFO:create_model() successfully completed......................................
2022-08-16 14:51:59,728:INFO:Initializing compare_models()
2022-08-16 14:51:59,728:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-16 14:51:59,728:INFO:Checking exceptions
2022-08-16 14:51:59,736:INFO:Preparing display monitor
2022-08-16 14:51:59,807:INFO:Initializing Linear Regression
2022-08-16 14:51:59,807:INFO:Total runtime is 0.0 minutes
2022-08-16 14:51:59,815:INFO:SubProcess create_model() called ==================================
2022-08-16 14:51:59,815:INFO:Initializing create_model()
2022-08-16 14:51:59,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:51:59,815:INFO:Checking exceptions
2022-08-16 14:51:59,823:INFO:Importing libraries
2022-08-16 14:51:59,823:INFO:Copying training dataset
2022-08-16 14:51:59,823:INFO:Defining folds
2022-08-16 14:51:59,823:INFO:Declaring metric variables
2022-08-16 14:51:59,839:INFO:Importing untrained model
2022-08-16 14:51:59,839:INFO:Linear Regression Imported successfully
2022-08-16 14:51:59,855:INFO:Starting cross validation
2022-08-16 14:51:59,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:00,520:INFO:Calculating mean and std
2022-08-16 14:52:00,520:INFO:Creating metrics dataframe
2022-08-16 14:52:00,528:INFO:Uploading results into container
2022-08-16 14:52:00,528:INFO:Uploading model into container now
2022-08-16 14:52:00,528:INFO:master_model_container: 2
2022-08-16 14:52:00,528:INFO:display_container: 3
2022-08-16 14:52:00,528:INFO:LinearRegression(n_jobs=-1)
2022-08-16 14:52:00,528:INFO:create_model() successfully completed......................................
2022-08-16 14:52:00,670:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:00,670:INFO:Creating metrics dataframe
2022-08-16 14:52:00,678:INFO:Initializing Lasso Regression
2022-08-16 14:52:00,678:INFO:Total runtime is 0.014503916104634603 minutes
2022-08-16 14:52:00,686:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:00,686:INFO:Initializing create_model()
2022-08-16 14:52:00,686:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:00,686:INFO:Checking exceptions
2022-08-16 14:52:00,686:INFO:Importing libraries
2022-08-16 14:52:00,686:INFO:Copying training dataset
2022-08-16 14:52:00,695:INFO:Defining folds
2022-08-16 14:52:00,695:INFO:Declaring metric variables
2022-08-16 14:52:00,695:INFO:Importing untrained model
2022-08-16 14:52:00,703:INFO:Lasso Regression Imported successfully
2022-08-16 14:52:00,711:INFO:Starting cross validation
2022-08-16 14:52:00,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:01,053:INFO:Calculating mean and std
2022-08-16 14:52:01,061:INFO:Creating metrics dataframe
2022-08-16 14:52:01,061:INFO:Uploading results into container
2022-08-16 14:52:01,061:INFO:Uploading model into container now
2022-08-16 14:52:01,061:INFO:master_model_container: 3
2022-08-16 14:52:01,061:INFO:display_container: 3
2022-08-16 14:52:01,069:INFO:Lasso(random_state=123)
2022-08-16 14:52:01,069:INFO:create_model() successfully completed......................................
2022-08-16 14:52:01,195:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:01,195:INFO:Creating metrics dataframe
2022-08-16 14:52:01,213:INFO:Initializing Ridge Regression
2022-08-16 14:52:01,213:INFO:Total runtime is 0.02342894474665324 minutes
2022-08-16 14:52:01,213:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:01,213:INFO:Initializing create_model()
2022-08-16 14:52:01,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:01,213:INFO:Checking exceptions
2022-08-16 14:52:01,221:INFO:Importing libraries
2022-08-16 14:52:01,221:INFO:Copying training dataset
2022-08-16 14:52:01,221:INFO:Defining folds
2022-08-16 14:52:01,221:INFO:Declaring metric variables
2022-08-16 14:52:01,237:INFO:Importing untrained model
2022-08-16 14:52:01,237:INFO:Ridge Regression Imported successfully
2022-08-16 14:52:01,253:INFO:Starting cross validation
2022-08-16 14:52:01,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:01,569:INFO:Calculating mean and std
2022-08-16 14:52:01,578:INFO:Creating metrics dataframe
2022-08-16 14:52:01,578:INFO:Uploading results into container
2022-08-16 14:52:01,578:INFO:Uploading model into container now
2022-08-16 14:52:01,586:INFO:master_model_container: 4
2022-08-16 14:52:01,586:INFO:display_container: 3
2022-08-16 14:52:01,586:INFO:Ridge(random_state=123)
2022-08-16 14:52:01,586:INFO:create_model() successfully completed......................................
2022-08-16 14:52:01,715:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:01,715:INFO:Creating metrics dataframe
2022-08-16 14:52:01,739:INFO:Initializing Elastic Net
2022-08-16 14:52:01,739:INFO:Total runtime is 0.032184751828511556 minutes
2022-08-16 14:52:01,747:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:01,747:INFO:Initializing create_model()
2022-08-16 14:52:01,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:01,755:INFO:Checking exceptions
2022-08-16 14:52:01,755:INFO:Importing libraries
2022-08-16 14:52:01,755:INFO:Copying training dataset
2022-08-16 14:52:01,771:INFO:Defining folds
2022-08-16 14:52:01,771:INFO:Declaring metric variables
2022-08-16 14:52:01,771:INFO:Importing untrained model
2022-08-16 14:52:01,787:INFO:Elastic Net Imported successfully
2022-08-16 14:52:01,810:INFO:Starting cross validation
2022-08-16 14:52:01,810:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:02,282:INFO:Calculating mean and std
2022-08-16 14:52:02,282:INFO:Creating metrics dataframe
2022-08-16 14:52:02,290:INFO:Uploading results into container
2022-08-16 14:52:02,290:INFO:Uploading model into container now
2022-08-16 14:52:02,298:INFO:master_model_container: 5
2022-08-16 14:52:02,298:INFO:display_container: 3
2022-08-16 14:52:02,298:INFO:ElasticNet(random_state=123)
2022-08-16 14:52:02,298:INFO:create_model() successfully completed......................................
2022-08-16 14:52:02,561:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:02,563:INFO:Creating metrics dataframe
2022-08-16 14:52:02,601:INFO:Initializing Least Angle Regression
2022-08-16 14:52:02,601:INFO:Total runtime is 0.04656698703765869 minutes
2022-08-16 14:52:02,617:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:02,617:INFO:Initializing create_model()
2022-08-16 14:52:02,617:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:02,617:INFO:Checking exceptions
2022-08-16 14:52:02,625:INFO:Importing libraries
2022-08-16 14:52:02,625:INFO:Copying training dataset
2022-08-16 14:52:02,641:INFO:Defining folds
2022-08-16 14:52:02,641:INFO:Declaring metric variables
2022-08-16 14:52:02,649:INFO:Importing untrained model
2022-08-16 14:52:02,657:INFO:Least Angle Regression Imported successfully
2022-08-16 14:52:02,681:INFO:Starting cross validation
2022-08-16 14:52:02,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:02,897:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:02,977:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,001:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,025:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,057:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,065:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,094:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,182:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,182:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:03,254:INFO:Calculating mean and std
2022-08-16 14:52:03,254:INFO:Creating metrics dataframe
2022-08-16 14:52:03,262:INFO:Uploading results into container
2022-08-16 14:52:03,270:INFO:Uploading model into container now
2022-08-16 14:52:03,270:INFO:master_model_container: 6
2022-08-16 14:52:03,270:INFO:display_container: 3
2022-08-16 14:52:03,270:INFO:Lars(random_state=123)
2022-08-16 14:52:03,270:INFO:create_model() successfully completed......................................
2022-08-16 14:52:03,547:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:03,547:INFO:Creating metrics dataframe
2022-08-16 14:52:03,595:INFO:Initializing Lasso Least Angle Regression
2022-08-16 14:52:03,595:INFO:Total runtime is 0.06311806042989096 minutes
2022-08-16 14:52:03,603:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:03,603:INFO:Initializing create_model()
2022-08-16 14:52:03,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:03,603:INFO:Checking exceptions
2022-08-16 14:52:03,611:INFO:Importing libraries
2022-08-16 14:52:03,611:INFO:Copying training dataset
2022-08-16 14:52:03,619:INFO:Defining folds
2022-08-16 14:52:03,619:INFO:Declaring metric variables
2022-08-16 14:52:03,635:INFO:Importing untrained model
2022-08-16 14:52:03,643:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 14:52:03,675:INFO:Starting cross validation
2022-08-16 14:52:03,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:03,914:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:03,954:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,004:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,020:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,044:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,109:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,117:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,141:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,213:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,221:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 14:52:04,284:INFO:Calculating mean and std
2022-08-16 14:52:04,284:INFO:Creating metrics dataframe
2022-08-16 14:52:04,294:INFO:Uploading results into container
2022-08-16 14:52:04,294:INFO:Uploading model into container now
2022-08-16 14:52:04,294:INFO:master_model_container: 7
2022-08-16 14:52:04,294:INFO:display_container: 3
2022-08-16 14:52:04,294:INFO:LassoLars(random_state=123)
2022-08-16 14:52:04,294:INFO:create_model() successfully completed......................................
2022-08-16 14:52:04,502:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:04,502:INFO:Creating metrics dataframe
2022-08-16 14:52:04,527:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 14:52:04,527:INFO:Total runtime is 0.07866224050521851 minutes
2022-08-16 14:52:04,535:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:04,535:INFO:Initializing create_model()
2022-08-16 14:52:04,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:04,535:INFO:Checking exceptions
2022-08-16 14:52:04,535:INFO:Importing libraries
2022-08-16 14:52:04,535:INFO:Copying training dataset
2022-08-16 14:52:04,543:INFO:Defining folds
2022-08-16 14:52:04,543:INFO:Declaring metric variables
2022-08-16 14:52:04,551:INFO:Importing untrained model
2022-08-16 14:52:04,559:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 14:52:04,575:INFO:Starting cross validation
2022-08-16 14:52:04,575:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:04,759:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,767:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,783:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,783:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,807:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,807:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,839:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:04,869:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:05,024:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:05,072:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 14:52:05,152:INFO:Calculating mean and std
2022-08-16 14:52:05,160:INFO:Creating metrics dataframe
2022-08-16 14:52:05,168:INFO:Uploading results into container
2022-08-16 14:52:05,168:INFO:Uploading model into container now
2022-08-16 14:52:05,168:INFO:master_model_container: 8
2022-08-16 14:52:05,168:INFO:display_container: 3
2022-08-16 14:52:05,168:INFO:OrthogonalMatchingPursuit()
2022-08-16 14:52:05,168:INFO:create_model() successfully completed......................................
2022-08-16 14:52:05,488:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:05,488:INFO:Creating metrics dataframe
2022-08-16 14:52:05,504:INFO:Initializing Bayesian Ridge
2022-08-16 14:52:05,504:INFO:Total runtime is 0.09493545691172282 minutes
2022-08-16 14:52:05,512:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:05,512:INFO:Initializing create_model()
2022-08-16 14:52:05,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:05,512:INFO:Checking exceptions
2022-08-16 14:52:05,520:INFO:Importing libraries
2022-08-16 14:52:05,520:INFO:Copying training dataset
2022-08-16 14:52:05,520:INFO:Defining folds
2022-08-16 14:52:05,520:INFO:Declaring metric variables
2022-08-16 14:52:05,528:INFO:Importing untrained model
2022-08-16 14:52:05,536:INFO:Bayesian Ridge Imported successfully
2022-08-16 14:52:05,560:INFO:Starting cross validation
2022-08-16 14:52:05,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:06,029:INFO:Calculating mean and std
2022-08-16 14:52:06,037:INFO:Creating metrics dataframe
2022-08-16 14:52:06,045:INFO:Uploading results into container
2022-08-16 14:52:06,045:INFO:Uploading model into container now
2022-08-16 14:52:06,045:INFO:master_model_container: 9
2022-08-16 14:52:06,045:INFO:display_container: 3
2022-08-16 14:52:06,045:INFO:BayesianRidge()
2022-08-16 14:52:06,045:INFO:create_model() successfully completed......................................
2022-08-16 14:52:06,234:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:06,234:INFO:Creating metrics dataframe
2022-08-16 14:52:06,266:INFO:Initializing Passive Aggressive Regressor
2022-08-16 14:52:06,266:INFO:Total runtime is 0.10763669411341349 minutes
2022-08-16 14:52:06,274:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:06,274:INFO:Initializing create_model()
2022-08-16 14:52:06,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:06,274:INFO:Checking exceptions
2022-08-16 14:52:06,282:INFO:Importing libraries
2022-08-16 14:52:06,282:INFO:Copying training dataset
2022-08-16 14:52:06,282:INFO:Defining folds
2022-08-16 14:52:06,290:INFO:Declaring metric variables
2022-08-16 14:52:06,298:INFO:Importing untrained model
2022-08-16 14:52:06,306:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 14:52:06,338:INFO:Starting cross validation
2022-08-16 14:52:06,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:06,859:INFO:Calculating mean and std
2022-08-16 14:52:06,863:INFO:Creating metrics dataframe
2022-08-16 14:52:06,863:INFO:Uploading results into container
2022-08-16 14:52:06,871:INFO:Uploading model into container now
2022-08-16 14:52:06,871:INFO:master_model_container: 10
2022-08-16 14:52:06,871:INFO:display_container: 3
2022-08-16 14:52:06,871:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 14:52:06,871:INFO:create_model() successfully completed......................................
2022-08-16 14:52:07,035:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:07,035:INFO:Creating metrics dataframe
2022-08-16 14:52:07,057:INFO:Initializing Huber Regressor
2022-08-16 14:52:07,057:INFO:Total runtime is 0.12083092133204142 minutes
2022-08-16 14:52:07,066:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:07,066:INFO:Initializing create_model()
2022-08-16 14:52:07,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:07,067:INFO:Checking exceptions
2022-08-16 14:52:07,070:INFO:Importing libraries
2022-08-16 14:52:07,070:INFO:Copying training dataset
2022-08-16 14:52:07,074:INFO:Defining folds
2022-08-16 14:52:07,074:INFO:Declaring metric variables
2022-08-16 14:52:07,083:INFO:Importing untrained model
2022-08-16 14:52:07,094:INFO:Huber Regressor Imported successfully
2022-08-16 14:52:07,110:INFO:Starting cross validation
2022-08-16 14:52:07,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:07,637:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,637:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,637:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,637:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,637:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,653:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,653:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,661:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,812:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,836:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 14:52:07,874:INFO:Calculating mean and std
2022-08-16 14:52:07,879:INFO:Creating metrics dataframe
2022-08-16 14:52:07,883:INFO:Uploading results into container
2022-08-16 14:52:07,884:INFO:Uploading model into container now
2022-08-16 14:52:07,884:INFO:master_model_container: 11
2022-08-16 14:52:07,884:INFO:display_container: 3
2022-08-16 14:52:07,885:INFO:HuberRegressor()
2022-08-16 14:52:07,885:INFO:create_model() successfully completed......................................
2022-08-16 14:52:08,036:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:08,036:INFO:Creating metrics dataframe
2022-08-16 14:52:08,068:INFO:Initializing K Neighbors Regressor
2022-08-16 14:52:08,068:INFO:Total runtime is 0.13767956892649333 minutes
2022-08-16 14:52:08,076:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:08,076:INFO:Initializing create_model()
2022-08-16 14:52:08,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:08,076:INFO:Checking exceptions
2022-08-16 14:52:08,084:INFO:Importing libraries
2022-08-16 14:52:08,084:INFO:Copying training dataset
2022-08-16 14:52:08,092:INFO:Defining folds
2022-08-16 14:52:08,092:INFO:Declaring metric variables
2022-08-16 14:52:08,100:INFO:Importing untrained model
2022-08-16 14:52:08,108:INFO:K Neighbors Regressor Imported successfully
2022-08-16 14:52:08,124:INFO:Starting cross validation
2022-08-16 14:52:08,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:08,811:INFO:Calculating mean and std
2022-08-16 14:52:08,819:INFO:Creating metrics dataframe
2022-08-16 14:52:08,827:INFO:Uploading results into container
2022-08-16 14:52:08,827:INFO:Uploading model into container now
2022-08-16 14:52:08,827:INFO:master_model_container: 12
2022-08-16 14:52:08,827:INFO:display_container: 3
2022-08-16 14:52:08,835:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 14:52:08,835:INFO:create_model() successfully completed......................................
2022-08-16 14:52:09,011:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:09,011:INFO:Creating metrics dataframe
2022-08-16 14:52:09,027:INFO:Initializing Decision Tree Regressor
2022-08-16 14:52:09,027:INFO:Total runtime is 0.15365320841471355 minutes
2022-08-16 14:52:09,029:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:09,029:INFO:Initializing create_model()
2022-08-16 14:52:09,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:09,029:INFO:Checking exceptions
2022-08-16 14:52:09,037:INFO:Importing libraries
2022-08-16 14:52:09,037:INFO:Copying training dataset
2022-08-16 14:52:09,037:INFO:Defining folds
2022-08-16 14:52:09,037:INFO:Declaring metric variables
2022-08-16 14:52:09,045:INFO:Importing untrained model
2022-08-16 14:52:09,053:INFO:Decision Tree Regressor Imported successfully
2022-08-16 14:52:09,077:INFO:Starting cross validation
2022-08-16 14:52:09,077:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:09,503:INFO:Calculating mean and std
2022-08-16 14:52:09,511:INFO:Creating metrics dataframe
2022-08-16 14:52:09,511:INFO:Uploading results into container
2022-08-16 14:52:09,511:INFO:Uploading model into container now
2022-08-16 14:52:09,511:INFO:master_model_container: 13
2022-08-16 14:52:09,519:INFO:display_container: 3
2022-08-16 14:52:09,519:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 14:52:09,519:INFO:create_model() successfully completed......................................
2022-08-16 14:52:09,702:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:09,702:INFO:Creating metrics dataframe
2022-08-16 14:52:09,721:INFO:Initializing Random Forest Regressor
2022-08-16 14:52:09,721:INFO:Total runtime is 0.16521966060002646 minutes
2022-08-16 14:52:09,729:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:09,729:INFO:Initializing create_model()
2022-08-16 14:52:09,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:09,729:INFO:Checking exceptions
2022-08-16 14:52:09,737:INFO:Importing libraries
2022-08-16 14:52:09,737:INFO:Copying training dataset
2022-08-16 14:52:09,745:INFO:Defining folds
2022-08-16 14:52:09,745:INFO:Declaring metric variables
2022-08-16 14:52:09,753:INFO:Importing untrained model
2022-08-16 14:52:09,761:INFO:Random Forest Regressor Imported successfully
2022-08-16 14:52:09,777:INFO:Starting cross validation
2022-08-16 14:52:09,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:11,535:INFO:Calculating mean and std
2022-08-16 14:52:11,535:INFO:Creating metrics dataframe
2022-08-16 14:52:11,544:INFO:Uploading results into container
2022-08-16 14:52:11,544:INFO:Uploading model into container now
2022-08-16 14:52:11,544:INFO:master_model_container: 14
2022-08-16 14:52:11,544:INFO:display_container: 3
2022-08-16 14:52:11,544:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 14:52:11,544:INFO:create_model() successfully completed......................................
2022-08-16 14:52:11,750:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:11,750:INFO:Creating metrics dataframe
2022-08-16 14:52:11,774:INFO:Initializing Extra Trees Regressor
2022-08-16 14:52:11,774:INFO:Total runtime is 0.19943969249725343 minutes
2022-08-16 14:52:11,782:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:11,782:INFO:Initializing create_model()
2022-08-16 14:52:11,782:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:11,782:INFO:Checking exceptions
2022-08-16 14:52:11,790:INFO:Importing libraries
2022-08-16 14:52:11,790:INFO:Copying training dataset
2022-08-16 14:52:11,798:INFO:Defining folds
2022-08-16 14:52:11,798:INFO:Declaring metric variables
2022-08-16 14:52:11,814:INFO:Importing untrained model
2022-08-16 14:52:11,814:INFO:Extra Trees Regressor Imported successfully
2022-08-16 14:52:11,847:INFO:Starting cross validation
2022-08-16 14:52:11,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:13,475:INFO:Calculating mean and std
2022-08-16 14:52:13,475:INFO:Creating metrics dataframe
2022-08-16 14:52:13,484:INFO:Uploading results into container
2022-08-16 14:52:13,484:INFO:Uploading model into container now
2022-08-16 14:52:13,484:INFO:master_model_container: 15
2022-08-16 14:52:13,484:INFO:display_container: 3
2022-08-16 14:52:13,484:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 14:52:13,484:INFO:create_model() successfully completed......................................
2022-08-16 14:52:13,612:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:13,612:INFO:Creating metrics dataframe
2022-08-16 14:52:13,628:INFO:Initializing AdaBoost Regressor
2022-08-16 14:52:13,628:INFO:Total runtime is 0.23033661842346193 minutes
2022-08-16 14:52:13,640:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:13,640:INFO:Initializing create_model()
2022-08-16 14:52:13,640:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:13,641:INFO:Checking exceptions
2022-08-16 14:52:13,645:INFO:Importing libraries
2022-08-16 14:52:13,645:INFO:Copying training dataset
2022-08-16 14:52:13,649:INFO:Defining folds
2022-08-16 14:52:13,649:INFO:Declaring metric variables
2022-08-16 14:52:13,656:INFO:Importing untrained model
2022-08-16 14:52:13,663:INFO:AdaBoost Regressor Imported successfully
2022-08-16 14:52:13,676:INFO:Starting cross validation
2022-08-16 14:52:13,676:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:14,210:INFO:Calculating mean and std
2022-08-16 14:52:14,210:INFO:Creating metrics dataframe
2022-08-16 14:52:14,218:INFO:Uploading results into container
2022-08-16 14:52:14,218:INFO:Uploading model into container now
2022-08-16 14:52:14,218:INFO:master_model_container: 16
2022-08-16 14:52:14,218:INFO:display_container: 3
2022-08-16 14:52:14,218:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 14:52:14,218:INFO:create_model() successfully completed......................................
2022-08-16 14:52:14,360:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:14,360:INFO:Creating metrics dataframe
2022-08-16 14:52:14,377:INFO:Initializing Gradient Boosting Regressor
2022-08-16 14:52:14,377:INFO:Total runtime is 0.24281766017278036 minutes
2022-08-16 14:52:14,385:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:14,385:INFO:Initializing create_model()
2022-08-16 14:52:14,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:14,385:INFO:Checking exceptions
2022-08-16 14:52:14,385:INFO:Importing libraries
2022-08-16 14:52:14,385:INFO:Copying training dataset
2022-08-16 14:52:14,393:INFO:Defining folds
2022-08-16 14:52:14,394:INFO:Declaring metric variables
2022-08-16 14:52:14,394:INFO:Importing untrained model
2022-08-16 14:52:14,402:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 14:52:14,419:INFO:Starting cross validation
2022-08-16 14:52:14,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:15,101:INFO:Calculating mean and std
2022-08-16 14:52:15,101:INFO:Creating metrics dataframe
2022-08-16 14:52:15,111:INFO:Uploading results into container
2022-08-16 14:52:15,111:INFO:Uploading model into container now
2022-08-16 14:52:15,111:INFO:master_model_container: 17
2022-08-16 14:52:15,111:INFO:display_container: 3
2022-08-16 14:52:15,111:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 14:52:15,111:INFO:create_model() successfully completed......................................
2022-08-16 14:52:15,251:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:15,251:INFO:Creating metrics dataframe
2022-08-16 14:52:15,267:INFO:Initializing Extreme Gradient Boosting
2022-08-16 14:52:15,267:INFO:Total runtime is 0.25766650835673016 minutes
2022-08-16 14:52:15,267:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:15,276:INFO:Initializing create_model()
2022-08-16 14:52:15,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:15,276:INFO:Checking exceptions
2022-08-16 14:52:15,277:INFO:Importing libraries
2022-08-16 14:52:15,277:INFO:Copying training dataset
2022-08-16 14:52:15,285:INFO:Defining folds
2022-08-16 14:52:15,285:INFO:Declaring metric variables
2022-08-16 14:52:15,285:INFO:Importing untrained model
2022-08-16 14:52:15,293:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 14:52:15,308:INFO:Starting cross validation
2022-08-16 14:52:15,311:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:16,495:INFO:Calculating mean and std
2022-08-16 14:52:16,503:INFO:Creating metrics dataframe
2022-08-16 14:52:16,503:INFO:Uploading results into container
2022-08-16 14:52:16,503:INFO:Uploading model into container now
2022-08-16 14:52:16,503:INFO:master_model_container: 18
2022-08-16 14:52:16,503:INFO:display_container: 3
2022-08-16 14:52:16,503:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 14:52:16,511:INFO:create_model() successfully completed......................................
2022-08-16 14:52:16,652:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:16,652:INFO:Creating metrics dataframe
2022-08-16 14:52:16,676:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 14:52:16,676:INFO:Total runtime is 0.2811427394549052 minutes
2022-08-16 14:52:16,676:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:16,684:INFO:Initializing create_model()
2022-08-16 14:52:16,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:16,685:INFO:Checking exceptions
2022-08-16 14:52:16,685:INFO:Importing libraries
2022-08-16 14:52:16,685:INFO:Copying training dataset
2022-08-16 14:52:16,685:INFO:Defining folds
2022-08-16 14:52:16,685:INFO:Declaring metric variables
2022-08-16 14:52:16,692:INFO:Importing untrained model
2022-08-16 14:52:16,700:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 14:52:16,710:INFO:Starting cross validation
2022-08-16 14:52:16,718:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:19,807:INFO:Calculating mean and std
2022-08-16 14:52:19,811:INFO:Creating metrics dataframe
2022-08-16 14:52:19,817:INFO:Uploading results into container
2022-08-16 14:52:19,818:INFO:Uploading model into container now
2022-08-16 14:52:19,818:INFO:master_model_container: 19
2022-08-16 14:52:19,819:INFO:display_container: 3
2022-08-16 14:52:19,820:INFO:LGBMRegressor(random_state=123)
2022-08-16 14:52:19,820:INFO:create_model() successfully completed......................................
2022-08-16 14:52:20,017:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:20,017:INFO:Creating metrics dataframe
2022-08-16 14:52:20,051:INFO:Initializing CatBoost Regressor
2022-08-16 14:52:20,051:INFO:Total runtime is 0.33738516966501875 minutes
2022-08-16 14:52:20,061:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:20,061:INFO:Initializing create_model()
2022-08-16 14:52:20,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:20,062:INFO:Checking exceptions
2022-08-16 14:52:20,066:INFO:Importing libraries
2022-08-16 14:52:20,066:INFO:Copying training dataset
2022-08-16 14:52:20,076:INFO:Defining folds
2022-08-16 14:52:20,077:INFO:Declaring metric variables
2022-08-16 14:52:20,089:INFO:Importing untrained model
2022-08-16 14:52:20,099:INFO:CatBoost Regressor Imported successfully
2022-08-16 14:52:20,115:INFO:Starting cross validation
2022-08-16 14:52:20,115:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:25,643:INFO:Calculating mean and std
2022-08-16 14:52:25,651:INFO:Creating metrics dataframe
2022-08-16 14:52:25,659:INFO:Uploading results into container
2022-08-16 14:52:25,659:INFO:Uploading model into container now
2022-08-16 14:52:25,667:INFO:master_model_container: 20
2022-08-16 14:52:25,667:INFO:display_container: 3
2022-08-16 14:52:25,667:INFO:<catboost.core.CatBoostRegressor object at 0x000001B470707DC0>
2022-08-16 14:52:25,667:INFO:create_model() successfully completed......................................
2022-08-16 14:52:25,958:WARNING:create_model() for <catboost.core.CatBoostRegressor object at 0x000001B470707DC0> raised an exception or returned all 0.0, trying without fit_kwargs:
2022-08-16 14:52:25,958:WARNING:Traceback (most recent call last):
  File "c:\Users\user\anaconda3\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    assert (
AssertionError

2022-08-16 14:52:25,958:INFO:Initializing create_model()
2022-08-16 14:52:25,958:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:25,958:INFO:Checking exceptions
2022-08-16 14:52:25,966:INFO:Importing libraries
2022-08-16 14:52:25,966:INFO:Copying training dataset
2022-08-16 14:52:25,974:INFO:Defining folds
2022-08-16 14:52:25,982:INFO:Declaring metric variables
2022-08-16 14:52:25,990:INFO:Importing untrained model
2022-08-16 14:52:25,998:INFO:CatBoost Regressor Imported successfully
2022-08-16 14:52:26,014:INFO:Starting cross validation
2022-08-16 14:52:26,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:35,383:INFO:Calculating mean and std
2022-08-16 14:52:35,391:INFO:Creating metrics dataframe
2022-08-16 14:52:35,399:INFO:Uploading results into container
2022-08-16 14:52:35,399:INFO:Uploading model into container now
2022-08-16 14:52:35,407:INFO:master_model_container: 21
2022-08-16 14:52:35,407:INFO:display_container: 3
2022-08-16 14:52:35,407:INFO:<catboost.core.CatBoostRegressor object at 0x000001B4706FCE20>
2022-08-16 14:52:35,407:INFO:create_model() successfully completed......................................
2022-08-16 14:52:35,807:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:35,807:INFO:Creating metrics dataframe
2022-08-16 14:52:35,870:INFO:Initializing Dummy Regressor
2022-08-16 14:52:35,870:INFO:Total runtime is 0.6010501066843669 minutes
2022-08-16 14:52:35,878:INFO:SubProcess create_model() called ==================================
2022-08-16 14:52:35,878:INFO:Initializing create_model()
2022-08-16 14:52:35,878:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B46944E7F0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:35,878:INFO:Checking exceptions
2022-08-16 14:52:35,886:INFO:Importing libraries
2022-08-16 14:52:35,886:INFO:Copying training dataset
2022-08-16 14:52:35,894:INFO:Defining folds
2022-08-16 14:52:35,902:INFO:Declaring metric variables
2022-08-16 14:52:35,910:INFO:Importing untrained model
2022-08-16 14:52:35,918:INFO:Dummy Regressor Imported successfully
2022-08-16 14:52:35,934:INFO:Starting cross validation
2022-08-16 14:52:35,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 14:52:36,465:INFO:Calculating mean and std
2022-08-16 14:52:36,473:INFO:Creating metrics dataframe
2022-08-16 14:52:36,481:INFO:Uploading results into container
2022-08-16 14:52:36,481:INFO:Uploading model into container now
2022-08-16 14:52:36,481:INFO:master_model_container: 22
2022-08-16 14:52:36,481:INFO:display_container: 3
2022-08-16 14:52:36,481:INFO:DummyRegressor()
2022-08-16 14:52:36,481:INFO:create_model() successfully completed......................................
2022-08-16 14:52:36,668:INFO:SubProcess create_model() end ==================================
2022-08-16 14:52:36,668:INFO:Creating metrics dataframe
2022-08-16 14:52:36,708:INFO:Initializing create_model()
2022-08-16 14:52:36,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 14:52:36,708:INFO:Checking exceptions
2022-08-16 14:52:36,708:INFO:Importing libraries
2022-08-16 14:52:36,716:INFO:Copying training dataset
2022-08-16 14:52:36,716:INFO:Defining folds
2022-08-16 14:52:36,716:INFO:Declaring metric variables
2022-08-16 14:52:36,716:INFO:Importing untrained model
2022-08-16 14:52:36,716:INFO:Declaring custom model
2022-08-16 14:52:36,716:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 14:52:36,716:INFO:Cross validation set to False
2022-08-16 14:52:36,716:INFO:Fitting Model
2022-08-16 14:52:36,999:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 14:52:36,999:INFO:create_model() successfully completed......................................
2022-08-16 14:52:37,205:INFO:master_model_container: 22
2022-08-16 14:52:37,205:INFO:display_container: 3
2022-08-16 14:52:37,206:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 14:52:37,206:INFO:compare_models() successfully completed......................................
2022-08-16 14:52:37,704:INFO:Initializing plot_model()
2022-08-16 14:52:37,705:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, system=True)
2022-08-16 14:52:37,705:INFO:Checking exceptions
2022-08-16 14:52:37,743:INFO:Preloading libraries
2022-08-16 14:52:37,759:INFO:Copying training dataset
2022-08-16 14:52:37,759:INFO:Plot type: feature
2022-08-16 14:52:37,759:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 14:52:38,900:INFO:Visual Rendered Successfully
2022-08-16 14:52:39,062:INFO:plot_model() successfully completed......................................
2022-08-16 14:52:39,126:INFO:Initializing plot_model()
2022-08-16 14:52:39,126:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46944E940>, system=True)
2022-08-16 14:52:39,126:INFO:Checking exceptions
2022-08-16 14:52:39,134:INFO:Preloading libraries
2022-08-16 14:52:39,134:INFO:Copying training dataset
2022-08-16 14:52:39,134:INFO:Plot type: residuals
2022-08-16 14:52:39,518:INFO:Fitting Model
2022-08-16 14:52:39,582:INFO:Scoring test/hold-out set
2022-08-16 14:52:41,050:INFO:Visual Rendered Successfully
2022-08-16 14:52:41,191:INFO:plot_model() successfully completed......................................
2022-08-16 14:52:41,371:INFO:Initializing save_model()
2022-08-16 14:52:41,371:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 14:52:41,371:INFO:Adding model into prep_pipe
2022-08-16 14:52:41,387:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 14:52:41,427:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 14:52:41,427:INFO:save_model() successfully completed......................................
2022-08-16 14:54:31,528:INFO:Initializing load_model()
2022-08-16 14:54:31,536:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:01:02,620:INFO:Initializing load_model()
2022-08-16 15:01:02,620:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:14:52,198:INFO:Initializing load_model()
2022-08-16 15:14:52,198:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:15:05,877:INFO:PyCaret RegressionExperiment
2022-08-16 15:15:05,877:INFO:Logging name: reg-default-name
2022-08-16 15:15:05,877:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 15:15:05,877:INFO:version 3.0.0.rc3
2022-08-16 15:15:05,877:INFO:Initializing setup()
2022-08-16 15:15:05,877:INFO:self.USI: 2c9b
2022-08-16 15:15:05,877:INFO:self.variable_keys: {'variable_keys', '_available_plots', 'X_test', 'fold_generator', 'seed', 'target_param', 'gpu_param', 'log_plots_param', 'exp_name_log', 'n_jobs_param', 'data', '_ml_usecase', '_all_models', 'transform_target_param', 'y_train', 'idx', 'memory', '_all_metrics', 'fold_groups_param', '_all_models_internal', 'USI', 'y_test', 'X_train', 'display_container', 'exp_id', 'transform_target_method_param', 'pipeline', 'html_param', 'fold_shuffle_param', 'y', 'X', '_gpu_n_jobs_param', 'master_model_container', 'logging_param'}
2022-08-16 15:15:05,877:INFO:Checking environment
2022-08-16 15:15:05,877:INFO:python_version: 3.9.12
2022-08-16 15:15:05,877:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 15:15:05,877:INFO:machine: AMD64
2022-08-16 15:15:05,877:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 15:15:05,877:INFO:Memory: svmem(total=8419573760, available=1318264832, percent=84.3, used=7101308928, free=1318264832)
2022-08-16 15:15:05,877:INFO:Physical Core: 4
2022-08-16 15:15:05,877:INFO:Logical Core: 8
2022-08-16 15:15:05,877:INFO:Checking libraries
2022-08-16 15:15:05,877:INFO:System:
2022-08-16 15:15:05,885:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-08-16 15:15:05,885:INFO:executable: c:\Users\user\anaconda3\python.exe
2022-08-16 15:15:05,885:INFO:   machine: Windows-10-10.0.22000-SP0
2022-08-16 15:15:05,885:INFO:PyCaret required dependencies:
2022-08-16 15:15:05,885:INFO:                 pip: 22.2.2
2022-08-16 15:15:05,885:INFO:          setuptools: 61.2.0
2022-08-16 15:15:05,885:INFO:             pycaret: 3.0.0.rc3
2022-08-16 15:15:05,885:INFO:             IPython: 8.2.0
2022-08-16 15:15:05,885:INFO:          ipywidgets: 7.6.5
2022-08-16 15:15:05,885:INFO:                tqdm: 4.64.0
2022-08-16 15:15:05,885:INFO:               numpy: 1.21.5
2022-08-16 15:15:05,885:INFO:              pandas: 1.4.2
2022-08-16 15:15:05,885:INFO:              jinja2: 2.11.3
2022-08-16 15:15:05,885:INFO:               scipy: 1.7.3
2022-08-16 15:15:05,885:INFO:              joblib: 1.1.0
2022-08-16 15:15:05,885:INFO:             sklearn: 1.0.2
2022-08-16 15:15:05,885:INFO:                pyod: Installed but version unavailable
2022-08-16 15:15:05,885:INFO:            imblearn: 0.9.1
2022-08-16 15:15:05,885:INFO:   category_encoders: 2.5.0
2022-08-16 15:15:05,885:INFO:            lightgbm: 3.3.2
2022-08-16 15:15:05,885:INFO:               numba: 0.55.1
2022-08-16 15:15:05,885:INFO:            requests: 2.27.1
2022-08-16 15:15:05,885:INFO:          matplotlib: 3.5.1
2022-08-16 15:15:05,885:INFO:          scikitplot: 0.3.7
2022-08-16 15:15:05,885:INFO:         yellowbrick: 1.4
2022-08-16 15:15:05,885:INFO:              plotly: 5.6.0
2022-08-16 15:15:05,885:INFO:             kaleido: 0.2.1
2022-08-16 15:15:05,885:INFO:         statsmodels: 0.13.2
2022-08-16 15:15:05,885:INFO:              sktime: 0.11.4
2022-08-16 15:15:05,885:INFO:               tbats: Installed but version unavailable
2022-08-16 15:15:05,885:INFO:            pmdarima: 1.8.5
2022-08-16 15:15:05,885:INFO:              psutil: 5.9.1
2022-08-16 15:15:05,885:INFO:None
2022-08-16 15:15:05,885:INFO:Set up data.
2022-08-16 15:15:05,893:INFO:Set up train/test split.
2022-08-16 15:15:05,901:INFO:Set up folding strategy.
2022-08-16 15:15:05,901:INFO:Assigning column types.
2022-08-16 15:15:05,909:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-16 15:15:05,909:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:15:05,917:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:15:05,925:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,097:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:06,097:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:06,097:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,105:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,113:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,209:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,281:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:06,289:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:06,289:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-16 15:15:06,297:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,305:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,455:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:06,463:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:06,471:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,480:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,571:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,647:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,647:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:06,647:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:06,647:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-16 15:15:06,663:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,752:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,824:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,824:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:06,824:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:06,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,932:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:06,998:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,006:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:07,006:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-16 15:15:07,136:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,208:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,208:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:07,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,376:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,376:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,384:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:07,384:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-16 15:15:07,472:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,539:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,539:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:07,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:15:07,688:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,698:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:07,698:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-16 15:15:07,863:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:07,871:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:08,030:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:08,038:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:08,038:INFO:Preparing preprocessing pipeline...
2022-08-16 15:15:08,038:INFO:Set up simple imputation.
2022-08-16 15:15:08,048:INFO:Set up encoding of ordinal features.
2022-08-16 15:15:08,048:INFO:Set up encoding of categorical features.
2022-08-16 15:15:08,048:INFO:Set up variance threshold.
2022-08-16 15:15:08,172:INFO:Finished creating preprocessing pipeline.
2022-08-16 15:15:08,188:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-16 15:15:08,188:INFO:Creating final display dataframe.
2022-08-16 15:15:08,447:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        Regression
3                 Data shape        (1338, 10)
4           Train data shape         (936, 10)
5            Test data shape         (402, 10)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              2c9b
2022-08-16 15:15:08,622:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:08,631:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:08,782:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:15:08,785:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:15:08,792:INFO:setup() successfully completed in 2.91s...............
2022-08-16 15:15:09,012:INFO:Initializing create_model()
2022-08-16 15:15:09,012:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:09,012:INFO:Checking exceptions
2022-08-16 15:15:09,068:INFO:Importing libraries
2022-08-16 15:15:09,068:INFO:Copying training dataset
2022-08-16 15:15:09,076:INFO:Defining folds
2022-08-16 15:15:09,076:INFO:Declaring metric variables
2022-08-16 15:15:09,076:INFO:Importing untrained model
2022-08-16 15:15:09,084:INFO:Linear Regression Imported successfully
2022-08-16 15:15:09,092:INFO:Starting cross validation
2022-08-16 15:15:09,100:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:22,436:INFO:Calculating mean and std
2022-08-16 15:15:22,436:INFO:Creating metrics dataframe
2022-08-16 15:15:22,446:INFO:Finalizing model
2022-08-16 15:15:22,513:INFO:Uploading results into container
2022-08-16 15:15:22,513:INFO:Uploading model into container now
2022-08-16 15:15:22,537:INFO:master_model_container: 1
2022-08-16 15:15:22,537:INFO:display_container: 2
2022-08-16 15:15:22,537:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:15:22,537:INFO:create_model() successfully completed......................................
2022-08-16 15:15:23,092:INFO:Initializing compare_models()
2022-08-16 15:15:23,092:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-16 15:15:23,092:INFO:Checking exceptions
2022-08-16 15:15:23,097:INFO:Preparing display monitor
2022-08-16 15:15:23,170:INFO:Initializing Linear Regression
2022-08-16 15:15:23,170:INFO:Total runtime is 0.0 minutes
2022-08-16 15:15:23,178:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:23,178:INFO:Initializing create_model()
2022-08-16 15:15:23,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:23,178:INFO:Checking exceptions
2022-08-16 15:15:23,186:INFO:Importing libraries
2022-08-16 15:15:23,186:INFO:Copying training dataset
2022-08-16 15:15:23,186:INFO:Defining folds
2022-08-16 15:15:23,186:INFO:Declaring metric variables
2022-08-16 15:15:23,194:INFO:Importing untrained model
2022-08-16 15:15:23,202:INFO:Linear Regression Imported successfully
2022-08-16 15:15:23,226:INFO:Starting cross validation
2022-08-16 15:15:23,226:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:23,615:INFO:Calculating mean and std
2022-08-16 15:15:23,615:INFO:Creating metrics dataframe
2022-08-16 15:15:23,623:INFO:Uploading results into container
2022-08-16 15:15:23,623:INFO:Uploading model into container now
2022-08-16 15:15:23,623:INFO:master_model_container: 2
2022-08-16 15:15:23,623:INFO:display_container: 3
2022-08-16 15:15:23,623:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:15:23,623:INFO:create_model() successfully completed......................................
2022-08-16 15:15:23,747:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:23,755:INFO:Creating metrics dataframe
2022-08-16 15:15:23,763:INFO:Initializing Lasso Regression
2022-08-16 15:15:23,763:INFO:Total runtime is 0.009872663021087646 minutes
2022-08-16 15:15:23,771:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:23,771:INFO:Initializing create_model()
2022-08-16 15:15:23,771:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:23,771:INFO:Checking exceptions
2022-08-16 15:15:23,771:INFO:Importing libraries
2022-08-16 15:15:23,771:INFO:Copying training dataset
2022-08-16 15:15:23,779:INFO:Defining folds
2022-08-16 15:15:23,779:INFO:Declaring metric variables
2022-08-16 15:15:23,779:INFO:Importing untrained model
2022-08-16 15:15:23,787:INFO:Lasso Regression Imported successfully
2022-08-16 15:15:23,795:INFO:Starting cross validation
2022-08-16 15:15:23,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:24,167:INFO:Calculating mean and std
2022-08-16 15:15:24,167:INFO:Creating metrics dataframe
2022-08-16 15:15:24,175:INFO:Uploading results into container
2022-08-16 15:15:24,175:INFO:Uploading model into container now
2022-08-16 15:15:24,175:INFO:master_model_container: 3
2022-08-16 15:15:24,175:INFO:display_container: 3
2022-08-16 15:15:24,175:INFO:Lasso(random_state=123)
2022-08-16 15:15:24,175:INFO:create_model() successfully completed......................................
2022-08-16 15:15:24,320:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:24,320:INFO:Creating metrics dataframe
2022-08-16 15:15:24,328:INFO:Initializing Ridge Regression
2022-08-16 15:15:24,328:INFO:Total runtime is 0.019291746616363525 minutes
2022-08-16 15:15:24,336:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:24,336:INFO:Initializing create_model()
2022-08-16 15:15:24,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:24,336:INFO:Checking exceptions
2022-08-16 15:15:24,336:INFO:Importing libraries
2022-08-16 15:15:24,336:INFO:Copying training dataset
2022-08-16 15:15:24,345:INFO:Defining folds
2022-08-16 15:15:24,345:INFO:Declaring metric variables
2022-08-16 15:15:24,353:INFO:Importing untrained model
2022-08-16 15:15:24,361:INFO:Ridge Regression Imported successfully
2022-08-16 15:15:24,369:INFO:Starting cross validation
2022-08-16 15:15:24,369:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:24,781:INFO:Calculating mean and std
2022-08-16 15:15:24,781:INFO:Creating metrics dataframe
2022-08-16 15:15:24,789:INFO:Uploading results into container
2022-08-16 15:15:24,789:INFO:Uploading model into container now
2022-08-16 15:15:24,789:INFO:master_model_container: 4
2022-08-16 15:15:24,789:INFO:display_container: 3
2022-08-16 15:15:24,789:INFO:Ridge(random_state=123)
2022-08-16 15:15:24,789:INFO:create_model() successfully completed......................................
2022-08-16 15:15:25,005:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:25,005:INFO:Creating metrics dataframe
2022-08-16 15:15:25,030:INFO:Initializing Elastic Net
2022-08-16 15:15:25,030:INFO:Total runtime is 0.03099247217178345 minutes
2022-08-16 15:15:25,038:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:25,038:INFO:Initializing create_model()
2022-08-16 15:15:25,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:25,038:INFO:Checking exceptions
2022-08-16 15:15:25,038:INFO:Importing libraries
2022-08-16 15:15:25,038:INFO:Copying training dataset
2022-08-16 15:15:25,054:INFO:Defining folds
2022-08-16 15:15:25,054:INFO:Declaring metric variables
2022-08-16 15:15:25,062:INFO:Importing untrained model
2022-08-16 15:15:25,070:INFO:Elastic Net Imported successfully
2022-08-16 15:15:25,086:INFO:Starting cross validation
2022-08-16 15:15:25,086:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:25,551:INFO:Calculating mean and std
2022-08-16 15:15:25,551:INFO:Creating metrics dataframe
2022-08-16 15:15:25,559:INFO:Uploading results into container
2022-08-16 15:15:25,559:INFO:Uploading model into container now
2022-08-16 15:15:25,559:INFO:master_model_container: 5
2022-08-16 15:15:25,567:INFO:display_container: 3
2022-08-16 15:15:25,567:INFO:ElasticNet(random_state=123)
2022-08-16 15:15:25,567:INFO:create_model() successfully completed......................................
2022-08-16 15:15:25,768:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:25,768:INFO:Creating metrics dataframe
2022-08-16 15:15:25,796:INFO:Initializing Least Angle Regression
2022-08-16 15:15:25,797:INFO:Total runtime is 0.043777128060658775 minutes
2022-08-16 15:15:25,805:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:25,806:INFO:Initializing create_model()
2022-08-16 15:15:25,806:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:25,806:INFO:Checking exceptions
2022-08-16 15:15:25,811:INFO:Importing libraries
2022-08-16 15:15:25,811:INFO:Copying training dataset
2022-08-16 15:15:25,824:INFO:Defining folds
2022-08-16 15:15:25,824:INFO:Declaring metric variables
2022-08-16 15:15:25,832:INFO:Importing untrained model
2022-08-16 15:15:25,848:INFO:Least Angle Regression Imported successfully
2022-08-16 15:15:25,872:INFO:Starting cross validation
2022-08-16 15:15:25,872:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:26,067:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,069:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,069:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,085:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,085:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,101:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,117:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,149:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,237:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,237:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:26,270:INFO:Calculating mean and std
2022-08-16 15:15:26,277:INFO:Creating metrics dataframe
2022-08-16 15:15:26,279:INFO:Uploading results into container
2022-08-16 15:15:26,279:INFO:Uploading model into container now
2022-08-16 15:15:26,279:INFO:master_model_container: 6
2022-08-16 15:15:26,279:INFO:display_container: 3
2022-08-16 15:15:26,279:INFO:Lars(random_state=123)
2022-08-16 15:15:26,279:INFO:create_model() successfully completed......................................
2022-08-16 15:15:26,419:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:26,419:INFO:Creating metrics dataframe
2022-08-16 15:15:26,435:INFO:Initializing Lasso Least Angle Regression
2022-08-16 15:15:26,443:INFO:Total runtime is 0.05454756021499634 minutes
2022-08-16 15:15:26,443:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:26,451:INFO:Initializing create_model()
2022-08-16 15:15:26,451:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:26,451:INFO:Checking exceptions
2022-08-16 15:15:26,451:INFO:Importing libraries
2022-08-16 15:15:26,451:INFO:Copying training dataset
2022-08-16 15:15:26,459:INFO:Defining folds
2022-08-16 15:15:26,459:INFO:Declaring metric variables
2022-08-16 15:15:26,467:INFO:Importing untrained model
2022-08-16 15:15:26,475:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 15:15:26,491:INFO:Starting cross validation
2022-08-16 15:15:26,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:26,611:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,635:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,654:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,668:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,672:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,699:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,699:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,739:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,787:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,795:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:15:26,827:INFO:Calculating mean and std
2022-08-16 15:15:26,835:INFO:Creating metrics dataframe
2022-08-16 15:15:26,835:INFO:Uploading results into container
2022-08-16 15:15:26,835:INFO:Uploading model into container now
2022-08-16 15:15:26,835:INFO:master_model_container: 7
2022-08-16 15:15:26,835:INFO:display_container: 3
2022-08-16 15:15:26,835:INFO:LassoLars(random_state=123)
2022-08-16 15:15:26,835:INFO:create_model() successfully completed......................................
2022-08-16 15:15:26,995:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:26,995:INFO:Creating metrics dataframe
2022-08-16 15:15:27,012:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 15:15:27,012:INFO:Total runtime is 0.06402547359466554 minutes
2022-08-16 15:15:27,020:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:27,020:INFO:Initializing create_model()
2022-08-16 15:15:27,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:27,020:INFO:Checking exceptions
2022-08-16 15:15:27,020:INFO:Importing libraries
2022-08-16 15:15:27,020:INFO:Copying training dataset
2022-08-16 15:15:27,028:INFO:Defining folds
2022-08-16 15:15:27,028:INFO:Declaring metric variables
2022-08-16 15:15:27,036:INFO:Importing untrained model
2022-08-16 15:15:27,044:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 15:15:27,053:INFO:Starting cross validation
2022-08-16 15:15:27,061:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:27,184:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,203:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,237:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,245:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,253:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,288:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,303:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,328:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,363:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,371:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:15:27,420:INFO:Calculating mean and std
2022-08-16 15:15:27,421:INFO:Creating metrics dataframe
2022-08-16 15:15:27,421:INFO:Uploading results into container
2022-08-16 15:15:27,421:INFO:Uploading model into container now
2022-08-16 15:15:27,428:INFO:master_model_container: 8
2022-08-16 15:15:27,428:INFO:display_container: 3
2022-08-16 15:15:27,428:INFO:OrthogonalMatchingPursuit()
2022-08-16 15:15:27,428:INFO:create_model() successfully completed......................................
2022-08-16 15:15:27,578:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:27,578:INFO:Creating metrics dataframe
2022-08-16 15:15:27,595:INFO:Initializing Bayesian Ridge
2022-08-16 15:15:27,595:INFO:Total runtime is 0.07373544375101726 minutes
2022-08-16 15:15:27,603:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:27,603:INFO:Initializing create_model()
2022-08-16 15:15:27,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:27,603:INFO:Checking exceptions
2022-08-16 15:15:27,603:INFO:Importing libraries
2022-08-16 15:15:27,603:INFO:Copying training dataset
2022-08-16 15:15:27,611:INFO:Defining folds
2022-08-16 15:15:27,611:INFO:Declaring metric variables
2022-08-16 15:15:27,619:INFO:Importing untrained model
2022-08-16 15:15:27,628:INFO:Bayesian Ridge Imported successfully
2022-08-16 15:15:27,644:INFO:Starting cross validation
2022-08-16 15:15:27,644:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:28,095:INFO:Calculating mean and std
2022-08-16 15:15:28,103:INFO:Creating metrics dataframe
2022-08-16 15:15:28,103:INFO:Uploading results into container
2022-08-16 15:15:28,103:INFO:Uploading model into container now
2022-08-16 15:15:28,111:INFO:master_model_container: 9
2022-08-16 15:15:28,111:INFO:display_container: 3
2022-08-16 15:15:28,111:INFO:BayesianRidge()
2022-08-16 15:15:28,111:INFO:create_model() successfully completed......................................
2022-08-16 15:15:28,266:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:28,266:INFO:Creating metrics dataframe
2022-08-16 15:15:28,290:INFO:Initializing Passive Aggressive Regressor
2022-08-16 15:15:28,290:INFO:Total runtime is 0.08532578150431316 minutes
2022-08-16 15:15:28,294:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:28,294:INFO:Initializing create_model()
2022-08-16 15:15:28,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:28,294:INFO:Checking exceptions
2022-08-16 15:15:28,302:INFO:Importing libraries
2022-08-16 15:15:28,302:INFO:Copying training dataset
2022-08-16 15:15:28,302:INFO:Defining folds
2022-08-16 15:15:28,302:INFO:Declaring metric variables
2022-08-16 15:15:28,311:INFO:Importing untrained model
2022-08-16 15:15:28,319:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 15:15:28,327:INFO:Starting cross validation
2022-08-16 15:15:28,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:28,697:INFO:Calculating mean and std
2022-08-16 15:15:28,705:INFO:Creating metrics dataframe
2022-08-16 15:15:28,705:INFO:Uploading results into container
2022-08-16 15:15:28,714:INFO:Uploading model into container now
2022-08-16 15:15:28,715:INFO:master_model_container: 10
2022-08-16 15:15:28,715:INFO:display_container: 3
2022-08-16 15:15:28,715:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 15:15:28,715:INFO:create_model() successfully completed......................................
2022-08-16 15:15:28,852:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:28,852:INFO:Creating metrics dataframe
2022-08-16 15:15:28,869:INFO:Initializing Huber Regressor
2022-08-16 15:15:28,869:INFO:Total runtime is 0.09497629801432293 minutes
2022-08-16 15:15:28,879:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:28,879:INFO:Initializing create_model()
2022-08-16 15:15:28,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:28,879:INFO:Checking exceptions
2022-08-16 15:15:28,879:INFO:Importing libraries
2022-08-16 15:15:28,879:INFO:Copying training dataset
2022-08-16 15:15:28,887:INFO:Defining folds
2022-08-16 15:15:28,887:INFO:Declaring metric variables
2022-08-16 15:15:28,895:INFO:Importing untrained model
2022-08-16 15:15:28,903:INFO:Huber Regressor Imported successfully
2022-08-16 15:15:28,919:INFO:Starting cross validation
2022-08-16 15:15:28,919:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:29,170:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,186:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,186:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,194:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,196:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,209:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,212:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,228:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,352:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,362:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:15:29,386:INFO:Calculating mean and std
2022-08-16 15:15:29,395:INFO:Creating metrics dataframe
2022-08-16 15:15:29,401:INFO:Uploading results into container
2022-08-16 15:15:29,402:INFO:Uploading model into container now
2022-08-16 15:15:29,402:INFO:master_model_container: 11
2022-08-16 15:15:29,402:INFO:display_container: 3
2022-08-16 15:15:29,402:INFO:HuberRegressor()
2022-08-16 15:15:29,402:INFO:create_model() successfully completed......................................
2022-08-16 15:15:29,545:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:29,545:INFO:Creating metrics dataframe
2022-08-16 15:15:29,569:INFO:Initializing K Neighbors Regressor
2022-08-16 15:15:29,569:INFO:Total runtime is 0.10664660533269248 minutes
2022-08-16 15:15:29,578:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:29,578:INFO:Initializing create_model()
2022-08-16 15:15:29,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:29,578:INFO:Checking exceptions
2022-08-16 15:15:29,578:INFO:Importing libraries
2022-08-16 15:15:29,578:INFO:Copying training dataset
2022-08-16 15:15:29,578:INFO:Defining folds
2022-08-16 15:15:29,593:INFO:Declaring metric variables
2022-08-16 15:15:29,593:INFO:Importing untrained model
2022-08-16 15:15:29,593:INFO:K Neighbors Regressor Imported successfully
2022-08-16 15:15:29,621:INFO:Starting cross validation
2022-08-16 15:15:29,621:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:30,045:INFO:Calculating mean and std
2022-08-16 15:15:30,053:INFO:Creating metrics dataframe
2022-08-16 15:15:30,053:INFO:Uploading results into container
2022-08-16 15:15:30,053:INFO:Uploading model into container now
2022-08-16 15:15:30,053:INFO:master_model_container: 12
2022-08-16 15:15:30,053:INFO:display_container: 3
2022-08-16 15:15:30,061:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 15:15:30,061:INFO:create_model() successfully completed......................................
2022-08-16 15:15:30,220:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:30,220:INFO:Creating metrics dataframe
2022-08-16 15:15:30,236:INFO:Initializing Decision Tree Regressor
2022-08-16 15:15:30,236:INFO:Total runtime is 0.11776228745778403 minutes
2022-08-16 15:15:30,244:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:30,244:INFO:Initializing create_model()
2022-08-16 15:15:30,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:30,244:INFO:Checking exceptions
2022-08-16 15:15:30,252:INFO:Importing libraries
2022-08-16 15:15:30,252:INFO:Copying training dataset
2022-08-16 15:15:30,252:INFO:Defining folds
2022-08-16 15:15:30,252:INFO:Declaring metric variables
2022-08-16 15:15:30,261:INFO:Importing untrained model
2022-08-16 15:15:30,269:INFO:Decision Tree Regressor Imported successfully
2022-08-16 15:15:30,294:INFO:Starting cross validation
2022-08-16 15:15:30,294:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:30,723:INFO:Calculating mean and std
2022-08-16 15:15:30,723:INFO:Creating metrics dataframe
2022-08-16 15:15:30,731:INFO:Uploading results into container
2022-08-16 15:15:30,731:INFO:Uploading model into container now
2022-08-16 15:15:30,731:INFO:master_model_container: 13
2022-08-16 15:15:30,731:INFO:display_container: 3
2022-08-16 15:15:30,731:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 15:15:30,731:INFO:create_model() successfully completed......................................
2022-08-16 15:15:30,859:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:30,859:INFO:Creating metrics dataframe
2022-08-16 15:15:30,883:INFO:Initializing Random Forest Regressor
2022-08-16 15:15:30,883:INFO:Total runtime is 0.12853967746098838 minutes
2022-08-16 15:15:30,887:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:30,888:INFO:Initializing create_model()
2022-08-16 15:15:30,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:30,888:INFO:Checking exceptions
2022-08-16 15:15:30,891:INFO:Importing libraries
2022-08-16 15:15:30,891:INFO:Copying training dataset
2022-08-16 15:15:30,898:INFO:Defining folds
2022-08-16 15:15:30,898:INFO:Declaring metric variables
2022-08-16 15:15:30,903:INFO:Importing untrained model
2022-08-16 15:15:30,909:INFO:Random Forest Regressor Imported successfully
2022-08-16 15:15:30,923:INFO:Starting cross validation
2022-08-16 15:15:30,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:32,395:INFO:Calculating mean and std
2022-08-16 15:15:32,395:INFO:Creating metrics dataframe
2022-08-16 15:15:32,403:INFO:Uploading results into container
2022-08-16 15:15:32,403:INFO:Uploading model into container now
2022-08-16 15:15:32,403:INFO:master_model_container: 14
2022-08-16 15:15:32,403:INFO:display_container: 3
2022-08-16 15:15:32,403:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:15:32,403:INFO:create_model() successfully completed......................................
2022-08-16 15:15:32,536:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:32,536:INFO:Creating metrics dataframe
2022-08-16 15:15:32,551:INFO:Initializing Extra Trees Regressor
2022-08-16 15:15:32,551:INFO:Total runtime is 0.15633515516916913 minutes
2022-08-16 15:15:32,551:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:32,559:INFO:Initializing create_model()
2022-08-16 15:15:32,559:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:32,559:INFO:Checking exceptions
2022-08-16 15:15:32,560:INFO:Importing libraries
2022-08-16 15:15:32,560:INFO:Copying training dataset
2022-08-16 15:15:32,568:INFO:Defining folds
2022-08-16 15:15:32,568:INFO:Declaring metric variables
2022-08-16 15:15:32,568:INFO:Importing untrained model
2022-08-16 15:15:32,578:INFO:Extra Trees Regressor Imported successfully
2022-08-16 15:15:32,586:INFO:Starting cross validation
2022-08-16 15:15:32,594:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:34,118:INFO:Calculating mean and std
2022-08-16 15:15:34,118:INFO:Creating metrics dataframe
2022-08-16 15:15:34,134:INFO:Uploading results into container
2022-08-16 15:15:34,134:INFO:Uploading model into container now
2022-08-16 15:15:34,134:INFO:master_model_container: 15
2022-08-16 15:15:34,134:INFO:display_container: 3
2022-08-16 15:15:34,134:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:15:34,134:INFO:create_model() successfully completed......................................
2022-08-16 15:15:34,351:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:34,351:INFO:Creating metrics dataframe
2022-08-16 15:15:34,391:INFO:Initializing AdaBoost Regressor
2022-08-16 15:15:34,391:INFO:Total runtime is 0.18700229724248252 minutes
2022-08-16 15:15:34,407:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:34,407:INFO:Initializing create_model()
2022-08-16 15:15:34,407:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:34,407:INFO:Checking exceptions
2022-08-16 15:15:34,407:INFO:Importing libraries
2022-08-16 15:15:34,407:INFO:Copying training dataset
2022-08-16 15:15:34,415:INFO:Defining folds
2022-08-16 15:15:34,415:INFO:Declaring metric variables
2022-08-16 15:15:34,423:INFO:Importing untrained model
2022-08-16 15:15:34,431:INFO:AdaBoost Regressor Imported successfully
2022-08-16 15:15:34,447:INFO:Starting cross validation
2022-08-16 15:15:34,455:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:35,078:INFO:Calculating mean and std
2022-08-16 15:15:35,078:INFO:Creating metrics dataframe
2022-08-16 15:15:35,086:INFO:Uploading results into container
2022-08-16 15:15:35,086:INFO:Uploading model into container now
2022-08-16 15:15:35,086:INFO:master_model_container: 16
2022-08-16 15:15:35,086:INFO:display_container: 3
2022-08-16 15:15:35,086:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 15:15:35,086:INFO:create_model() successfully completed......................................
2022-08-16 15:15:35,310:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:35,310:INFO:Creating metrics dataframe
2022-08-16 15:15:35,351:INFO:Initializing Gradient Boosting Regressor
2022-08-16 15:15:35,352:INFO:Total runtime is 0.2030300259590149 minutes
2022-08-16 15:15:35,363:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:35,366:INFO:Initializing create_model()
2022-08-16 15:15:35,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:35,366:INFO:Checking exceptions
2022-08-16 15:15:35,366:INFO:Importing libraries
2022-08-16 15:15:35,366:INFO:Copying training dataset
2022-08-16 15:15:35,382:INFO:Defining folds
2022-08-16 15:15:35,382:INFO:Declaring metric variables
2022-08-16 15:15:35,390:INFO:Importing untrained model
2022-08-16 15:15:35,406:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:15:35,422:INFO:Starting cross validation
2022-08-16 15:15:35,430:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:36,408:INFO:Calculating mean and std
2022-08-16 15:15:36,416:INFO:Creating metrics dataframe
2022-08-16 15:15:36,424:INFO:Uploading results into container
2022-08-16 15:15:36,424:INFO:Uploading model into container now
2022-08-16 15:15:36,424:INFO:master_model_container: 17
2022-08-16 15:15:36,424:INFO:display_container: 3
2022-08-16 15:15:36,424:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:15:36,424:INFO:create_model() successfully completed......................................
2022-08-16 15:15:36,656:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:36,656:INFO:Creating metrics dataframe
2022-08-16 15:15:36,693:INFO:Initializing Extreme Gradient Boosting
2022-08-16 15:15:36,694:INFO:Total runtime is 0.22539726098378499 minutes
2022-08-16 15:15:36,706:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:36,706:INFO:Initializing create_model()
2022-08-16 15:15:36,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:36,706:INFO:Checking exceptions
2022-08-16 15:15:36,711:INFO:Importing libraries
2022-08-16 15:15:36,713:INFO:Copying training dataset
2022-08-16 15:15:36,721:INFO:Defining folds
2022-08-16 15:15:36,721:INFO:Declaring metric variables
2022-08-16 15:15:36,729:INFO:Importing untrained model
2022-08-16 15:15:36,737:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 15:15:36,761:INFO:Starting cross validation
2022-08-16 15:15:36,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:38,220:INFO:Calculating mean and std
2022-08-16 15:15:38,220:INFO:Creating metrics dataframe
2022-08-16 15:15:38,228:INFO:Uploading results into container
2022-08-16 15:15:38,228:INFO:Uploading model into container now
2022-08-16 15:15:38,228:INFO:master_model_container: 18
2022-08-16 15:15:38,228:INFO:display_container: 3
2022-08-16 15:15:38,236:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 15:15:38,236:INFO:create_model() successfully completed......................................
2022-08-16 15:15:38,453:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:38,453:INFO:Creating metrics dataframe
2022-08-16 15:15:38,485:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 15:15:38,485:INFO:Total runtime is 0.25523384809494015 minutes
2022-08-16 15:15:38,492:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:38,492:INFO:Initializing create_model()
2022-08-16 15:15:38,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:38,492:INFO:Checking exceptions
2022-08-16 15:15:38,500:INFO:Importing libraries
2022-08-16 15:15:38,500:INFO:Copying training dataset
2022-08-16 15:15:38,500:INFO:Defining folds
2022-08-16 15:15:38,508:INFO:Declaring metric variables
2022-08-16 15:15:38,516:INFO:Importing untrained model
2022-08-16 15:15:38,524:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 15:15:38,540:INFO:Starting cross validation
2022-08-16 15:15:38,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:42,408:INFO:Calculating mean and std
2022-08-16 15:15:42,408:INFO:Creating metrics dataframe
2022-08-16 15:15:42,416:INFO:Uploading results into container
2022-08-16 15:15:42,416:INFO:Uploading model into container now
2022-08-16 15:15:42,416:INFO:master_model_container: 19
2022-08-16 15:15:42,416:INFO:display_container: 3
2022-08-16 15:15:42,416:INFO:LGBMRegressor(random_state=123)
2022-08-16 15:15:42,416:INFO:create_model() successfully completed......................................
2022-08-16 15:15:42,551:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:42,551:INFO:Creating metrics dataframe
2022-08-16 15:15:42,569:INFO:Initializing CatBoost Regressor
2022-08-16 15:15:42,569:INFO:Total runtime is 0.323300556341807 minutes
2022-08-16 15:15:42,576:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:42,576:INFO:Initializing create_model()
2022-08-16 15:15:42,576:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:42,576:INFO:Checking exceptions
2022-08-16 15:15:42,584:INFO:Importing libraries
2022-08-16 15:15:42,584:INFO:Copying training dataset
2022-08-16 15:15:42,584:INFO:Defining folds
2022-08-16 15:15:42,584:INFO:Declaring metric variables
2022-08-16 15:15:42,593:INFO:Importing untrained model
2022-08-16 15:15:42,634:INFO:CatBoost Regressor Imported successfully
2022-08-16 15:15:42,657:INFO:Starting cross validation
2022-08-16 15:15:42,661:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:51,492:INFO:Calculating mean and std
2022-08-16 15:15:51,492:INFO:Creating metrics dataframe
2022-08-16 15:15:51,500:INFO:Uploading results into container
2022-08-16 15:15:51,500:INFO:Uploading model into container now
2022-08-16 15:15:51,500:INFO:master_model_container: 20
2022-08-16 15:15:51,500:INFO:display_container: 3
2022-08-16 15:15:51,500:INFO:<catboost.core.CatBoostRegressor object at 0x000001B472B3B0D0>
2022-08-16 15:15:51,500:INFO:create_model() successfully completed......................................
2022-08-16 15:15:51,642:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:51,642:INFO:Creating metrics dataframe
2022-08-16 15:15:51,660:INFO:Initializing Dummy Regressor
2022-08-16 15:15:51,660:INFO:Total runtime is 0.4748172879219055 minutes
2022-08-16 15:15:51,660:INFO:SubProcess create_model() called ==================================
2022-08-16 15:15:51,660:INFO:Initializing create_model()
2022-08-16 15:15:51,660:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B472A0BCA0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:51,660:INFO:Checking exceptions
2022-08-16 15:15:51,668:INFO:Importing libraries
2022-08-16 15:15:51,668:INFO:Copying training dataset
2022-08-16 15:15:51,668:INFO:Defining folds
2022-08-16 15:15:51,668:INFO:Declaring metric variables
2022-08-16 15:15:51,676:INFO:Importing untrained model
2022-08-16 15:15:51,684:INFO:Dummy Regressor Imported successfully
2022-08-16 15:15:51,700:INFO:Starting cross validation
2022-08-16 15:15:51,708:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:15:52,033:INFO:Calculating mean and std
2022-08-16 15:15:52,033:INFO:Creating metrics dataframe
2022-08-16 15:15:52,033:INFO:Uploading results into container
2022-08-16 15:15:52,033:INFO:Uploading model into container now
2022-08-16 15:15:52,033:INFO:master_model_container: 21
2022-08-16 15:15:52,033:INFO:display_container: 3
2022-08-16 15:15:52,033:INFO:DummyRegressor()
2022-08-16 15:15:52,033:INFO:create_model() successfully completed......................................
2022-08-16 15:15:52,167:INFO:SubProcess create_model() end ==================================
2022-08-16 15:15:52,167:INFO:Creating metrics dataframe
2022-08-16 15:15:52,214:INFO:Initializing create_model()
2022-08-16 15:15:52,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:15:52,214:INFO:Checking exceptions
2022-08-16 15:15:52,220:INFO:Importing libraries
2022-08-16 15:15:52,220:INFO:Copying training dataset
2022-08-16 15:15:52,225:INFO:Defining folds
2022-08-16 15:15:52,225:INFO:Declaring metric variables
2022-08-16 15:15:52,225:INFO:Importing untrained model
2022-08-16 15:15:52,226:INFO:Declaring custom model
2022-08-16 15:15:52,228:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:15:52,229:INFO:Cross validation set to False
2022-08-16 15:15:52,229:INFO:Fitting Model
2022-08-16 15:15:52,511:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:15:52,511:INFO:create_model() successfully completed......................................
2022-08-16 15:15:52,778:INFO:master_model_container: 21
2022-08-16 15:15:52,778:INFO:display_container: 3
2022-08-16 15:15:52,778:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:15:52,778:INFO:compare_models() successfully completed......................................
2022-08-16 15:15:53,106:INFO:Initializing plot_model()
2022-08-16 15:15:53,106:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, system=True)
2022-08-16 15:15:53,106:INFO:Checking exceptions
2022-08-16 15:15:53,122:INFO:Preloading libraries
2022-08-16 15:15:53,143:INFO:Copying training dataset
2022-08-16 15:15:53,143:INFO:Plot type: feature
2022-08-16 15:15:53,143:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 15:15:53,474:INFO:Visual Rendered Successfully
2022-08-16 15:15:53,626:INFO:plot_model() successfully completed......................................
2022-08-16 15:15:53,692:INFO:Initializing plot_model()
2022-08-16 15:15:53,693:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B46A23DF70>, system=True)
2022-08-16 15:15:53,693:INFO:Checking exceptions
2022-08-16 15:15:53,699:INFO:Preloading libraries
2022-08-16 15:15:53,700:INFO:Copying training dataset
2022-08-16 15:15:53,700:INFO:Plot type: residuals
2022-08-16 15:15:54,067:INFO:Fitting Model
2022-08-16 15:15:54,147:INFO:Scoring test/hold-out set
2022-08-16 15:15:54,692:INFO:Visual Rendered Successfully
2022-08-16 15:15:54,850:INFO:plot_model() successfully completed......................................
2022-08-16 15:15:54,940:INFO:Initializing save_model()
2022-08-16 15:15:54,940:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 15:15:54,940:INFO:Adding model into prep_pipe
2022-08-16 15:15:54,951:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 15:15:54,973:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 15:15:54,973:INFO:save_model() successfully completed......................................
2022-08-16 15:16:13,840:INFO:Initializing load_model()
2022-08-16 15:16:13,840:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:17:45,792:INFO:Initializing load_model()
2022-08-16 15:18:17,220:INFO:Initializing load_model()
2022-08-16 15:18:36,322:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:18:36,322:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:19:37,371:INFO:Initializing load_model()
2022-08-16 15:19:37,371:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:40:02,892:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:40:02,900:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:40:02,900:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:40:02,900:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:40:04,814:INFO:PyCaret RegressionExperiment
2022-08-16 15:40:04,814:INFO:Logging name: reg-default-name
2022-08-16 15:40:04,814:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 15:40:04,814:INFO:version 3.0.0.rc3
2022-08-16 15:40:04,814:INFO:Initializing setup()
2022-08-16 15:40:04,814:INFO:self.USI: 3b8c
2022-08-16 15:40:04,814:INFO:self.variable_keys: {'display_container', 'memory', 'html_param', 'target_param', 'fold_generator', '_gpu_n_jobs_param', 'logging_param', 'n_jobs_param', 'transform_target_param', 'X_test', 'y_train', 'fold_groups_param', 'exp_id', 'X', 'master_model_container', 'gpu_param', 'fold_shuffle_param', 'data', 'pipeline', '_all_metrics', 'seed', '_all_models_internal', 'y_test', 'X_train', 'USI', 'log_plots_param', 'transform_target_method_param', '_all_models', '_ml_usecase', 'idx', '_available_plots', 'exp_name_log', 'variable_keys', 'y'}
2022-08-16 15:40:04,814:INFO:Checking environment
2022-08-16 15:40:04,814:INFO:python_version: 3.9.12
2022-08-16 15:40:04,814:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 15:40:04,814:INFO:machine: AMD64
2022-08-16 15:40:04,814:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 15:40:04,814:INFO:Memory: svmem(total=8419573760, available=1036312576, percent=87.7, used=7383261184, free=1036312576)
2022-08-16 15:40:04,814:INFO:Physical Core: 4
2022-08-16 15:40:04,814:INFO:Logical Core: 8
2022-08-16 15:40:04,814:INFO:Checking libraries
2022-08-16 15:40:04,814:INFO:System:
2022-08-16 15:40:04,814:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-08-16 15:40:04,814:INFO:executable: C:\Users\user\anaconda3\python.exe
2022-08-16 15:40:04,814:INFO:   machine: Windows-10-10.0.22000-SP0
2022-08-16 15:40:04,814:INFO:PyCaret required dependencies:
2022-08-16 15:40:06,203:INFO:                 pip: 22.2.2
2022-08-16 15:40:06,203:INFO:          setuptools: 61.2.0
2022-08-16 15:40:06,203:INFO:             pycaret: 3.0.0.rc3
2022-08-16 15:40:06,203:INFO:             IPython: 8.2.0
2022-08-16 15:40:06,203:INFO:          ipywidgets: 7.6.5
2022-08-16 15:40:06,203:INFO:                tqdm: 4.64.0
2022-08-16 15:40:06,203:INFO:               numpy: 1.21.5
2022-08-16 15:40:06,203:INFO:              pandas: 1.4.2
2022-08-16 15:40:06,203:INFO:              jinja2: 2.11.3
2022-08-16 15:40:06,203:INFO:               scipy: 1.7.3
2022-08-16 15:40:06,203:INFO:              joblib: 1.1.0
2022-08-16 15:40:06,203:INFO:             sklearn: 1.0.2
2022-08-16 15:40:06,203:INFO:                pyod: Installed but version unavailable
2022-08-16 15:40:06,203:INFO:            imblearn: 0.9.1
2022-08-16 15:40:06,203:INFO:   category_encoders: 2.5.0
2022-08-16 15:40:06,203:INFO:            lightgbm: 3.3.2
2022-08-16 15:40:06,203:INFO:               numba: 0.55.1
2022-08-16 15:40:06,203:INFO:            requests: 2.27.1
2022-08-16 15:40:06,203:INFO:          matplotlib: 3.5.1
2022-08-16 15:40:06,203:INFO:          scikitplot: 0.3.7
2022-08-16 15:40:06,203:INFO:         yellowbrick: 1.4
2022-08-16 15:40:06,203:INFO:              plotly: 5.6.0
2022-08-16 15:40:06,203:INFO:             kaleido: 0.2.1
2022-08-16 15:40:06,203:INFO:         statsmodels: 0.13.2
2022-08-16 15:40:06,203:INFO:              sktime: 0.11.4
2022-08-16 15:40:06,203:INFO:               tbats: Installed but version unavailable
2022-08-16 15:40:06,203:INFO:            pmdarima: 1.8.5
2022-08-16 15:40:06,203:INFO:              psutil: 5.9.1
2022-08-16 15:40:06,203:INFO:None
2022-08-16 15:40:06,203:INFO:Set up data.
2022-08-16 15:40:06,211:INFO:Set up train/test split.
2022-08-16 15:40:06,219:INFO:Set up folding strategy.
2022-08-16 15:40:06,219:INFO:Assigning column types.
2022-08-16 15:40:06,219:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-16 15:40:06,219:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,227:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,227:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,291:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,490:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:06,716:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:06,716:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,724:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,796:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,876:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,876:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:06,884:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:06,884:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-16 15:40:06,892:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:40:06,908:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,108:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,108:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,116:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,132:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,236:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,284:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,292:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,292:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-16 15:40:07,300:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,364:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,412:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,420:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,428:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,484:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,532:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,540:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,540:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-16 15:40:07,612:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,652:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,660:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,724:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,783:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:40:07,784:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:07,789:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:07,789:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-16 15:40:07,900:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:08,004:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:08,012:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:08,140:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:40:08,220:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:08,228:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:08,228:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-16 15:40:08,356:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:08,364:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:08,484:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:08,492:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:08,532:INFO:Preparing preprocessing pipeline...
2022-08-16 15:40:08,532:INFO:Set up simple imputation.
2022-08-16 15:40:08,540:INFO:Set up encoding of ordinal features.
2022-08-16 15:40:08,548:INFO:Set up encoding of categorical features.
2022-08-16 15:40:08,548:INFO:Set up variance threshold.
2022-08-16 15:40:08,590:INFO:Finished creating preprocessing pipeline.
2022-08-16 15:40:08,606:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-16 15:40:08,606:INFO:Creating final display dataframe.
2022-08-16 15:40:08,814:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        Regression
3                 Data shape        (1338, 10)
4           Train data shape         (936, 10)
5            Test data shape         (402, 10)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              3b8c
2022-08-16 15:40:08,990:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:08,998:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:09,207:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:40:09,215:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:40:09,223:INFO:setup() successfully completed in 4.42s...............
2022-08-16 15:40:09,262:INFO:Initializing create_model()
2022-08-16 15:40:09,262:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:09,262:INFO:Checking exceptions
2022-08-16 15:40:09,334:INFO:Importing libraries
2022-08-16 15:40:09,334:INFO:Copying training dataset
2022-08-16 15:40:09,342:INFO:Defining folds
2022-08-16 15:40:09,342:INFO:Declaring metric variables
2022-08-16 15:40:09,350:INFO:Importing untrained model
2022-08-16 15:40:09,358:INFO:Linear Regression Imported successfully
2022-08-16 15:40:09,374:INFO:Starting cross validation
2022-08-16 15:40:09,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:20,995:INFO:Calculating mean and std
2022-08-16 15:40:21,003:INFO:Creating metrics dataframe
2022-08-16 15:40:21,011:INFO:Finalizing model
2022-08-16 15:40:21,179:INFO:Uploading results into container
2022-08-16 15:40:21,179:INFO:Uploading model into container now
2022-08-16 15:40:21,195:INFO:master_model_container: 1
2022-08-16 15:40:21,195:INFO:display_container: 2
2022-08-16 15:40:21,203:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:40:21,203:INFO:create_model() successfully completed......................................
2022-08-16 15:40:21,379:INFO:Initializing compare_models()
2022-08-16 15:40:21,379:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-16 15:40:21,379:INFO:Checking exceptions
2022-08-16 15:40:21,387:INFO:Preparing display monitor
2022-08-16 15:40:21,505:INFO:Initializing Linear Regression
2022-08-16 15:40:21,505:INFO:Total runtime is 0.0 minutes
2022-08-16 15:40:21,514:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:21,515:INFO:Initializing create_model()
2022-08-16 15:40:21,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:21,515:INFO:Checking exceptions
2022-08-16 15:40:21,519:INFO:Importing libraries
2022-08-16 15:40:21,520:INFO:Copying training dataset
2022-08-16 15:40:21,524:INFO:Defining folds
2022-08-16 15:40:21,524:INFO:Declaring metric variables
2022-08-16 15:40:21,530:INFO:Importing untrained model
2022-08-16 15:40:21,538:INFO:Linear Regression Imported successfully
2022-08-16 15:40:21,554:INFO:Starting cross validation
2022-08-16 15:40:21,554:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:22,178:INFO:Calculating mean and std
2022-08-16 15:40:22,178:INFO:Creating metrics dataframe
2022-08-16 15:40:22,178:INFO:Uploading results into container
2022-08-16 15:40:22,178:INFO:Uploading model into container now
2022-08-16 15:40:22,178:INFO:master_model_container: 2
2022-08-16 15:40:22,178:INFO:display_container: 3
2022-08-16 15:40:22,178:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:40:22,178:INFO:create_model() successfully completed......................................
2022-08-16 15:40:22,314:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:22,314:INFO:Creating metrics dataframe
2022-08-16 15:40:22,330:INFO:Initializing Lasso Regression
2022-08-16 15:40:22,330:INFO:Total runtime is 0.013750354448954264 minutes
2022-08-16 15:40:22,338:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:22,338:INFO:Initializing create_model()
2022-08-16 15:40:22,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:22,338:INFO:Checking exceptions
2022-08-16 15:40:22,338:INFO:Importing libraries
2022-08-16 15:40:22,338:INFO:Copying training dataset
2022-08-16 15:40:22,346:INFO:Defining folds
2022-08-16 15:40:22,346:INFO:Declaring metric variables
2022-08-16 15:40:22,354:INFO:Importing untrained model
2022-08-16 15:40:22,362:INFO:Lasso Regression Imported successfully
2022-08-16 15:40:22,378:INFO:Starting cross validation
2022-08-16 15:40:22,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:22,769:INFO:Calculating mean and std
2022-08-16 15:40:22,777:INFO:Creating metrics dataframe
2022-08-16 15:40:22,777:INFO:Uploading results into container
2022-08-16 15:40:22,777:INFO:Uploading model into container now
2022-08-16 15:40:22,777:INFO:master_model_container: 3
2022-08-16 15:40:22,777:INFO:display_container: 3
2022-08-16 15:40:22,777:INFO:Lasso(random_state=123)
2022-08-16 15:40:22,777:INFO:create_model() successfully completed......................................
2022-08-16 15:40:22,890:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:22,890:INFO:Creating metrics dataframe
2022-08-16 15:40:22,906:INFO:Initializing Ridge Regression
2022-08-16 15:40:22,906:INFO:Total runtime is 0.023352440198262533 minutes
2022-08-16 15:40:22,914:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:22,914:INFO:Initializing create_model()
2022-08-16 15:40:22,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:22,914:INFO:Checking exceptions
2022-08-16 15:40:22,922:INFO:Importing libraries
2022-08-16 15:40:22,922:INFO:Copying training dataset
2022-08-16 15:40:22,922:INFO:Defining folds
2022-08-16 15:40:22,930:INFO:Declaring metric variables
2022-08-16 15:40:22,930:INFO:Importing untrained model
2022-08-16 15:40:22,938:INFO:Ridge Regression Imported successfully
2022-08-16 15:40:22,954:INFO:Starting cross validation
2022-08-16 15:40:22,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:23,275:INFO:Calculating mean and std
2022-08-16 15:40:23,275:INFO:Creating metrics dataframe
2022-08-16 15:40:23,283:INFO:Uploading results into container
2022-08-16 15:40:23,283:INFO:Uploading model into container now
2022-08-16 15:40:23,283:INFO:master_model_container: 4
2022-08-16 15:40:23,283:INFO:display_container: 3
2022-08-16 15:40:23,283:INFO:Ridge(random_state=123)
2022-08-16 15:40:23,283:INFO:create_model() successfully completed......................................
2022-08-16 15:40:23,395:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:23,395:INFO:Creating metrics dataframe
2022-08-16 15:40:23,403:INFO:Initializing Elastic Net
2022-08-16 15:40:23,403:INFO:Total runtime is 0.03164728879928589 minutes
2022-08-16 15:40:23,411:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:23,411:INFO:Initializing create_model()
2022-08-16 15:40:23,411:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:23,411:INFO:Checking exceptions
2022-08-16 15:40:23,411:INFO:Importing libraries
2022-08-16 15:40:23,411:INFO:Copying training dataset
2022-08-16 15:40:23,419:INFO:Defining folds
2022-08-16 15:40:23,419:INFO:Declaring metric variables
2022-08-16 15:40:23,427:INFO:Importing untrained model
2022-08-16 15:40:23,427:INFO:Elastic Net Imported successfully
2022-08-16 15:40:23,443:INFO:Starting cross validation
2022-08-16 15:40:23,443:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:23,764:INFO:Calculating mean and std
2022-08-16 15:40:23,772:INFO:Creating metrics dataframe
2022-08-16 15:40:23,772:INFO:Uploading results into container
2022-08-16 15:40:23,772:INFO:Uploading model into container now
2022-08-16 15:40:23,780:INFO:master_model_container: 5
2022-08-16 15:40:23,780:INFO:display_container: 3
2022-08-16 15:40:23,780:INFO:ElasticNet(random_state=123)
2022-08-16 15:40:23,780:INFO:create_model() successfully completed......................................
2022-08-16 15:40:23,900:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:23,900:INFO:Creating metrics dataframe
2022-08-16 15:40:23,916:INFO:Initializing Least Angle Regression
2022-08-16 15:40:23,916:INFO:Total runtime is 0.04019665320714315 minutes
2022-08-16 15:40:23,924:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:23,924:INFO:Initializing create_model()
2022-08-16 15:40:23,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:23,932:INFO:Checking exceptions
2022-08-16 15:40:23,932:INFO:Importing libraries
2022-08-16 15:40:23,932:INFO:Copying training dataset
2022-08-16 15:40:23,940:INFO:Defining folds
2022-08-16 15:40:23,940:INFO:Declaring metric variables
2022-08-16 15:40:23,956:INFO:Importing untrained model
2022-08-16 15:40:23,965:INFO:Least Angle Regression Imported successfully
2022-08-16 15:40:23,974:INFO:Starting cross validation
2022-08-16 15:40:23,976:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:24,110:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,110:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,134:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,134:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,158:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,174:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,190:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,198:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,262:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,270:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:24,310:INFO:Calculating mean and std
2022-08-16 15:40:24,310:INFO:Creating metrics dataframe
2022-08-16 15:40:24,310:INFO:Uploading results into container
2022-08-16 15:40:24,318:INFO:Uploading model into container now
2022-08-16 15:40:24,318:INFO:master_model_container: 6
2022-08-16 15:40:24,318:INFO:display_container: 3
2022-08-16 15:40:24,318:INFO:Lars(random_state=123)
2022-08-16 15:40:24,318:INFO:create_model() successfully completed......................................
2022-08-16 15:40:24,430:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:24,430:INFO:Creating metrics dataframe
2022-08-16 15:40:24,438:INFO:Initializing Lasso Least Angle Regression
2022-08-16 15:40:24,438:INFO:Total runtime is 0.048890801270802815 minutes
2022-08-16 15:40:24,446:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:24,446:INFO:Initializing create_model()
2022-08-16 15:40:24,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:24,446:INFO:Checking exceptions
2022-08-16 15:40:24,454:INFO:Importing libraries
2022-08-16 15:40:24,454:INFO:Copying training dataset
2022-08-16 15:40:24,462:INFO:Defining folds
2022-08-16 15:40:24,462:INFO:Declaring metric variables
2022-08-16 15:40:24,462:INFO:Importing untrained model
2022-08-16 15:40:24,477:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 15:40:24,497:INFO:Starting cross validation
2022-08-16 15:40:24,500:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:24,647:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,655:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,679:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,687:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,694:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,718:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,734:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,750:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,814:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,814:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:40:24,862:INFO:Calculating mean and std
2022-08-16 15:40:24,862:INFO:Creating metrics dataframe
2022-08-16 15:40:24,870:INFO:Uploading results into container
2022-08-16 15:40:24,870:INFO:Uploading model into container now
2022-08-16 15:40:24,870:INFO:master_model_container: 7
2022-08-16 15:40:24,870:INFO:display_container: 3
2022-08-16 15:40:24,870:INFO:LassoLars(random_state=123)
2022-08-16 15:40:24,870:INFO:create_model() successfully completed......................................
2022-08-16 15:40:24,983:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:24,983:INFO:Creating metrics dataframe
2022-08-16 15:40:24,999:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 15:40:24,999:INFO:Total runtime is 0.05823291540145874 minutes
2022-08-16 15:40:24,999:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:24,999:INFO:Initializing create_model()
2022-08-16 15:40:24,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:24,999:INFO:Checking exceptions
2022-08-16 15:40:25,007:INFO:Importing libraries
2022-08-16 15:40:25,007:INFO:Copying training dataset
2022-08-16 15:40:25,015:INFO:Defining folds
2022-08-16 15:40:25,015:INFO:Declaring metric variables
2022-08-16 15:40:25,015:INFO:Importing untrained model
2022-08-16 15:40:25,023:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 15:40:25,039:INFO:Starting cross validation
2022-08-16 15:40:25,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:25,183:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,199:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,207:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,207:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,231:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,239:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,255:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,272:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,335:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,343:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:40:25,367:INFO:Calculating mean and std
2022-08-16 15:40:25,367:INFO:Creating metrics dataframe
2022-08-16 15:40:25,375:INFO:Uploading results into container
2022-08-16 15:40:25,375:INFO:Uploading model into container now
2022-08-16 15:40:25,375:INFO:master_model_container: 8
2022-08-16 15:40:25,375:INFO:display_container: 3
2022-08-16 15:40:25,375:INFO:OrthogonalMatchingPursuit()
2022-08-16 15:40:25,375:INFO:create_model() successfully completed......................................
2022-08-16 15:40:25,464:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:25,471:INFO:Creating metrics dataframe
2022-08-16 15:40:25,487:INFO:Initializing Bayesian Ridge
2022-08-16 15:40:25,487:INFO:Total runtime is 0.06637523969014486 minutes
2022-08-16 15:40:25,487:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:25,487:INFO:Initializing create_model()
2022-08-16 15:40:25,487:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:25,495:INFO:Checking exceptions
2022-08-16 15:40:25,495:INFO:Importing libraries
2022-08-16 15:40:25,495:INFO:Copying training dataset
2022-08-16 15:40:25,503:INFO:Defining folds
2022-08-16 15:40:25,503:INFO:Declaring metric variables
2022-08-16 15:40:25,503:INFO:Importing untrained model
2022-08-16 15:40:25,511:INFO:Bayesian Ridge Imported successfully
2022-08-16 15:40:25,527:INFO:Starting cross validation
2022-08-16 15:40:25,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:25,819:INFO:Calculating mean and std
2022-08-16 15:40:25,821:INFO:Creating metrics dataframe
2022-08-16 15:40:25,824:INFO:Uploading results into container
2022-08-16 15:40:25,825:INFO:Uploading model into container now
2022-08-16 15:40:25,825:INFO:master_model_container: 9
2022-08-16 15:40:25,826:INFO:display_container: 3
2022-08-16 15:40:25,826:INFO:BayesianRidge()
2022-08-16 15:40:25,826:INFO:create_model() successfully completed......................................
2022-08-16 15:40:25,929:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:25,929:INFO:Creating metrics dataframe
2022-08-16 15:40:25,945:INFO:Initializing Passive Aggressive Regressor
2022-08-16 15:40:25,945:INFO:Total runtime is 0.07400238116582235 minutes
2022-08-16 15:40:25,953:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:25,953:INFO:Initializing create_model()
2022-08-16 15:40:25,953:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:25,953:INFO:Checking exceptions
2022-08-16 15:40:25,961:INFO:Importing libraries
2022-08-16 15:40:25,961:INFO:Copying training dataset
2022-08-16 15:40:25,961:INFO:Defining folds
2022-08-16 15:40:25,961:INFO:Declaring metric variables
2022-08-16 15:40:25,969:INFO:Importing untrained model
2022-08-16 15:40:25,977:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 15:40:25,985:INFO:Starting cross validation
2022-08-16 15:40:25,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:26,378:INFO:Calculating mean and std
2022-08-16 15:40:26,378:INFO:Creating metrics dataframe
2022-08-16 15:40:26,386:INFO:Uploading results into container
2022-08-16 15:40:26,386:INFO:Uploading model into container now
2022-08-16 15:40:26,386:INFO:master_model_container: 10
2022-08-16 15:40:26,386:INFO:display_container: 3
2022-08-16 15:40:26,386:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 15:40:26,386:INFO:create_model() successfully completed......................................
2022-08-16 15:40:26,491:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:26,491:INFO:Creating metrics dataframe
2022-08-16 15:40:26,507:INFO:Initializing Huber Regressor
2022-08-16 15:40:26,515:INFO:Total runtime is 0.08350522915522257 minutes
2022-08-16 15:40:26,515:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:26,515:INFO:Initializing create_model()
2022-08-16 15:40:26,515:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:26,515:INFO:Checking exceptions
2022-08-16 15:40:26,523:INFO:Importing libraries
2022-08-16 15:40:26,523:INFO:Copying training dataset
2022-08-16 15:40:26,523:INFO:Defining folds
2022-08-16 15:40:26,523:INFO:Declaring metric variables
2022-08-16 15:40:26,531:INFO:Importing untrained model
2022-08-16 15:40:26,539:INFO:Huber Regressor Imported successfully
2022-08-16 15:40:26,547:INFO:Starting cross validation
2022-08-16 15:40:26,547:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:26,898:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,898:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,901:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,901:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,925:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,925:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,933:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:26,949:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:27,061:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:27,069:WARNING:C:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:40:27,093:INFO:Calculating mean and std
2022-08-16 15:40:27,101:INFO:Creating metrics dataframe
2022-08-16 15:40:27,101:INFO:Uploading results into container
2022-08-16 15:40:27,101:INFO:Uploading model into container now
2022-08-16 15:40:27,109:INFO:master_model_container: 11
2022-08-16 15:40:27,109:INFO:display_container: 3
2022-08-16 15:40:27,109:INFO:HuberRegressor()
2022-08-16 15:40:27,109:INFO:create_model() successfully completed......................................
2022-08-16 15:40:27,197:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:27,197:INFO:Creating metrics dataframe
2022-08-16 15:40:27,213:INFO:Initializing K Neighbors Regressor
2022-08-16 15:40:27,213:INFO:Total runtime is 0.09514116446177165 minutes
2022-08-16 15:40:27,221:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:27,221:INFO:Initializing create_model()
2022-08-16 15:40:27,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:27,221:INFO:Checking exceptions
2022-08-16 15:40:27,229:INFO:Importing libraries
2022-08-16 15:40:27,229:INFO:Copying training dataset
2022-08-16 15:40:27,237:INFO:Defining folds
2022-08-16 15:40:27,237:INFO:Declaring metric variables
2022-08-16 15:40:27,245:INFO:Importing untrained model
2022-08-16 15:40:27,245:INFO:K Neighbors Regressor Imported successfully
2022-08-16 15:40:27,261:INFO:Starting cross validation
2022-08-16 15:40:27,261:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:27,765:INFO:Calculating mean and std
2022-08-16 15:40:27,773:INFO:Creating metrics dataframe
2022-08-16 15:40:27,773:INFO:Uploading results into container
2022-08-16 15:40:27,781:INFO:Uploading model into container now
2022-08-16 15:40:27,781:INFO:master_model_container: 12
2022-08-16 15:40:27,781:INFO:display_container: 3
2022-08-16 15:40:27,781:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 15:40:27,781:INFO:create_model() successfully completed......................................
2022-08-16 15:40:27,925:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:27,925:INFO:Creating metrics dataframe
2022-08-16 15:40:27,941:INFO:Initializing Decision Tree Regressor
2022-08-16 15:40:27,941:INFO:Total runtime is 0.10727459987004598 minutes
2022-08-16 15:40:27,949:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:27,949:INFO:Initializing create_model()
2022-08-16 15:40:27,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:27,949:INFO:Checking exceptions
2022-08-16 15:40:27,949:INFO:Importing libraries
2022-08-16 15:40:27,949:INFO:Copying training dataset
2022-08-16 15:40:27,959:INFO:Defining folds
2022-08-16 15:40:27,959:INFO:Declaring metric variables
2022-08-16 15:40:27,965:INFO:Importing untrained model
2022-08-16 15:40:27,965:INFO:Decision Tree Regressor Imported successfully
2022-08-16 15:40:27,981:INFO:Starting cross validation
2022-08-16 15:40:27,989:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:28,286:INFO:Calculating mean and std
2022-08-16 15:40:28,286:INFO:Creating metrics dataframe
2022-08-16 15:40:28,294:INFO:Uploading results into container
2022-08-16 15:40:28,294:INFO:Uploading model into container now
2022-08-16 15:40:28,294:INFO:master_model_container: 13
2022-08-16 15:40:28,294:INFO:display_container: 3
2022-08-16 15:40:28,294:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 15:40:28,294:INFO:create_model() successfully completed......................................
2022-08-16 15:40:28,396:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:28,396:INFO:Creating metrics dataframe
2022-08-16 15:40:28,410:INFO:Initializing Random Forest Regressor
2022-08-16 15:40:28,410:INFO:Total runtime is 0.1150895595550537 minutes
2022-08-16 15:40:28,412:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:28,412:INFO:Initializing create_model()
2022-08-16 15:40:28,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:28,412:INFO:Checking exceptions
2022-08-16 15:40:28,416:INFO:Importing libraries
2022-08-16 15:40:28,416:INFO:Copying training dataset
2022-08-16 15:40:28,416:INFO:Defining folds
2022-08-16 15:40:28,416:INFO:Declaring metric variables
2022-08-16 15:40:28,424:INFO:Importing untrained model
2022-08-16 15:40:28,431:INFO:Random Forest Regressor Imported successfully
2022-08-16 15:40:28,439:INFO:Starting cross validation
2022-08-16 15:40:28,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:29,767:INFO:Calculating mean and std
2022-08-16 15:40:29,767:INFO:Creating metrics dataframe
2022-08-16 15:40:29,775:INFO:Uploading results into container
2022-08-16 15:40:29,775:INFO:Uploading model into container now
2022-08-16 15:40:29,775:INFO:master_model_container: 14
2022-08-16 15:40:29,775:INFO:display_container: 3
2022-08-16 15:40:29,775:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:40:29,775:INFO:create_model() successfully completed......................................
2022-08-16 15:40:29,879:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:29,879:INFO:Creating metrics dataframe
2022-08-16 15:40:29,895:INFO:Initializing Extra Trees Regressor
2022-08-16 15:40:29,895:INFO:Total runtime is 0.13983975251515707 minutes
2022-08-16 15:40:29,903:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:29,903:INFO:Initializing create_model()
2022-08-16 15:40:29,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:29,903:INFO:Checking exceptions
2022-08-16 15:40:29,903:INFO:Importing libraries
2022-08-16 15:40:29,903:INFO:Copying training dataset
2022-08-16 15:40:29,911:INFO:Defining folds
2022-08-16 15:40:29,911:INFO:Declaring metric variables
2022-08-16 15:40:29,911:INFO:Importing untrained model
2022-08-16 15:40:29,919:INFO:Extra Trees Regressor Imported successfully
2022-08-16 15:40:29,935:INFO:Starting cross validation
2022-08-16 15:40:29,935:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:31,095:INFO:Calculating mean and std
2022-08-16 15:40:31,095:INFO:Creating metrics dataframe
2022-08-16 15:40:31,103:INFO:Uploading results into container
2022-08-16 15:40:31,103:INFO:Uploading model into container now
2022-08-16 15:40:31,103:INFO:master_model_container: 15
2022-08-16 15:40:31,103:INFO:display_container: 3
2022-08-16 15:40:31,103:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:40:31,103:INFO:create_model() successfully completed......................................
2022-08-16 15:40:31,198:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:31,198:INFO:Creating metrics dataframe
2022-08-16 15:40:31,214:INFO:Initializing AdaBoost Regressor
2022-08-16 15:40:31,214:INFO:Total runtime is 0.1618305524190267 minutes
2022-08-16 15:40:31,222:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:31,222:INFO:Initializing create_model()
2022-08-16 15:40:31,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:31,222:INFO:Checking exceptions
2022-08-16 15:40:31,222:INFO:Importing libraries
2022-08-16 15:40:31,222:INFO:Copying training dataset
2022-08-16 15:40:31,230:INFO:Defining folds
2022-08-16 15:40:31,230:INFO:Declaring metric variables
2022-08-16 15:40:31,238:INFO:Importing untrained model
2022-08-16 15:40:31,238:INFO:AdaBoost Regressor Imported successfully
2022-08-16 15:40:31,246:INFO:Starting cross validation
2022-08-16 15:40:31,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:31,615:INFO:Calculating mean and std
2022-08-16 15:40:31,623:INFO:Creating metrics dataframe
2022-08-16 15:40:31,623:INFO:Uploading results into container
2022-08-16 15:40:31,623:INFO:Uploading model into container now
2022-08-16 15:40:31,623:INFO:master_model_container: 16
2022-08-16 15:40:31,623:INFO:display_container: 3
2022-08-16 15:40:31,623:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 15:40:31,631:INFO:create_model() successfully completed......................................
2022-08-16 15:40:31,727:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:31,727:INFO:Creating metrics dataframe
2022-08-16 15:40:31,743:INFO:Initializing Gradient Boosting Regressor
2022-08-16 15:40:31,743:INFO:Total runtime is 0.17064684629440308 minutes
2022-08-16 15:40:31,743:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:31,743:INFO:Initializing create_model()
2022-08-16 15:40:31,743:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:31,743:INFO:Checking exceptions
2022-08-16 15:40:31,751:INFO:Importing libraries
2022-08-16 15:40:31,751:INFO:Copying training dataset
2022-08-16 15:40:31,751:INFO:Defining folds
2022-08-16 15:40:31,759:INFO:Declaring metric variables
2022-08-16 15:40:31,759:INFO:Importing untrained model
2022-08-16 15:40:31,767:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:40:31,775:INFO:Starting cross validation
2022-08-16 15:40:31,775:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:32,376:INFO:Calculating mean and std
2022-08-16 15:40:32,384:INFO:Creating metrics dataframe
2022-08-16 15:40:32,392:INFO:Uploading results into container
2022-08-16 15:40:32,392:INFO:Uploading model into container now
2022-08-16 15:40:32,392:INFO:master_model_container: 17
2022-08-16 15:40:32,392:INFO:display_container: 3
2022-08-16 15:40:32,392:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:40:32,392:INFO:create_model() successfully completed......................................
2022-08-16 15:40:32,504:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:32,504:INFO:Creating metrics dataframe
2022-08-16 15:40:32,520:INFO:Initializing Extreme Gradient Boosting
2022-08-16 15:40:32,520:INFO:Total runtime is 0.1835960030555725 minutes
2022-08-16 15:40:32,528:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:32,528:INFO:Initializing create_model()
2022-08-16 15:40:32,528:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:32,528:INFO:Checking exceptions
2022-08-16 15:40:32,536:INFO:Importing libraries
2022-08-16 15:40:32,536:INFO:Copying training dataset
2022-08-16 15:40:32,544:INFO:Defining folds
2022-08-16 15:40:32,544:INFO:Declaring metric variables
2022-08-16 15:40:32,552:INFO:Importing untrained model
2022-08-16 15:40:32,560:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 15:40:32,576:INFO:Starting cross validation
2022-08-16 15:40:32,576:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:33,528:INFO:Calculating mean and std
2022-08-16 15:40:33,528:INFO:Creating metrics dataframe
2022-08-16 15:40:33,536:INFO:Uploading results into container
2022-08-16 15:40:33,536:INFO:Uploading model into container now
2022-08-16 15:40:33,536:INFO:master_model_container: 18
2022-08-16 15:40:33,536:INFO:display_container: 3
2022-08-16 15:40:33,536:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 15:40:33,536:INFO:create_model() successfully completed......................................
2022-08-16 15:40:33,712:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:33,712:INFO:Creating metrics dataframe
2022-08-16 15:40:33,744:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 15:40:33,744:INFO:Total runtime is 0.20398939450581868 minutes
2022-08-16 15:40:33,760:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:33,760:INFO:Initializing create_model()
2022-08-16 15:40:33,760:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:33,760:INFO:Checking exceptions
2022-08-16 15:40:33,760:INFO:Importing libraries
2022-08-16 15:40:33,760:INFO:Copying training dataset
2022-08-16 15:40:33,768:INFO:Defining folds
2022-08-16 15:40:33,776:INFO:Declaring metric variables
2022-08-16 15:40:33,776:INFO:Importing untrained model
2022-08-16 15:40:33,792:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 15:40:33,808:INFO:Starting cross validation
2022-08-16 15:40:33,808:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:36,438:INFO:Calculating mean and std
2022-08-16 15:40:36,438:INFO:Creating metrics dataframe
2022-08-16 15:40:36,438:INFO:Uploading results into container
2022-08-16 15:40:36,438:INFO:Uploading model into container now
2022-08-16 15:40:36,447:INFO:master_model_container: 19
2022-08-16 15:40:36,447:INFO:display_container: 3
2022-08-16 15:40:36,447:INFO:LGBMRegressor(random_state=123)
2022-08-16 15:40:36,447:INFO:create_model() successfully completed......................................
2022-08-16 15:40:36,574:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:36,574:INFO:Creating metrics dataframe
2022-08-16 15:40:36,590:INFO:Initializing CatBoost Regressor
2022-08-16 15:40:36,590:INFO:Total runtime is 0.25141544342041017 minutes
2022-08-16 15:40:36,598:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:36,598:INFO:Initializing create_model()
2022-08-16 15:40:36,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:36,598:INFO:Checking exceptions
2022-08-16 15:40:36,606:INFO:Importing libraries
2022-08-16 15:40:36,606:INFO:Copying training dataset
2022-08-16 15:40:36,614:INFO:Defining folds
2022-08-16 15:40:36,614:INFO:Declaring metric variables
2022-08-16 15:40:36,621:INFO:Importing untrained model
2022-08-16 15:40:36,629:INFO:CatBoost Regressor Imported successfully
2022-08-16 15:40:36,645:INFO:Starting cross validation
2022-08-16 15:40:36,653:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:44,166:INFO:Calculating mean and std
2022-08-16 15:40:44,166:INFO:Creating metrics dataframe
2022-08-16 15:40:44,174:INFO:Uploading results into container
2022-08-16 15:40:44,174:INFO:Uploading model into container now
2022-08-16 15:40:44,174:INFO:master_model_container: 20
2022-08-16 15:40:44,174:INFO:display_container: 3
2022-08-16 15:40:44,174:INFO:<catboost.core.CatBoostRegressor object at 0x000001B0DC2EF850>
2022-08-16 15:40:44,174:INFO:create_model() successfully completed......................................
2022-08-16 15:40:44,303:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:44,303:INFO:Creating metrics dataframe
2022-08-16 15:40:44,324:INFO:Initializing Dummy Regressor
2022-08-16 15:40:44,325:INFO:Total runtime is 0.3803416570027669 minutes
2022-08-16 15:40:44,329:INFO:SubProcess create_model() called ==================================
2022-08-16 15:40:44,330:INFO:Initializing create_model()
2022-08-16 15:40:44,330:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B0DC66DEE0>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:44,330:INFO:Checking exceptions
2022-08-16 15:40:44,333:INFO:Importing libraries
2022-08-16 15:40:44,333:INFO:Copying training dataset
2022-08-16 15:40:44,339:INFO:Defining folds
2022-08-16 15:40:44,339:INFO:Declaring metric variables
2022-08-16 15:40:44,343:INFO:Importing untrained model
2022-08-16 15:40:44,351:INFO:Dummy Regressor Imported successfully
2022-08-16 15:40:44,359:INFO:Starting cross validation
2022-08-16 15:40:44,359:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:40:44,774:INFO:Calculating mean and std
2022-08-16 15:40:44,782:INFO:Creating metrics dataframe
2022-08-16 15:40:44,782:INFO:Uploading results into container
2022-08-16 15:40:44,782:INFO:Uploading model into container now
2022-08-16 15:40:44,782:INFO:master_model_container: 21
2022-08-16 15:40:44,782:INFO:display_container: 3
2022-08-16 15:40:44,782:INFO:DummyRegressor()
2022-08-16 15:40:44,782:INFO:create_model() successfully completed......................................
2022-08-16 15:40:44,897:INFO:SubProcess create_model() end ==================================
2022-08-16 15:40:44,898:INFO:Creating metrics dataframe
2022-08-16 15:40:44,928:INFO:Initializing create_model()
2022-08-16 15:40:44,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:40:44,928:INFO:Checking exceptions
2022-08-16 15:40:44,936:INFO:Importing libraries
2022-08-16 15:40:44,936:INFO:Copying training dataset
2022-08-16 15:40:44,936:INFO:Defining folds
2022-08-16 15:40:44,936:INFO:Declaring metric variables
2022-08-16 15:40:44,936:INFO:Importing untrained model
2022-08-16 15:40:44,944:INFO:Declaring custom model
2022-08-16 15:40:44,944:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:40:44,944:INFO:Cross validation set to False
2022-08-16 15:40:44,944:INFO:Fitting Model
2022-08-16 15:40:45,151:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:40:45,151:INFO:create_model() successfully completed......................................
2022-08-16 15:40:45,306:INFO:master_model_container: 21
2022-08-16 15:40:45,306:INFO:display_container: 3
2022-08-16 15:40:45,306:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:40:45,306:INFO:compare_models() successfully completed......................................
2022-08-16 15:40:45,337:INFO:Initializing plot_model()
2022-08-16 15:40:45,337:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, system=True)
2022-08-16 15:40:45,337:INFO:Checking exceptions
2022-08-16 15:40:45,345:INFO:Preloading libraries
2022-08-16 15:40:45,369:INFO:Copying training dataset
2022-08-16 15:40:45,369:INFO:Plot type: feature
2022-08-16 15:40:45,369:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 15:40:46,069:INFO:Visual Rendered Successfully
2022-08-16 15:40:46,150:INFO:plot_model() successfully completed......................................
2022-08-16 15:40:46,165:INFO:Initializing plot_model()
2022-08-16 15:40:46,174:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B0D47E8D00>, system=True)
2022-08-16 15:40:46,174:INFO:Checking exceptions
2022-08-16 15:40:46,182:INFO:Preloading libraries
2022-08-16 15:40:46,183:INFO:Copying training dataset
2022-08-16 15:40:46,183:INFO:Plot type: residuals
2022-08-16 15:40:46,421:INFO:Fitting Model
2022-08-16 15:40:46,453:INFO:Scoring test/hold-out set
2022-08-16 15:40:47,221:INFO:Visual Rendered Successfully
2022-08-16 15:40:47,340:INFO:plot_model() successfully completed......................................
2022-08-16 15:40:47,372:INFO:Initializing save_model()
2022-08-16 15:40:47,372:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 15:40:47,372:INFO:Adding model into prep_pipe
2022-08-16 15:40:47,388:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 15:40:47,420:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 15:40:47,420:INFO:save_model() successfully completed......................................
2022-08-16 15:42:40,867:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:42:40,867:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:42:40,883:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:42:40,883:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:42:41,735:INFO:Initializing load_model()
2022-08-16 15:42:41,735:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:42:56,898:INFO:Initializing load_model()
2022-08-16 15:42:56,898:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:42:57,228:INFO:Initializing load_model()
2022-08-16 15:42:57,228:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:42:58,337:INFO:Initializing load_model()
2022-08-16 15:42:58,337:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:42:58,522:INFO:Initializing predict_model()
2022-08-16 15:42:58,522:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002327FBB0AF0>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002327FBB3D30>)
2022-08-16 15:42:58,522:INFO:Checking exceptions
2022-08-16 15:42:58,530:INFO:Preloading libraries
2022-08-16 15:42:58,530:INFO:Set up data.
2022-08-16 15:48:09,362:INFO:Initializing load_model()
2022-08-16 15:48:09,362:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:48:09,659:INFO:Initializing load_model()
2022-08-16 15:48:09,659:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 15:48:09,825:INFO:Initializing predict_model()
2022-08-16 15:48:09,825:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002327FBC50A0>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002327FBE18B0>)
2022-08-16 15:48:09,825:INFO:Checking exceptions
2022-08-16 15:48:09,833:INFO:Preloading libraries
2022-08-16 15:48:09,833:INFO:Set up data.
2022-08-16 15:58:22,617:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:58:22,617:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:58:22,621:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:58:22,621:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-16 15:58:24,579:INFO:PyCaret RegressionExperiment
2022-08-16 15:58:24,579:INFO:Logging name: reg-default-name
2022-08-16 15:58:24,579:INFO:ML Usecase: MLUsecase.REGRESSION
2022-08-16 15:58:24,579:INFO:version 3.0.0.rc3
2022-08-16 15:58:24,579:INFO:Initializing setup()
2022-08-16 15:58:24,579:INFO:self.USI: bea7
2022-08-16 15:58:24,579:INFO:self.variable_keys: {'log_plots_param', 'data', 'target_param', 'fold_groups_param', '_all_models', 'n_jobs_param', 'X_test', '_gpu_n_jobs_param', 'exp_name_log', 'gpu_param', 'memory', 'y', '_available_plots', 'pipeline', 'exp_id', 'USI', 'y_test', 'seed', 'y_train', 'X', '_ml_usecase', 'html_param', '_all_models_internal', 'display_container', 'fold_shuffle_param', 'X_train', 'master_model_container', 'transform_target_method_param', 'logging_param', 'transform_target_param', '_all_metrics', 'idx', 'variable_keys', 'fold_generator'}
2022-08-16 15:58:24,579:INFO:Checking environment
2022-08-16 15:58:24,579:INFO:python_version: 3.9.12
2022-08-16 15:58:24,579:INFO:python_build: ('main', 'Apr  4 2022 05:22:27')
2022-08-16 15:58:24,579:INFO:machine: AMD64
2022-08-16 15:58:24,579:INFO:platform: Windows-10-10.0.22000-SP0
2022-08-16 15:58:24,579:INFO:Memory: svmem(total=8419573760, available=1169956864, percent=86.1, used=7249616896, free=1169956864)
2022-08-16 15:58:24,579:INFO:Physical Core: 4
2022-08-16 15:58:24,579:INFO:Logical Core: 8
2022-08-16 15:58:24,579:INFO:Checking libraries
2022-08-16 15:58:24,579:INFO:System:
2022-08-16 15:58:24,579:INFO:    python: 3.9.12 (main, Apr  4 2022, 05:22:27) [MSC v.1916 64 bit (AMD64)]
2022-08-16 15:58:24,579:INFO:executable: c:\Users\user\anaconda3\python.exe
2022-08-16 15:58:24,579:INFO:   machine: Windows-10-10.0.22000-SP0
2022-08-16 15:58:24,579:INFO:PyCaret required dependencies:
2022-08-16 15:58:26,211:INFO:                 pip: 22.2.2
2022-08-16 15:58:26,211:INFO:          setuptools: 61.2.0
2022-08-16 15:58:26,211:INFO:             pycaret: 3.0.0.rc3
2022-08-16 15:58:26,211:INFO:             IPython: 8.2.0
2022-08-16 15:58:26,211:INFO:          ipywidgets: 7.6.5
2022-08-16 15:58:26,211:INFO:                tqdm: 4.64.0
2022-08-16 15:58:26,211:INFO:               numpy: 1.21.5
2022-08-16 15:58:26,211:INFO:              pandas: 1.4.2
2022-08-16 15:58:26,211:INFO:              jinja2: 2.11.3
2022-08-16 15:58:26,211:INFO:               scipy: 1.7.3
2022-08-16 15:58:26,211:INFO:              joblib: 1.1.0
2022-08-16 15:58:26,211:INFO:             sklearn: 1.0.2
2022-08-16 15:58:26,211:INFO:                pyod: Installed but version unavailable
2022-08-16 15:58:26,211:INFO:            imblearn: 0.9.1
2022-08-16 15:58:26,211:INFO:   category_encoders: 2.5.0
2022-08-16 15:58:26,211:INFO:            lightgbm: 3.3.2
2022-08-16 15:58:26,211:INFO:               numba: 0.55.1
2022-08-16 15:58:26,211:INFO:            requests: 2.27.1
2022-08-16 15:58:26,211:INFO:          matplotlib: 3.5.1
2022-08-16 15:58:26,211:INFO:          scikitplot: 0.3.7
2022-08-16 15:58:26,211:INFO:         yellowbrick: 1.4
2022-08-16 15:58:26,211:INFO:              plotly: 5.6.0
2022-08-16 15:58:26,211:INFO:             kaleido: 0.2.1
2022-08-16 15:58:26,211:INFO:         statsmodels: 0.13.2
2022-08-16 15:58:26,211:INFO:              sktime: 0.11.4
2022-08-16 15:58:26,211:INFO:               tbats: Installed but version unavailable
2022-08-16 15:58:26,219:INFO:            pmdarima: 1.8.5
2022-08-16 15:58:26,219:INFO:              psutil: 5.9.1
2022-08-16 15:58:26,219:INFO:None
2022-08-16 15:58:26,219:INFO:Set up data.
2022-08-16 15:58:26,228:INFO:Set up train/test split.
2022-08-16 15:58:26,228:INFO:Set up folding strategy.
2022-08-16 15:58:26,228:INFO:Assigning column types.
2022-08-16 15:58:26,236:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2022-08-16 15:58:26,236:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,244:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,244:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,378:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,530:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,622:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:26,670:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:26,670:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,670:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,761:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,828:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:26,828:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:26,828:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2022-08-16 15:58:26,836:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,844:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:26,993:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:26,997:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,003:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,020:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,095:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,161:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:27,169:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,169:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2022-08-16 15:58:27,177:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,269:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,328:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:27,336:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,344:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,436:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,498:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,498:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:27,498:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,506:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2022-08-16 15:58:27,594:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,663:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,671:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:27,671:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,779:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,837:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2022-08-16 15:58:27,837:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:27,845:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:27,845:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2022-08-16 15:58:27,945:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:28,012:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:28,012:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:28,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2022-08-16 15:58:28,180:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:28,180:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:28,180:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2022-08-16 15:58:28,374:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:28,390:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:28,645:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:28,645:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:28,645:INFO:Preparing preprocessing pipeline...
2022-08-16 15:58:28,645:INFO:Set up simple imputation.
2022-08-16 15:58:28,661:INFO:Set up encoding of ordinal features.
2022-08-16 15:58:28,661:INFO:Set up encoding of categorical features.
2022-08-16 15:58:28,661:INFO:Set up variance threshold.
2022-08-16 15:58:28,761:INFO:Finished creating preprocessing pipeline.
2022-08-16 15:58:28,778:INFO:Pipeline: Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))])
2022-08-16 15:58:28,778:INFO:Creating final display dataframe.
2022-08-16 15:58:29,089:INFO:Setup display_container:                  Description             Value
0                 Session id               123
1                     Target           charges
2                Target type        Regression
3                 Data shape        (1338, 10)
4           Train data shape         (936, 10)
5            Test data shape         (402, 10)
6           Ordinal features                 2
7           Numeric features                 3
8       Categorical features                 3
9                 Preprocess              True
10           Imputation type            simple
11        Numeric imputation              mean
12    Categorical imputation          constant
13  Maximum one-hot encoding                 5
14           Encoding method              None
15    Low variance threshold                 0
16            Fold Generator             KFold
17               Fold Number                10
18                  CPU Jobs                -1
19                   Use GPU             False
20            Log Experiment             False
21           Experiment Name  reg-default-name
22                       USI              bea7
2022-08-16 15:58:29,313:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:29,321:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:29,495:INFO:Soft dependency imported: xgboost: 1.6.1
2022-08-16 15:58:29,504:INFO:Soft dependency imported: catboost: 1.0.6
2022-08-16 15:58:29,511:INFO:setup() successfully completed in 4.93s...............
2022-08-16 15:58:29,720:INFO:Initializing create_model()
2022-08-16 15:58:29,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:29,720:INFO:Checking exceptions
2022-08-16 15:58:29,792:INFO:Importing libraries
2022-08-16 15:58:29,792:INFO:Copying training dataset
2022-08-16 15:58:29,808:INFO:Defining folds
2022-08-16 15:58:29,808:INFO:Declaring metric variables
2022-08-16 15:58:29,824:INFO:Importing untrained model
2022-08-16 15:58:29,832:INFO:Linear Regression Imported successfully
2022-08-16 15:58:29,856:INFO:Starting cross validation
2022-08-16 15:58:29,912:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:44,442:INFO:Calculating mean and std
2022-08-16 15:58:44,452:INFO:Creating metrics dataframe
2022-08-16 15:58:44,460:INFO:Finalizing model
2022-08-16 15:58:44,540:INFO:Uploading results into container
2022-08-16 15:58:44,540:INFO:Uploading model into container now
2022-08-16 15:58:44,564:INFO:master_model_container: 1
2022-08-16 15:58:44,564:INFO:display_container: 2
2022-08-16 15:58:44,564:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:58:44,564:INFO:create_model() successfully completed......................................
2022-08-16 15:58:44,826:INFO:Initializing compare_models()
2022-08-16 15:58:44,826:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engines': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2022-08-16 15:58:44,826:INFO:Checking exceptions
2022-08-16 15:58:44,834:INFO:Preparing display monitor
2022-08-16 15:58:44,921:INFO:Initializing Linear Regression
2022-08-16 15:58:44,921:INFO:Total runtime is 0.0 minutes
2022-08-16 15:58:44,937:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:44,937:INFO:Initializing create_model()
2022-08-16 15:58:44,937:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:44,937:INFO:Checking exceptions
2022-08-16 15:58:44,945:INFO:Importing libraries
2022-08-16 15:58:44,945:INFO:Copying training dataset
2022-08-16 15:58:44,945:INFO:Defining folds
2022-08-16 15:58:44,945:INFO:Declaring metric variables
2022-08-16 15:58:44,953:INFO:Importing untrained model
2022-08-16 15:58:44,961:INFO:Linear Regression Imported successfully
2022-08-16 15:58:44,977:INFO:Starting cross validation
2022-08-16 15:58:44,977:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:45,418:INFO:Calculating mean and std
2022-08-16 15:58:45,418:INFO:Creating metrics dataframe
2022-08-16 15:58:45,418:INFO:Uploading results into container
2022-08-16 15:58:45,426:INFO:Uploading model into container now
2022-08-16 15:58:45,426:INFO:master_model_container: 2
2022-08-16 15:58:45,426:INFO:display_container: 3
2022-08-16 15:58:45,426:INFO:LinearRegression(n_jobs=-1)
2022-08-16 15:58:45,426:INFO:create_model() successfully completed......................................
2022-08-16 15:58:45,550:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:45,550:INFO:Creating metrics dataframe
2022-08-16 15:58:45,562:INFO:Initializing Lasso Regression
2022-08-16 15:58:45,563:INFO:Total runtime is 0.010668619473775228 minutes
2022-08-16 15:58:45,566:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:45,566:INFO:Initializing create_model()
2022-08-16 15:58:45,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:45,567:INFO:Checking exceptions
2022-08-16 15:58:45,571:INFO:Importing libraries
2022-08-16 15:58:45,571:INFO:Copying training dataset
2022-08-16 15:58:45,574:INFO:Defining folds
2022-08-16 15:58:45,574:INFO:Declaring metric variables
2022-08-16 15:58:45,582:INFO:Importing untrained model
2022-08-16 15:58:45,590:INFO:Lasso Regression Imported successfully
2022-08-16 15:58:45,606:INFO:Starting cross validation
2022-08-16 15:58:45,614:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:45,947:INFO:Calculating mean and std
2022-08-16 15:58:45,947:INFO:Creating metrics dataframe
2022-08-16 15:58:45,955:INFO:Uploading results into container
2022-08-16 15:58:45,955:INFO:Uploading model into container now
2022-08-16 15:58:45,955:INFO:master_model_container: 3
2022-08-16 15:58:45,955:INFO:display_container: 3
2022-08-16 15:58:45,955:INFO:Lasso(random_state=123)
2022-08-16 15:58:45,955:INFO:create_model() successfully completed......................................
2022-08-16 15:58:46,076:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:46,076:INFO:Creating metrics dataframe
2022-08-16 15:58:46,093:INFO:Initializing Ridge Regression
2022-08-16 15:58:46,093:INFO:Total runtime is 0.019520894686381022 minutes
2022-08-16 15:58:46,093:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:46,102:INFO:Initializing create_model()
2022-08-16 15:58:46,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:46,102:INFO:Checking exceptions
2022-08-16 15:58:46,102:INFO:Importing libraries
2022-08-16 15:58:46,102:INFO:Copying training dataset
2022-08-16 15:58:46,110:INFO:Defining folds
2022-08-16 15:58:46,110:INFO:Declaring metric variables
2022-08-16 15:58:46,118:INFO:Importing untrained model
2022-08-16 15:58:46,126:INFO:Ridge Regression Imported successfully
2022-08-16 15:58:46,134:INFO:Starting cross validation
2022-08-16 15:58:46,142:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:46,701:INFO:Calculating mean and std
2022-08-16 15:58:46,709:INFO:Creating metrics dataframe
2022-08-16 15:58:46,717:INFO:Uploading results into container
2022-08-16 15:58:46,717:INFO:Uploading model into container now
2022-08-16 15:58:46,717:INFO:master_model_container: 4
2022-08-16 15:58:46,717:INFO:display_container: 3
2022-08-16 15:58:46,717:INFO:Ridge(random_state=123)
2022-08-16 15:58:46,717:INFO:create_model() successfully completed......................................
2022-08-16 15:58:46,851:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:46,851:INFO:Creating metrics dataframe
2022-08-16 15:58:46,867:INFO:Initializing Elastic Net
2022-08-16 15:58:46,867:INFO:Total runtime is 0.0324321985244751 minutes
2022-08-16 15:58:46,875:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:46,875:INFO:Initializing create_model()
2022-08-16 15:58:46,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:46,875:INFO:Checking exceptions
2022-08-16 15:58:46,883:INFO:Importing libraries
2022-08-16 15:58:46,883:INFO:Copying training dataset
2022-08-16 15:58:46,891:INFO:Defining folds
2022-08-16 15:58:46,891:INFO:Declaring metric variables
2022-08-16 15:58:46,899:INFO:Importing untrained model
2022-08-16 15:58:46,899:INFO:Elastic Net Imported successfully
2022-08-16 15:58:46,917:INFO:Starting cross validation
2022-08-16 15:58:46,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:47,334:INFO:Calculating mean and std
2022-08-16 15:58:47,342:INFO:Creating metrics dataframe
2022-08-16 15:58:47,358:INFO:Uploading results into container
2022-08-16 15:58:47,358:INFO:Uploading model into container now
2022-08-16 15:58:47,358:INFO:master_model_container: 5
2022-08-16 15:58:47,358:INFO:display_container: 3
2022-08-16 15:58:47,358:INFO:ElasticNet(random_state=123)
2022-08-16 15:58:47,366:INFO:create_model() successfully completed......................................
2022-08-16 15:58:47,575:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:47,575:INFO:Creating metrics dataframe
2022-08-16 15:58:47,592:INFO:Initializing Least Angle Regression
2022-08-16 15:58:47,592:INFO:Total runtime is 0.04451208511988322 minutes
2022-08-16 15:58:47,600:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:47,600:INFO:Initializing create_model()
2022-08-16 15:58:47,600:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:47,600:INFO:Checking exceptions
2022-08-16 15:58:47,608:INFO:Importing libraries
2022-08-16 15:58:47,608:INFO:Copying training dataset
2022-08-16 15:58:47,608:INFO:Defining folds
2022-08-16 15:58:47,608:INFO:Declaring metric variables
2022-08-16 15:58:47,616:INFO:Importing untrained model
2022-08-16 15:58:47,624:INFO:Least Angle Regression Imported successfully
2022-08-16 15:58:47,634:INFO:Starting cross validation
2022-08-16 15:58:47,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:47,877:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,877:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,877:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,877:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,882:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,922:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,946:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:47,978:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:48,147:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:48,155:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:48,203:INFO:Calculating mean and std
2022-08-16 15:58:48,203:INFO:Creating metrics dataframe
2022-08-16 15:58:48,211:INFO:Uploading results into container
2022-08-16 15:58:48,211:INFO:Uploading model into container now
2022-08-16 15:58:48,211:INFO:master_model_container: 6
2022-08-16 15:58:48,211:INFO:display_container: 3
2022-08-16 15:58:48,211:INFO:Lars(random_state=123)
2022-08-16 15:58:48,211:INFO:create_model() successfully completed......................................
2022-08-16 15:58:48,359:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:48,359:INFO:Creating metrics dataframe
2022-08-16 15:58:48,376:INFO:Initializing Lasso Least Angle Regression
2022-08-16 15:58:48,376:INFO:Total runtime is 0.05758084058761597 minutes
2022-08-16 15:58:48,384:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:48,384:INFO:Initializing create_model()
2022-08-16 15:58:48,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:48,384:INFO:Checking exceptions
2022-08-16 15:58:48,384:INFO:Importing libraries
2022-08-16 15:58:48,384:INFO:Copying training dataset
2022-08-16 15:58:48,392:INFO:Defining folds
2022-08-16 15:58:48,392:INFO:Declaring metric variables
2022-08-16 15:58:48,392:INFO:Importing untrained model
2022-08-16 15:58:48,400:INFO:Lasso Least Angle Regression Imported successfully
2022-08-16 15:58:48,416:INFO:Starting cross validation
2022-08-16 15:58:48,416:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:48,602:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,602:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,634:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,642:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,668:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,693:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,701:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,726:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,769:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,777:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-08-16 15:58:48,809:INFO:Calculating mean and std
2022-08-16 15:58:48,809:INFO:Creating metrics dataframe
2022-08-16 15:58:48,819:INFO:Uploading results into container
2022-08-16 15:58:48,819:INFO:Uploading model into container now
2022-08-16 15:58:48,819:INFO:master_model_container: 7
2022-08-16 15:58:48,819:INFO:display_container: 3
2022-08-16 15:58:48,819:INFO:LassoLars(random_state=123)
2022-08-16 15:58:48,819:INFO:create_model() successfully completed......................................
2022-08-16 15:58:48,951:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:48,951:INFO:Creating metrics dataframe
2022-08-16 15:58:48,968:INFO:Initializing Orthogonal Matching Pursuit
2022-08-16 15:58:48,968:INFO:Total runtime is 0.06744551261266073 minutes
2022-08-16 15:58:48,968:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:48,968:INFO:Initializing create_model()
2022-08-16 15:58:48,968:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:48,976:INFO:Checking exceptions
2022-08-16 15:58:48,976:INFO:Importing libraries
2022-08-16 15:58:48,976:INFO:Copying training dataset
2022-08-16 15:58:48,976:INFO:Defining folds
2022-08-16 15:58:48,976:INFO:Declaring metric variables
2022-08-16 15:58:48,984:INFO:Importing untrained model
2022-08-16 15:58:48,992:INFO:Orthogonal Matching Pursuit Imported successfully
2022-08-16 15:58:49,008:INFO:Starting cross validation
2022-08-16 15:58:49,008:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:49,168:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,208:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,208:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,248:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,256:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,272:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,309:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,323:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,402:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,402:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-08-16 15:58:49,450:INFO:Calculating mean and std
2022-08-16 15:58:49,458:INFO:Creating metrics dataframe
2022-08-16 15:58:49,458:INFO:Uploading results into container
2022-08-16 15:58:49,458:INFO:Uploading model into container now
2022-08-16 15:58:49,466:INFO:master_model_container: 8
2022-08-16 15:58:49,466:INFO:display_container: 3
2022-08-16 15:58:49,466:INFO:OrthogonalMatchingPursuit()
2022-08-16 15:58:49,466:INFO:create_model() successfully completed......................................
2022-08-16 15:58:49,658:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:49,658:INFO:Creating metrics dataframe
2022-08-16 15:58:49,674:INFO:Initializing Bayesian Ridge
2022-08-16 15:58:49,674:INFO:Total runtime is 0.07920499642690022 minutes
2022-08-16 15:58:49,682:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:49,682:INFO:Initializing create_model()
2022-08-16 15:58:49,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:49,682:INFO:Checking exceptions
2022-08-16 15:58:49,690:INFO:Importing libraries
2022-08-16 15:58:49,690:INFO:Copying training dataset
2022-08-16 15:58:49,698:INFO:Defining folds
2022-08-16 15:58:49,698:INFO:Declaring metric variables
2022-08-16 15:58:49,706:INFO:Importing untrained model
2022-08-16 15:58:49,714:INFO:Bayesian Ridge Imported successfully
2022-08-16 15:58:49,738:INFO:Starting cross validation
2022-08-16 15:58:49,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:50,159:INFO:Calculating mean and std
2022-08-16 15:58:50,167:INFO:Creating metrics dataframe
2022-08-16 15:58:50,167:INFO:Uploading results into container
2022-08-16 15:58:50,167:INFO:Uploading model into container now
2022-08-16 15:58:50,167:INFO:master_model_container: 9
2022-08-16 15:58:50,167:INFO:display_container: 3
2022-08-16 15:58:50,167:INFO:BayesianRidge()
2022-08-16 15:58:50,167:INFO:create_model() successfully completed......................................
2022-08-16 15:58:50,301:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:50,301:INFO:Creating metrics dataframe
2022-08-16 15:58:50,317:INFO:Initializing Passive Aggressive Regressor
2022-08-16 15:58:50,317:INFO:Total runtime is 0.08992790778477987 minutes
2022-08-16 15:58:50,325:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:50,325:INFO:Initializing create_model()
2022-08-16 15:58:50,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:50,325:INFO:Checking exceptions
2022-08-16 15:58:50,325:INFO:Importing libraries
2022-08-16 15:58:50,325:INFO:Copying training dataset
2022-08-16 15:58:50,333:INFO:Defining folds
2022-08-16 15:58:50,333:INFO:Declaring metric variables
2022-08-16 15:58:50,341:INFO:Importing untrained model
2022-08-16 15:58:50,349:INFO:Passive Aggressive Regressor Imported successfully
2022-08-16 15:58:50,365:INFO:Starting cross validation
2022-08-16 15:58:50,365:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:50,735:INFO:Calculating mean and std
2022-08-16 15:58:50,735:INFO:Creating metrics dataframe
2022-08-16 15:58:50,743:INFO:Uploading results into container
2022-08-16 15:58:50,743:INFO:Uploading model into container now
2022-08-16 15:58:50,743:INFO:master_model_container: 10
2022-08-16 15:58:50,743:INFO:display_container: 3
2022-08-16 15:58:50,743:INFO:PassiveAggressiveRegressor(random_state=123)
2022-08-16 15:58:50,743:INFO:create_model() successfully completed......................................
2022-08-16 15:58:50,875:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:50,875:INFO:Creating metrics dataframe
2022-08-16 15:58:50,884:INFO:Initializing Huber Regressor
2022-08-16 15:58:50,884:INFO:Total runtime is 0.09938201904296876 minutes
2022-08-16 15:58:50,892:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:50,892:INFO:Initializing create_model()
2022-08-16 15:58:50,892:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:50,892:INFO:Checking exceptions
2022-08-16 15:58:50,892:INFO:Importing libraries
2022-08-16 15:58:50,892:INFO:Copying training dataset
2022-08-16 15:58:50,900:INFO:Defining folds
2022-08-16 15:58:50,900:INFO:Declaring metric variables
2022-08-16 15:58:50,908:INFO:Importing untrained model
2022-08-16 15:58:50,916:INFO:Huber Regressor Imported successfully
2022-08-16 15:58:50,924:INFO:Starting cross validation
2022-08-16 15:58:50,924:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:51,200:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,200:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,216:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,224:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,224:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,275:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,275:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,292:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,401:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,435:WARNING:c:\Users\user\anaconda3\lib\site-packages\sklearn\linear_model\_huber.py:332: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2022-08-16 15:58:51,467:INFO:Calculating mean and std
2022-08-16 15:58:51,475:INFO:Creating metrics dataframe
2022-08-16 15:58:51,485:INFO:Uploading results into container
2022-08-16 15:58:51,485:INFO:Uploading model into container now
2022-08-16 15:58:51,485:INFO:master_model_container: 11
2022-08-16 15:58:51,485:INFO:display_container: 3
2022-08-16 15:58:51,485:INFO:HuberRegressor()
2022-08-16 15:58:51,485:INFO:create_model() successfully completed......................................
2022-08-16 15:58:51,693:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:51,693:INFO:Creating metrics dataframe
2022-08-16 15:58:51,725:INFO:Initializing K Neighbors Regressor
2022-08-16 15:58:51,725:INFO:Total runtime is 0.11338545878728232 minutes
2022-08-16 15:58:51,735:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:51,735:INFO:Initializing create_model()
2022-08-16 15:58:51,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:51,735:INFO:Checking exceptions
2022-08-16 15:58:51,743:INFO:Importing libraries
2022-08-16 15:58:51,743:INFO:Copying training dataset
2022-08-16 15:58:51,751:INFO:Defining folds
2022-08-16 15:58:51,751:INFO:Declaring metric variables
2022-08-16 15:58:51,759:INFO:Importing untrained model
2022-08-16 15:58:51,767:INFO:K Neighbors Regressor Imported successfully
2022-08-16 15:58:51,791:INFO:Starting cross validation
2022-08-16 15:58:51,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:52,251:INFO:Calculating mean and std
2022-08-16 15:58:52,259:INFO:Creating metrics dataframe
2022-08-16 15:58:52,259:INFO:Uploading results into container
2022-08-16 15:58:52,267:INFO:Uploading model into container now
2022-08-16 15:58:52,267:INFO:master_model_container: 12
2022-08-16 15:58:52,267:INFO:display_container: 3
2022-08-16 15:58:52,267:INFO:KNeighborsRegressor(n_jobs=-1)
2022-08-16 15:58:52,267:INFO:create_model() successfully completed......................................
2022-08-16 15:58:52,443:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:52,443:INFO:Creating metrics dataframe
2022-08-16 15:58:52,467:INFO:Initializing Decision Tree Regressor
2022-08-16 15:58:52,467:INFO:Total runtime is 0.1257504145304362 minutes
2022-08-16 15:58:52,469:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:52,469:INFO:Initializing create_model()
2022-08-16 15:58:52,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:52,469:INFO:Checking exceptions
2022-08-16 15:58:52,477:INFO:Importing libraries
2022-08-16 15:58:52,477:INFO:Copying training dataset
2022-08-16 15:58:52,485:INFO:Defining folds
2022-08-16 15:58:52,485:INFO:Declaring metric variables
2022-08-16 15:58:52,501:INFO:Importing untrained model
2022-08-16 15:58:52,509:INFO:Decision Tree Regressor Imported successfully
2022-08-16 15:58:52,533:INFO:Starting cross validation
2022-08-16 15:58:52,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:52,952:INFO:Calculating mean and std
2022-08-16 15:58:52,952:INFO:Creating metrics dataframe
2022-08-16 15:58:52,960:INFO:Uploading results into container
2022-08-16 15:58:52,960:INFO:Uploading model into container now
2022-08-16 15:58:52,960:INFO:master_model_container: 13
2022-08-16 15:58:52,960:INFO:display_container: 3
2022-08-16 15:58:52,960:INFO:DecisionTreeRegressor(random_state=123)
2022-08-16 15:58:52,960:INFO:create_model() successfully completed......................................
2022-08-16 15:58:53,118:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:53,118:INFO:Creating metrics dataframe
2022-08-16 15:58:53,150:INFO:Initializing Random Forest Regressor
2022-08-16 15:58:53,150:INFO:Total runtime is 0.13713547786076863 minutes
2022-08-16 15:58:53,158:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:53,158:INFO:Initializing create_model()
2022-08-16 15:58:53,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:53,158:INFO:Checking exceptions
2022-08-16 15:58:53,158:INFO:Importing libraries
2022-08-16 15:58:53,158:INFO:Copying training dataset
2022-08-16 15:58:53,166:INFO:Defining folds
2022-08-16 15:58:53,166:INFO:Declaring metric variables
2022-08-16 15:58:53,174:INFO:Importing untrained model
2022-08-16 15:58:53,182:INFO:Random Forest Regressor Imported successfully
2022-08-16 15:58:53,206:INFO:Starting cross validation
2022-08-16 15:58:53,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:54,675:INFO:Calculating mean and std
2022-08-16 15:58:54,675:INFO:Creating metrics dataframe
2022-08-16 15:58:54,683:INFO:Uploading results into container
2022-08-16 15:58:54,683:INFO:Uploading model into container now
2022-08-16 15:58:54,683:INFO:master_model_container: 14
2022-08-16 15:58:54,683:INFO:display_container: 3
2022-08-16 15:58:54,683:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:58:54,683:INFO:create_model() successfully completed......................................
2022-08-16 15:58:54,808:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:54,808:INFO:Creating metrics dataframe
2022-08-16 15:58:54,824:INFO:Initializing Extra Trees Regressor
2022-08-16 15:58:54,824:INFO:Total runtime is 0.16504945755004882 minutes
2022-08-16 15:58:54,834:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:54,834:INFO:Initializing create_model()
2022-08-16 15:58:54,834:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:54,834:INFO:Checking exceptions
2022-08-16 15:58:54,842:INFO:Importing libraries
2022-08-16 15:58:54,842:INFO:Copying training dataset
2022-08-16 15:58:54,851:INFO:Defining folds
2022-08-16 15:58:54,852:INFO:Declaring metric variables
2022-08-16 15:58:54,860:INFO:Importing untrained model
2022-08-16 15:58:54,868:INFO:Extra Trees Regressor Imported successfully
2022-08-16 15:58:54,883:INFO:Starting cross validation
2022-08-16 15:58:54,883:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:56,242:INFO:Calculating mean and std
2022-08-16 15:58:56,250:INFO:Creating metrics dataframe
2022-08-16 15:58:56,258:INFO:Uploading results into container
2022-08-16 15:58:56,258:INFO:Uploading model into container now
2022-08-16 15:58:56,258:INFO:master_model_container: 15
2022-08-16 15:58:56,258:INFO:display_container: 3
2022-08-16 15:58:56,258:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2022-08-16 15:58:56,258:INFO:create_model() successfully completed......................................
2022-08-16 15:58:56,426:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:56,426:INFO:Creating metrics dataframe
2022-08-16 15:58:56,460:INFO:Initializing AdaBoost Regressor
2022-08-16 15:58:56,461:INFO:Total runtime is 0.19232072432835895 minutes
2022-08-16 15:58:56,466:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:56,466:INFO:Initializing create_model()
2022-08-16 15:58:56,466:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:56,466:INFO:Checking exceptions
2022-08-16 15:58:56,474:INFO:Importing libraries
2022-08-16 15:58:56,474:INFO:Copying training dataset
2022-08-16 15:58:56,483:INFO:Defining folds
2022-08-16 15:58:56,483:INFO:Declaring metric variables
2022-08-16 15:58:56,491:INFO:Importing untrained model
2022-08-16 15:58:56,507:INFO:AdaBoost Regressor Imported successfully
2022-08-16 15:58:56,523:INFO:Starting cross validation
2022-08-16 15:58:56,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:56,968:INFO:Calculating mean and std
2022-08-16 15:58:56,968:INFO:Creating metrics dataframe
2022-08-16 15:58:56,976:INFO:Uploading results into container
2022-08-16 15:58:56,976:INFO:Uploading model into container now
2022-08-16 15:58:56,976:INFO:master_model_container: 16
2022-08-16 15:58:56,976:INFO:display_container: 3
2022-08-16 15:58:56,976:INFO:AdaBoostRegressor(random_state=123)
2022-08-16 15:58:56,976:INFO:create_model() successfully completed......................................
2022-08-16 15:58:57,125:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:57,125:INFO:Creating metrics dataframe
2022-08-16 15:58:57,157:INFO:Initializing Gradient Boosting Regressor
2022-08-16 15:58:57,157:INFO:Total runtime is 0.20391878684361775 minutes
2022-08-16 15:58:57,173:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:57,173:INFO:Initializing create_model()
2022-08-16 15:58:57,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:57,173:INFO:Checking exceptions
2022-08-16 15:58:57,173:INFO:Importing libraries
2022-08-16 15:58:57,173:INFO:Copying training dataset
2022-08-16 15:58:57,189:INFO:Defining folds
2022-08-16 15:58:57,189:INFO:Declaring metric variables
2022-08-16 15:58:57,197:INFO:Importing untrained model
2022-08-16 15:58:57,205:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:58:57,221:INFO:Starting cross validation
2022-08-16 15:58:57,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:57,974:INFO:Calculating mean and std
2022-08-16 15:58:57,974:INFO:Creating metrics dataframe
2022-08-16 15:58:57,982:INFO:Uploading results into container
2022-08-16 15:58:57,983:INFO:Uploading model into container now
2022-08-16 15:58:57,983:INFO:master_model_container: 17
2022-08-16 15:58:57,983:INFO:display_container: 3
2022-08-16 15:58:57,983:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:58:57,983:INFO:create_model() successfully completed......................................
2022-08-16 15:58:58,116:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:58,116:INFO:Creating metrics dataframe
2022-08-16 15:58:58,133:INFO:Initializing Extreme Gradient Boosting
2022-08-16 15:58:58,133:INFO:Total runtime is 0.22019888162612913 minutes
2022-08-16 15:58:58,133:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:58,133:INFO:Initializing create_model()
2022-08-16 15:58:58,133:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:58,133:INFO:Checking exceptions
2022-08-16 15:58:58,141:INFO:Importing libraries
2022-08-16 15:58:58,141:INFO:Copying training dataset
2022-08-16 15:58:58,149:INFO:Defining folds
2022-08-16 15:58:58,149:INFO:Declaring metric variables
2022-08-16 15:58:58,157:INFO:Importing untrained model
2022-08-16 15:58:58,165:INFO:Extreme Gradient Boosting Imported successfully
2022-08-16 15:58:58,173:INFO:Starting cross validation
2022-08-16 15:58:58,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:58:59,249:INFO:Calculating mean and std
2022-08-16 15:58:59,252:INFO:Creating metrics dataframe
2022-08-16 15:58:59,257:INFO:Uploading results into container
2022-08-16 15:58:59,258:INFO:Uploading model into container now
2022-08-16 15:58:59,258:INFO:master_model_container: 18
2022-08-16 15:58:59,258:INFO:display_container: 3
2022-08-16 15:58:59,259:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=-1,
             num_parallel_tree=None, predictor=None, random_state=123,
             reg_alpha=None, reg_lambda=None, ...)
2022-08-16 15:58:59,259:INFO:create_model() successfully completed......................................
2022-08-16 15:58:59,401:INFO:SubProcess create_model() end ==================================
2022-08-16 15:58:59,401:INFO:Creating metrics dataframe
2022-08-16 15:58:59,433:INFO:Initializing Light Gradient Boosting Machine
2022-08-16 15:58:59,433:INFO:Total runtime is 0.24185131788253783 minutes
2022-08-16 15:58:59,441:INFO:SubProcess create_model() called ==================================
2022-08-16 15:58:59,449:INFO:Initializing create_model()
2022-08-16 15:58:59,449:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:58:59,449:INFO:Checking exceptions
2022-08-16 15:58:59,457:INFO:Importing libraries
2022-08-16 15:58:59,457:INFO:Copying training dataset
2022-08-16 15:58:59,465:INFO:Defining folds
2022-08-16 15:58:59,465:INFO:Declaring metric variables
2022-08-16 15:58:59,473:INFO:Importing untrained model
2022-08-16 15:58:59,481:INFO:Light Gradient Boosting Machine Imported successfully
2022-08-16 15:58:59,505:INFO:Starting cross validation
2022-08-16 15:58:59,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:59:02,549:INFO:Calculating mean and std
2022-08-16 15:59:02,549:INFO:Creating metrics dataframe
2022-08-16 15:59:02,557:INFO:Uploading results into container
2022-08-16 15:59:02,557:INFO:Uploading model into container now
2022-08-16 15:59:02,557:INFO:master_model_container: 19
2022-08-16 15:59:02,557:INFO:display_container: 3
2022-08-16 15:59:02,557:INFO:LGBMRegressor(random_state=123)
2022-08-16 15:59:02,557:INFO:create_model() successfully completed......................................
2022-08-16 15:59:02,777:INFO:SubProcess create_model() end ==================================
2022-08-16 15:59:02,777:INFO:Creating metrics dataframe
2022-08-16 15:59:02,809:INFO:Initializing CatBoost Regressor
2022-08-16 15:59:02,809:INFO:Total runtime is 0.2981174826622009 minutes
2022-08-16 15:59:02,817:INFO:SubProcess create_model() called ==================================
2022-08-16 15:59:02,817:INFO:Initializing create_model()
2022-08-16 15:59:02,817:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:59:02,817:INFO:Checking exceptions
2022-08-16 15:59:02,817:INFO:Importing libraries
2022-08-16 15:59:02,817:INFO:Copying training dataset
2022-08-16 15:59:02,824:INFO:Defining folds
2022-08-16 15:59:02,824:INFO:Declaring metric variables
2022-08-16 15:59:02,840:INFO:Importing untrained model
2022-08-16 15:59:02,840:INFO:CatBoost Regressor Imported successfully
2022-08-16 15:59:02,864:INFO:Starting cross validation
2022-08-16 15:59:02,864:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:59:11,431:INFO:Calculating mean and std
2022-08-16 15:59:11,439:INFO:Creating metrics dataframe
2022-08-16 15:59:11,448:INFO:Uploading results into container
2022-08-16 15:59:11,448:INFO:Uploading model into container now
2022-08-16 15:59:11,448:INFO:master_model_container: 20
2022-08-16 15:59:11,448:INFO:display_container: 3
2022-08-16 15:59:11,448:INFO:<catboost.core.CatBoostRegressor object at 0x000001E8D38B1F10>
2022-08-16 15:59:11,448:INFO:create_model() successfully completed......................................
2022-08-16 15:59:11,627:INFO:SubProcess create_model() end ==================================
2022-08-16 15:59:11,627:INFO:Creating metrics dataframe
2022-08-16 15:59:11,659:INFO:Initializing Dummy Regressor
2022-08-16 15:59:11,659:INFO:Total runtime is 0.44562013546625767 minutes
2022-08-16 15:59:11,673:INFO:SubProcess create_model() called ==================================
2022-08-16 15:59:11,673:INFO:Initializing create_model()
2022-08-16 15:59:11,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E8CC8F3190>, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:59:11,673:INFO:Checking exceptions
2022-08-16 15:59:11,681:INFO:Importing libraries
2022-08-16 15:59:11,681:INFO:Copying training dataset
2022-08-16 15:59:11,689:INFO:Defining folds
2022-08-16 15:59:11,689:INFO:Declaring metric variables
2022-08-16 15:59:11,705:INFO:Importing untrained model
2022-08-16 15:59:11,713:INFO:Dummy Regressor Imported successfully
2022-08-16 15:59:11,737:INFO:Starting cross validation
2022-08-16 15:59:11,737:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2022-08-16 15:59:12,496:INFO:Calculating mean and std
2022-08-16 15:59:12,498:INFO:Creating metrics dataframe
2022-08-16 15:59:12,506:INFO:Uploading results into container
2022-08-16 15:59:12,506:INFO:Uploading model into container now
2022-08-16 15:59:12,515:INFO:master_model_container: 21
2022-08-16 15:59:12,515:INFO:display_container: 3
2022-08-16 15:59:12,515:INFO:DummyRegressor()
2022-08-16 15:59:12,515:INFO:create_model() successfully completed......................................
2022-08-16 15:59:12,723:INFO:SubProcess create_model() end ==================================
2022-08-16 15:59:12,723:INFO:Creating metrics dataframe
2022-08-16 15:59:12,789:INFO:Initializing create_model()
2022-08-16 15:59:12,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-08-16 15:59:12,789:INFO:Checking exceptions
2022-08-16 15:59:12,798:INFO:Importing libraries
2022-08-16 15:59:12,806:INFO:Copying training dataset
2022-08-16 15:59:12,806:INFO:Defining folds
2022-08-16 15:59:12,806:INFO:Declaring metric variables
2022-08-16 15:59:12,806:INFO:Importing untrained model
2022-08-16 15:59:12,806:INFO:Declaring custom model
2022-08-16 15:59:12,814:INFO:Gradient Boosting Regressor Imported successfully
2022-08-16 15:59:12,814:INFO:Cross validation set to False
2022-08-16 15:59:12,814:INFO:Fitting Model
2022-08-16 15:59:13,054:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:59:13,054:INFO:create_model() successfully completed......................................
2022-08-16 15:59:13,261:INFO:master_model_container: 21
2022-08-16 15:59:13,261:INFO:display_container: 3
2022-08-16 15:59:13,269:INFO:GradientBoostingRegressor(random_state=123)
2022-08-16 15:59:13,269:INFO:compare_models() successfully completed......................................
2022-08-16 15:59:13,556:INFO:Initializing plot_model()
2022-08-16 15:59:13,556:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=GradientBoostingRegressor(random_state=123), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, system=True)
2022-08-16 15:59:13,556:INFO:Checking exceptions
2022-08-16 15:59:13,572:INFO:Preloading libraries
2022-08-16 15:59:13,614:INFO:Copying training dataset
2022-08-16 15:59:13,614:INFO:Plot type: feature
2022-08-16 15:59:13,614:WARNING:No coef_ found. Trying feature_importances_
2022-08-16 15:59:15,405:INFO:Visual Rendered Successfully
2022-08-16 15:59:15,623:INFO:plot_model() successfully completed......................................
2022-08-16 15:59:15,689:INFO:Initializing plot_model()
2022-08-16 15:59:15,689:INFO:plot_model(plot=residuals, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E8CC104B50>, system=True)
2022-08-16 15:59:15,689:INFO:Checking exceptions
2022-08-16 15:59:15,697:INFO:Preloading libraries
2022-08-16 15:59:15,698:INFO:Copying training dataset
2022-08-16 15:59:15,698:INFO:Plot type: residuals
2022-08-16 15:59:16,156:INFO:Fitting Model
2022-08-16 15:59:16,215:INFO:Scoring test/hold-out set
2022-08-16 15:59:17,156:INFO:Visual Rendered Successfully
2022-08-16 15:59:17,298:INFO:plot_model() successfully completed......................................
2022-08-16 15:59:17,392:INFO:Initializing save_model()
2022-08-16 15:59:17,392:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=deployment_insurance_charges, prep_pipe_=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                               mapping=[{'col': 'sex',
                                                                         'mapping': {nan: -1,
                                                                                     'female': 0,
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2022-08-16 15:59:17,392:INFO:Adding model into prep_pipe
2022-08-16 15:59:17,399:INFO:deployment_insurance_charges.pkl saved in current working directory
2022-08-16 15:59:17,420:INFO:Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]])
2022-08-16 15:59:17,420:INFO:save_model() successfully completed......................................
2022-08-16 16:01:08,729:INFO:Initializing load_model()
2022-08-16 16:01:08,729:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:01:27,551:INFO:Initializing load_model()
2022-08-16 16:01:27,551:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:01:29,742:INFO:Initializing load_model()
2022-08-16 16:01:29,750:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:01:31,478:INFO:Initializing load_model()
2022-08-16 16:01:31,478:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:01:31,592:INFO:Initializing predict_model()
2022-08-16 16:01:31,592:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023278581070>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002327FC11700>)
2022-08-16 16:01:31,592:INFO:Checking exceptions
2022-08-16 16:01:31,592:INFO:Preloading libraries
2022-08-16 16:01:31,600:INFO:Set up data.
2022-08-16 16:03:09,892:INFO:Initializing load_model()
2022-08-16 16:03:09,892:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:14,043:INFO:Initializing load_model()
2022-08-16 16:03:14,043:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:14,187:INFO:Initializing predict_model()
2022-08-16 16:03:14,187:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002327FC3D7F0>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023200002550>)
2022-08-16 16:03:14,187:INFO:Checking exceptions
2022-08-16 16:03:14,187:INFO:Preloading libraries
2022-08-16 16:03:14,195:INFO:Set up data.
2022-08-16 16:03:24,632:INFO:Initializing load_model()
2022-08-16 16:03:24,632:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:24,872:INFO:Initializing load_model()
2022-08-16 16:03:24,872:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:24,992:INFO:Initializing predict_model()
2022-08-16 16:03:24,992:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002327FBDA4F0>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000232783F4A60>)
2022-08-16 16:03:24,992:INFO:Checking exceptions
2022-08-16 16:03:24,992:INFO:Preloading libraries
2022-08-16 16:03:25,000:INFO:Set up data.
2022-08-16 16:03:39,864:INFO:Initializing load_model()
2022-08-16 16:03:39,865:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:40,093:INFO:Initializing load_model()
2022-08-16 16:03:40,093:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:41,425:INFO:Initializing load_model()
2022-08-16 16:03:41,425:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:03:41,537:INFO:Initializing predict_model()
2022-08-16 16:03:41,537:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023278573CD0>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002327FC11940>)
2022-08-16 16:03:41,545:INFO:Checking exceptions
2022-08-16 16:03:41,545:INFO:Preloading libraries
2022-08-16 16:03:41,545:INFO:Set up data.
2022-08-16 16:18:03,683:INFO:Initializing load_model()
2022-08-16 16:18:03,684:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 16:18:03,792:INFO:Initializing predict_model()
2022-08-16 16:18:03,792:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002327F03E070>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000232000399D0>)
2022-08-16 16:18:03,793:INFO:Checking exceptions
2022-08-16 16:18:03,794:INFO:Preloading libraries
2022-08-16 16:18:03,797:INFO:Set up data.
2022-08-16 18:22:04,645:INFO:Initializing load_model()
2022-08-16 18:22:04,646:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 18:22:19,206:INFO:Initializing load_model()
2022-08-16 18:22:19,206:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 18:22:20,206:INFO:Initializing load_model()
2022-08-16 18:22:20,206:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-16 18:22:20,399:INFO:Initializing predict_model()
2022-08-16 18:22:20,407:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002320000FA90>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023200039DC0>)
2022-08-16 18:22:20,407:INFO:Checking exceptions
2022-08-16 18:22:20,407:INFO:Preloading libraries
2022-08-16 18:22:20,407:INFO:Set up data.
2022-08-17 14:59:24,036:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-17 14:59:24,038:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-17 14:59:24,041:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-17 14:59:24,041:WARNING:No module named 'cuml'.
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-08-17 14:59:24,861:INFO:Initializing load_model()
2022-08-17 14:59:24,861:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:05,172:INFO:Initializing load_model()
2022-08-17 15:00:05,173:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:05,268:INFO:Initializing predict_model()
2022-08-17 15:00:05,268:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000131CA76C970>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000131CA7721F0>)
2022-08-17 15:00:05,270:INFO:Checking exceptions
2022-08-17 15:00:05,272:INFO:Preloading libraries
2022-08-17 15:00:05,273:INFO:Set up data.
2022-08-17 15:00:12,767:INFO:Initializing load_model()
2022-08-17 15:00:12,783:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:17,131:INFO:Initializing load_model()
2022-08-17 15:00:17,133:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:17,218:INFO:Initializing predict_model()
2022-08-17 15:00:17,219:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000131CA581790>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000131CA752DC0>)
2022-08-17 15:00:17,221:INFO:Checking exceptions
2022-08-17 15:00:17,222:INFO:Preloading libraries
2022-08-17 15:00:17,224:INFO:Set up data.
2022-08-17 15:00:20,670:INFO:Initializing load_model()
2022-08-17 15:00:20,670:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:22,107:INFO:Initializing load_model()
2022-08-17 15:00:22,107:INFO:load_model(model_name=deployment_insurance_charges, platform=None, authentication=None, verbose=True)
2022-08-17 15:00:22,182:INFO:Initializing predict_model()
2022-08-17 15:00:22,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000131CA799850>, estimator=Pipeline(memory=Memory(location=C:\Users\user\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(fill_value='constant',
                                                              strategy='constant'))),
                ('ordinal_encoding',...
                                                                                     'male': 1}},
                                                                        {'col': 'smoker',
                                                                         'mapping': {nan: -1,
                                                                                     'no': 0,
                                                                                     'yes': 1}}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('low_variance',
                 TransformerWrapper(exclude=[],
                                    transformer=VarianceThreshold(threshold=0))),
                ['trained_model', LinearRegression(n_jobs=-1)]]), probability_threshold=None, encoded_labels=False, raw_score=False, drift_report=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000131CA772E50>)
2022-08-17 15:00:22,186:INFO:Checking exceptions
2022-08-17 15:00:22,187:INFO:Preloading libraries
2022-08-17 15:00:22,189:INFO:Set up data.
